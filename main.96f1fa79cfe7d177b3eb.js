/*! For license information please see main.96f1fa79cfe7d177b3eb.js.LICENSE.txt */
(() => {
    var e, t, n = {
            369: function(e, t, n) {
                ! function(e, t, n, r) {
                    "use strict";

                    function o(e) {
                        return e && "object" == typeof e && "default" in e ? e : {
                            default: e
                        }
                    }
                    var i = o(t),
                        a = o(n),
                        s = o(r),
                        l = function(e, t, n) {
                            return {
                                endTime: t,
                                insertTime: n,
                                type: "exponentialRampToValue",
                                value: e
                            }
                        },
                        u = function(e, t, n) {
                            return {
                                endTime: t,
                                insertTime: n,
                                type: "linearRampToValue",
                                value: e
                            }
                        },
                        c = function(e, t) {
                            return {
                                startTime: t,
                                type: "setValue",
                                value: e
                            }
                        },
                        h = function(e, t, n) {
                            return {
                                duration: n,
                                startTime: t,
                                type: "setValueCurve",
                                values: e
                            }
                        },
                        d = function(e, t, n) {
                            var r = n.startTime,
                                o = n.target,
                                i = n.timeConstant;
                            return o + (t - o) * Math.exp((r - e) / i)
                        },
                        f = function(e) {
                            return "exponentialRampToValue" === e.type
                        },
                        p = function(e) {
                            return "linearRampToValue" === e.type
                        },
                        m = function(e) {
                            return f(e) || p(e)
                        },
                        v = function(e) {
                            return "setValue" === e.type
                        },
                        g = function(e) {
                            return "setValueCurve" === e.type
                        },
                        y = function e(t, n, r, o) {
                            var i = t[n];
                            return void 0 === i ? o : m(i) || v(i) ? i.value : g(i) ? i.values[i.values.length - 1] : d(r, e(t, n - 1, i.startTime, o), i)
                        },
                        b = function(e, t, n, r, o) {
                            return void 0 === n ? [r.insertTime, o] : m(n) ? [n.endTime, n.value] : v(n) ? [n.startTime, n.value] : g(n) ? [n.startTime + n.duration, n.values[n.values.length - 1]] : [n.startTime, y(e, t - 1, n.startTime, o)]
                        },
                        w = function(e) {
                            return "cancelAndHold" === e.type
                        },
                        _ = function(e) {
                            return "cancelScheduledValues" === e.type
                        },
                        x = function(e) {
                            return w(e) || _(e) ? e.cancelTime : f(e) || p(e) ? e.endTime : e.startTime
                        },
                        E = function(e, t, n, r) {
                            var o = r.endTime,
                                i = r.value;
                            return n === i ? i : 0 < n && 0 < i || n < 0 && i < 0 ? n * Math.pow(i / n, (e - t) / (o - t)) : 0
                        },
                        S = function(e, t, n, r) {
                            return n + (e - t) / (r.endTime - t) * (r.value - n)
                        },
                        k = function(e) {
                            return "setTarget" === e.type
                        },
                        T = function(e) {
                            function t(e) {
                                a.default(this, t), this._automationEvents = [], this._currenTime = 0, this._defaultValue = e
                            }
                            return s.default(t, [{
                                key: e,
                                value: function() {
                                    return this._automationEvents[Symbol.iterator]()
                                }
                            }, {
                                key: "add",
                                value: function(e) {
                                    var t = x(e);
                                    if (w(e) || _(e)) {
                                        var n = this._automationEvents.findIndex((function(n) {
                                                return _(e) && g(n) ? n.startTime + n.duration >= t : x(n) >= t
                                            })),
                                            r = this._automationEvents[n];
                                        if (-1 !== n && (this._automationEvents = this._automationEvents.slice(0, n)), w(e)) {
                                            var o = this._automationEvents[this._automationEvents.length - 1];
                                            if (void 0 !== r && m(r)) {
                                                if (k(o)) throw new Error("The internal list is malformed.");
                                                var i = g(o) ? o.startTime + o.duration : x(o),
                                                    a = g(o) ? o.values[o.values.length - 1] : o.value,
                                                    s = f(r) ? E(t, i, a, r) : S(t, i, a, r),
                                                    d = f(r) ? l(s, t, this._currenTime) : u(s, t, this._currenTime);
                                                this._automationEvents.push(d)
                                            }
                                            void 0 !== o && k(o) && this._automationEvents.push(c(this.getValue(t), t)), void 0 !== o && g(o) && o.startTime + o.duration > t && (this._automationEvents[this._automationEvents.length - 1] = h(new Float32Array([6, 7]), o.startTime, t - o.startTime))
                                        }
                                    } else {
                                        var v = this._automationEvents.findIndex((function(e) {
                                                return x(e) > t
                                            })),
                                            y = -1 === v ? this._automationEvents[this._automationEvents.length - 1] : this._automationEvents[v - 1];
                                        if (void 0 !== y && g(y) && x(y) + y.duration > t) return !1;
                                        var b = f(e) ? l(e.value, e.endTime, this._currenTime) : p(e) ? u(e.value, t, this._currenTime) : e;
                                        if (-1 === v) this._automationEvents.push(b);
                                        else {
                                            if (g(e) && t + e.duration > x(this._automationEvents[v])) return !1;
                                            this._automationEvents.splice(v, 0, b)
                                        }
                                    }
                                    return !0
                                }
                            }, {
                                key: "flush",
                                value: function(e) {
                                    var t = this._automationEvents.findIndex((function(t) {
                                        return x(t) > e
                                    }));
                                    if (t > 1) {
                                        var n = this._automationEvents.slice(t - 1),
                                            r = n[0];
                                        k(r) && n.unshift(c(y(this._automationEvents, t - 2, r.startTime, this._defaultValue), r.startTime)), this._automationEvents = n
                                    }
                                }
                            }, {
                                key: "getValue",
                                value: function(e) {
                                    if (0 === this._automationEvents.length) return this._defaultValue;
                                    var t = this._automationEvents.findIndex((function(t) {
                                            return x(t) > e
                                        })),
                                        n = this._automationEvents[t],
                                        r = (-1 === t ? this._automationEvents.length : t) - 1,
                                        o = this._automationEvents[r];
                                    if (void 0 !== o && k(o) && (void 0 === n || !m(n) || n.insertTime > e)) return d(e, y(this._automationEvents, r - 1, o.startTime, this._defaultValue), o);
                                    if (void 0 !== o && v(o) && (void 0 === n || !m(n))) return o.value;
                                    if (void 0 !== o && g(o) && (void 0 === n || !m(n) || o.startTime + o.duration > e)) return e < o.startTime + o.duration ? function(e, t) {
                                        var n = t.duration,
                                            r = t.startTime,
                                            o = t.values;
                                        return function(e, t) {
                                            var n = Math.floor(t),
                                                r = Math.ceil(t);
                                            return n === r ? e[n] : (1 - (t - n)) * e[n] + (1 - (r - t)) * e[r]
                                        }(o, (e - r) / n * (o.length - 1))
                                    }(e, o) : o.values[o.values.length - 1];
                                    if (void 0 !== o && m(o) && (void 0 === n || !m(n))) return o.value;
                                    if (void 0 !== n && f(n)) {
                                        var a = b(this._automationEvents, r, o, n, this._defaultValue),
                                            s = i.default(a, 2),
                                            l = s[0],
                                            u = s[1];
                                        return E(e, l, u, n)
                                    }
                                    if (void 0 !== n && p(n)) {
                                        var c = b(this._automationEvents, r, o, n, this._defaultValue),
                                            h = i.default(c, 2),
                                            w = h[0],
                                            _ = h[1];
                                        return S(e, w, _, n)
                                    }
                                    return this._defaultValue
                                }
                            }]), t
                        }(Symbol.iterator);
                    e.AutomationEventList = T, e.createCancelAndHoldAutomationEvent = function(e) {
                        return {
                            cancelTime: e,
                            type: "cancelAndHold"
                        }
                    }, e.createCancelScheduledValuesAutomationEvent = function(e) {
                        return {
                            cancelTime: e,
                            type: "cancelScheduledValues"
                        }
                    }, e.createExponentialRampToValueAutomationEvent = function(e, t) {
                        return {
                            endTime: t,
                            type: "exponentialRampToValue",
                            value: e
                        }
                    }, e.createLinearRampToValueAutomationEvent = function(e, t) {
                        return {
                            endTime: t,
                            type: "linearRampToValue",
                            value: e
                        }
                    }, e.createSetTargetAutomationEvent = function(e, t, n) {
                        return {
                            startTime: t,
                            target: e,
                            timeConstant: n,
                            type: "setTarget"
                        }
                    }, e.createSetValueAutomationEvent = c, e.createSetValueCurveAutomationEvent = h, Object.defineProperty(e, "__esModule", {
                        value: !0
                    })
                }(t, n(253), n(296), n(0))
            },
            703: (e, t) => {
                var n;
                ! function() {
                    "use strict";
                    var r = {}.hasOwnProperty;

                    function o() {
                        for (var e = [], t = 0; t < arguments.length; t++) {
                            var n = arguments[t];
                            if (n) {
                                var i = typeof n;
                                if ("string" === i || "number" === i) e.push(n);
                                else if (Array.isArray(n)) {
                                    if (n.length) {
                                        var a = o.apply(null, n);
                                        a && e.push(a)
                                    }
                                } else if ("object" === i) {
                                    if (n.toString !== Object.prototype.toString && !n.toString.toString().includes("[native code]")) {
                                        e.push(n.toString());
                                        continue
                                    }
                                    for (var s in n) r.call(n, s) && n[s] && e.push(s)
                                }
                            }
                        }
                        return e.join(" ")
                    }
                    e.exports ? (o.default = o, e.exports = o) : void 0 === (n = function() {
                        return o
                    }.apply(t, [])) || (e.exports = n)
                }()
            },
            762: function(e, t, n) {
                var r, o;
                void 0 === (o = "function" == typeof(r = function() {
                    "use strict";

                    function t(e, t, n) {
                        var r = new XMLHttpRequest;
                        r.open("GET", e), r.responseType = "blob", r.onload = function() {
                            s(r.response, t, n)
                        }, r.onerror = function() {
                            console.error("could not download file")
                        }, r.send()
                    }

                    function r(e) {
                        var t = new XMLHttpRequest;
                        t.open("HEAD", e, !1);
                        try {
                            t.send()
                        } catch (e) {}
                        return 200 <= t.status && 299 >= t.status
                    }

                    function o(e) {
                        try {
                            e.dispatchEvent(new MouseEvent("click"))
                        } catch (n) {
                            var t = document.createEvent("MouseEvents");
                            t.initMouseEvent("click", !0, !0, window, 0, 0, 0, 80, 20, !1, !1, !1, !1, 0, null), e.dispatchEvent(t)
                        }
                    }
                    var i = "object" == typeof window && window.window === window ? window : "object" == typeof self && self.self === self ? self : "object" == typeof n.g && n.g.global === n.g ? n.g : void 0,
                        a = i.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent),
                        s = i.saveAs || ("object" != typeof window || window !== i ? function() {} : "download" in HTMLAnchorElement.prototype && !a ? function(e, n, a) {
                            var s = i.URL || i.webkitURL,
                                l = document.createElement("a");
                            n = n || e.name || "download", l.download = n, l.rel = "noopener", "string" == typeof e ? (l.href = e, l.origin === location.origin ? o(l) : r(l.href) ? t(e, n, a) : o(l, l.target = "_blank")) : (l.href = s.createObjectURL(e), setTimeout((function() {
                                s.revokeObjectURL(l.href)
                            }), 4e4), setTimeout((function() {
                                o(l)
                            }), 0))
                        } : "msSaveOrOpenBlob" in navigator ? function(e, n, i) {
                            if (n = n || e.name || "download", "string" != typeof e) navigator.msSaveOrOpenBlob(function(e, t) {
                                return void 0 === t ? t = {
                                    autoBom: !1
                                } : "object" != typeof t && (console.warn("Deprecated: Expected third argument to be a object"), t = {
                                    autoBom: !t
                                }), t.autoBom && /^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(e.type) ? new Blob(["\ufeff", e], {
                                    type: e.type
                                }) : e
                            }(e, i), n);
                            else if (r(e)) t(e, n, i);
                            else {
                                var a = document.createElement("a");
                                a.href = e, a.target = "_blank", setTimeout((function() {
                                    o(a)
                                }))
                            }
                        } : function(e, n, r, o) {
                            if ((o = o || open("", "_blank")) && (o.document.title = o.document.body.innerText = "downloading..."), "string" == typeof e) return t(e, n, r);
                            var s = "application/octet-stream" === e.type,
                                l = /constructor/i.test(i.HTMLElement) || i.safari,
                                u = /CriOS\/[\d]+/.test(navigator.userAgent);
                            if ((u || s && l || a) && "undefined" != typeof FileReader) {
                                var c = new FileReader;
                                c.onloadend = function() {
                                    var e = c.result;
                                    e = u ? e : e.replace(/^data:[^;]*;/, "data:attachment/file;"), o ? o.location.href = e : location = e, o = null
                                }, c.readAsDataURL(e)
                            } else {
                                var h = i.URL || i.webkitURL,
                                    d = h.createObjectURL(e);
                                o ? o.location = d : location.href = d, o = null, setTimeout((function() {
                                    h.revokeObjectURL(d)
                                }), 4e4)
                            }
                        });
                    i.saveAs = s.saveAs = s, e.exports = s
                }) ? r.apply(t, []) : r) || (e.exports = o)
            },
            347: e => {
                "use strict";
                var t = Object.getOwnPropertySymbols,
                    n = Object.prototype.hasOwnProperty,
                    r = Object.prototype.propertyIsEnumerable;
                e.exports = function() {
                    try {
                        if (!Object.assign) return !1;
                        var e = new String("abc");
                        if (e[5] = "de", "5" === Object.getOwnPropertyNames(e)[0]) return !1;
                        for (var t = {}, n = 0; n < 10; n++) t["_" + String.fromCharCode(n)] = n;
                        if ("0123456789" !== Object.getOwnPropertyNames(t).map((function(e) {
                                return t[e]
                            })).join("")) return !1;
                        var r = {};
                        return "abcdefghijklmnopqrst".split("").forEach((function(e) {
                            r[e] = e
                        })), "abcdefghijklmnopqrst" === Object.keys(Object.assign({}, r)).join("")
                    } catch (e) {
                        return !1
                    }
                }() ? Object.assign : function(e, o) {
                    for (var i, a, s = function(e) {
                            if (null == e) throw new TypeError("Object.assign cannot be called with null or undefined");
                            return Object(e)
                        }(e), l = 1; l < arguments.length; l++) {
                        for (var u in i = Object(arguments[l])) n.call(i, u) && (s[u] = i[u]);
                        if (t) {
                            a = t(i);
                            for (var c = 0; c < a.length; c++) r.call(i, a[c]) && (s[a[c]] = i[a[c]])
                        }
                    }
                    return s
                }
            },
            433: (e, t, n) => {
                "use strict";
                var r = n(642);

                function o() {}

                function i() {}
                i.resetWarningCache = o, e.exports = function() {
                    function e(e, t, n, o, i, a) {
                        if (a !== r) {
                            var s = new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");
                            throw s.name = "Invariant Violation", s
                        }
                    }

                    function t() {
                        return e
                    }
                    e.isRequired = e;
                    var n = {
                        array: e,
                        bigint: e,
                        bool: e,
                        func: e,
                        number: e,
                        object: e,
                        string: e,
                        symbol: e,
                        any: e,
                        arrayOf: t,
                        element: e,
                        elementType: e,
                        instanceOf: t,
                        node: e,
                        objectOf: t,
                        oneOf: t,
                        oneOfType: t,
                        shape: t,
                        exact: t,
                        checkPropTypes: i,
                        resetWarningCache: o
                    };
                    return n.PropTypes = n, n
                }
            },
            74: (e, t, n) => {
                e.exports = n(433)()
            },
            642: e => {
                "use strict";
                e.exports = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"
            },
            748: (e, t, n) => {
                "use strict";
                var r = n(466),
                    o = n(767);

                function i(e) {
                    for (var t = "https://reactjs.org/docs/error-decoder.html?invariant=" + e, n = 1; n < arguments.length; n++) t += "&args[]=" + encodeURIComponent(arguments[n]);
                    return "Minified React error #" + e + "; visit " + t + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings."
                }
                var a = new Set,
                    s = {};

                function l(e, t) {
                    u(e, t), u(e + "Capture", t)
                }

                function u(e, t) {
                    for (s[e] = t, e = 0; e < t.length; e++) a.add(t[e])
                }
                var c = !("undefined" == typeof window || void 0 === window.document || void 0 === window.document.createElement),
                    h = Object.prototype.hasOwnProperty,
                    d = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,
                    f = {},
                    p = {};

                function m(e, t, n, r, o, i, a) {
                    this.acceptsBooleans = 2 === t || 3 === t || 4 === t, this.attributeName = r, this.attributeNamespace = o, this.mustUseProperty = n, this.propertyName = e, this.type = t, this.sanitizeURL = i, this.removeEmptyString = a
                }
                var v = {};
                "children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e) {
                    v[e] = new m(e, 0, !1, e, null, !1, !1)
                })), [
                    ["acceptCharset", "accept-charset"],
                    ["className", "class"],
                    ["htmlFor", "for"],
                    ["httpEquiv", "http-equiv"]
                ].forEach((function(e) {
                    var t = e[0];
                    v[t] = new m(t, 1, !1, e[1], null, !1, !1)
                })), ["contentEditable", "draggable", "spellCheck", "value"].forEach((function(e) {
                    v[e] = new m(e, 2, !1, e.toLowerCase(), null, !1, !1)
                })), ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach((function(e) {
                    v[e] = new m(e, 2, !1, e, null, !1, !1)
                })), "allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e) {
                    v[e] = new m(e, 3, !1, e.toLowerCase(), null, !1, !1)
                })), ["checked", "multiple", "muted", "selected"].forEach((function(e) {
                    v[e] = new m(e, 3, !0, e, null, !1, !1)
                })), ["capture", "download"].forEach((function(e) {
                    v[e] = new m(e, 4, !1, e, null, !1, !1)
                })), ["cols", "rows", "size", "span"].forEach((function(e) {
                    v[e] = new m(e, 6, !1, e, null, !1, !1)
                })), ["rowSpan", "start"].forEach((function(e) {
                    v[e] = new m(e, 5, !1, e.toLowerCase(), null, !1, !1)
                }));
                var g = /[\-:]([a-z])/g;

                function y(e) {
                    return e[1].toUpperCase()
                }

                function b(e, t, n, r) {
                    var o = v.hasOwnProperty(t) ? v[t] : null;
                    (null !== o ? 0 !== o.type : r || !(2 < t.length) || "o" !== t[0] && "O" !== t[0] || "n" !== t[1] && "N" !== t[1]) && (function(e, t, n, r) {
                        if (null == t || function(e, t, n, r) {
                                if (null !== n && 0 === n.type) return !1;
                                switch (typeof t) {
                                    case "function":
                                    case "symbol":
                                        return !0;
                                    case "boolean":
                                        return !r && (null !== n ? !n.acceptsBooleans : "data-" !== (e = e.toLowerCase().slice(0, 5)) && "aria-" !== e);
                                    default:
                                        return !1
                                }
                            }(e, t, n, r)) return !0;
                        if (r) return !1;
                        if (null !== n) switch (n.type) {
                            case 3:
                                return !t;
                            case 4:
                                return !1 === t;
                            case 5:
                                return isNaN(t);
                            case 6:
                                return isNaN(t) || 1 > t
                        }
                        return !1
                    }(t, n, o, r) && (n = null), r || null === o ? function(e) {
                        return !!h.call(p, e) || !h.call(f, e) && (d.test(e) ? p[e] = !0 : (f[e] = !0, !1))
                    }(t) && (null === n ? e.removeAttribute(t) : e.setAttribute(t, "" + n)) : o.mustUseProperty ? e[o.propertyName] = null === n ? 3 !== o.type && "" : n : (t = o.attributeName, r = o.attributeNamespace, null === n ? e.removeAttribute(t) : (n = 3 === (o = o.type) || 4 === o && !0 === n ? "" : "" + n, r ? e.setAttributeNS(r, t, n) : e.setAttribute(t, n))))
                }
                "accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e) {
                    var t = e.replace(g, y);
                    v[t] = new m(t, 1, !1, e, null, !1, !1)
                })), "xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e) {
                    var t = e.replace(g, y);
                    v[t] = new m(t, 1, !1, e, "http://www.w3.org/1999/xlink", !1, !1)
                })), ["xml:base", "xml:lang", "xml:space"].forEach((function(e) {
                    var t = e.replace(g, y);
                    v[t] = new m(t, 1, !1, e, "http://www.w3.org/XML/1998/namespace", !1, !1)
                })), ["tabIndex", "crossOrigin"].forEach((function(e) {
                    v[e] = new m(e, 1, !1, e.toLowerCase(), null, !1, !1)
                })), v.xlinkHref = new m("xlinkHref", 1, !1, "xlink:href", "http://www.w3.org/1999/xlink", !0, !1), ["src", "href", "action", "formAction"].forEach((function(e) {
                    v[e] = new m(e, 1, !1, e.toLowerCase(), null, !0, !0)
                }));
                var w = r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
                    _ = Symbol.for("react.element"),
                    x = Symbol.for("react.portal"),
                    E = Symbol.for("react.fragment"),
                    S = Symbol.for("react.strict_mode"),
                    k = Symbol.for("react.profiler"),
                    T = Symbol.for("react.provider"),
                    C = Symbol.for("react.context"),
                    O = Symbol.for("react.forward_ref"),
                    A = Symbol.for("react.suspense"),
                    P = Symbol.for("react.suspense_list"),
                    R = Symbol.for("react.memo"),
                    M = Symbol.for("react.lazy");
                Symbol.for("react.scope"), Symbol.for("react.debug_trace_mode");
                var D = Symbol.for("react.offscreen");
                Symbol.for("react.legacy_hidden"), Symbol.for("react.cache"), Symbol.for("react.tracing_marker");
                var N = Symbol.iterator;

                function I(e) {
                    return null === e || "object" != typeof e ? null : "function" == typeof(e = N && e[N] || e["@@iterator"]) ? e : null
                }
                var L, q = Object.assign;

                function j(e) {
                    if (void 0 === L) try {
                        throw Error()
                    } catch (e) {
                        var t = e.stack.trim().match(/\n( *(at )?)/);
                        L = t && t[1] || ""
                    }
                    return "\n" + L + e
                }
                var F = !1;

                function V(e, t) {
                    if (!e || F) return "";
                    F = !0;
                    var n = Error.prepareStackTrace;
                    Error.prepareStackTrace = void 0;
                    try {
                        if (t)
                            if (t = function() {
                                    throw Error()
                                }, Object.defineProperty(t.prototype, "props", {
                                    set: function() {
                                        throw Error()
                                    }
                                }), "object" == typeof Reflect && Reflect.construct) {
                                try {
                                    Reflect.construct(t, [])
                                } catch (e) {
                                    var r = e
                                }
                                Reflect.construct(e, [], t)
                            } else {
                                try {
                                    t.call()
                                } catch (e) {
                                    r = e
                                }
                                e.call(t.prototype)
                            }
                        else {
                            try {
                                throw Error()
                            } catch (e) {
                                r = e
                            }
                            e()
                        }
                    } catch (t) {
                        if (t && r && "string" == typeof t.stack) {
                            for (var o = t.stack.split("\n"), i = r.stack.split("\n"), a = o.length - 1, s = i.length - 1; 1 <= a && 0 <= s && o[a] !== i[s];) s--;
                            for (; 1 <= a && 0 <= s; a--, s--)
                                if (o[a] !== i[s]) {
                                    if (1 !== a || 1 !== s)
                                        do {
                                            if (a--, 0 > --s || o[a] !== i[s]) {
                                                var l = "\n" + o[a].replace(" at new ", " at ");
                                                return e.displayName && l.includes("<anonymous>") && (l = l.replace("<anonymous>", e.displayName)), l
                                            }
                                        } while (1 <= a && 0 <= s);
                                    break
                                }
                        }
                    } finally {
                        F = !1, Error.prepareStackTrace = n
                    }
                    return (e = e ? e.displayName || e.name : "") ? j(e) : ""
                }

                function B(e) {
                    switch (e.tag) {
                        case 5:
                            return j(e.type);
                        case 16:
                            return j("Lazy");
                        case 13:
                            return j("Suspense");
                        case 19:
                            return j("SuspenseList");
                        case 0:
                        case 2:
                        case 15:
                            return V(e.type, !1);
                        case 11:
                            return V(e.type.render, !1);
                        case 1:
                            return V(e.type, !0);
                        default:
                            return ""
                    }
                }

                function z(e) {
                    if (null == e) return null;
                    if ("function" == typeof e) return e.displayName || e.name || null;
                    if ("string" == typeof e) return e;
                    switch (e) {
                        case E:
                            return "Fragment";
                        case x:
                            return "Portal";
                        case k:
                            return "Profiler";
                        case S:
                            return "StrictMode";
                        case A:
                            return "Suspense";
                        case P:
                            return "SuspenseList"
                    }
                    if ("object" == typeof e) switch (e.$$typeof) {
                        case C:
                            return (e.displayName || "Context") + ".Consumer";
                        case T:
                            return (e._context.displayName || "Context") + ".Provider";
                        case O:
                            var t = e.render;
                            return (e = e.displayName) || (e = "" !== (e = t.displayName || t.name || "") ? "ForwardRef(" + e + ")" : "ForwardRef"), e;
                        case R:
                            return null !== (t = e.displayName || null) ? t : z(e.type) || "Memo";
                        case M:
                            t = e._payload, e = e._init;
                            try {
                                return z(e(t))
                            } catch (e) {}
                    }
                    return null
                }

                function U(e) {
                    var t = e.type;
                    switch (e.tag) {
                        case 24:
                            return "Cache";
                        case 9:
                            return (t.displayName || "Context") + ".Consumer";
                        case 10:
                            return (t._context.displayName || "Context") + ".Provider";
                        case 18:
                            return "DehydratedFragment";
                        case 11:
                            return e = (e = t.render).displayName || e.name || "", t.displayName || ("" !== e ? "ForwardRef(" + e + ")" : "ForwardRef");
                        case 7:
                            return "Fragment";
                        case 5:
                            return t;
                        case 4:
                            return "Portal";
                        case 3:
                            return "Root";
                        case 6:
                            return "Text";
                        case 16:
                            return z(t);
                        case 8:
                            return t === S ? "StrictMode" : "Mode";
                        case 22:
                            return "Offscreen";
                        case 12:
                            return "Profiler";
                        case 21:
                            return "Scope";
                        case 13:
                            return "Suspense";
                        case 19:
                            return "SuspenseList";
                        case 25:
                            return "TracingMarker";
                        case 1:
                        case 0:
                        case 17:
                        case 2:
                        case 14:
                        case 15:
                            if ("function" == typeof t) return t.displayName || t.name || null;
                            if ("string" == typeof t) return t
                    }
                    return null
                }

                function W(e) {
                    switch (typeof e) {
                        case "boolean":
                        case "number":
                        case "string":
                        case "undefined":
                        case "object":
                            return e;
                        default:
                            return ""
                    }
                }

                function H(e) {
                    var t = e.type;
                    return (e = e.nodeName) && "input" === e.toLowerCase() && ("checkbox" === t || "radio" === t)
                }

                function G(e) {
                    e._valueTracker || (e._valueTracker = function(e) {
                        var t = H(e) ? "checked" : "value",
                            n = Object.getOwnPropertyDescriptor(e.constructor.prototype, t),
                            r = "" + e[t];
                        if (!e.hasOwnProperty(t) && void 0 !== n && "function" == typeof n.get && "function" == typeof n.set) {
                            var o = n.get,
                                i = n.set;
                            return Object.defineProperty(e, t, {
                                configurable: !0,
                                get: function() {
                                    return o.call(this)
                                },
                                set: function(e) {
                                    r = "" + e, i.call(this, e)
                                }
                            }), Object.defineProperty(e, t, {
                                enumerable: n.enumerable
                            }), {
                                getValue: function() {
                                    return r
                                },
                                setValue: function(e) {
                                    r = "" + e
                                },
                                stopTracking: function() {
                                    e._valueTracker = null, delete e[t]
                                }
                            }
                        }
                    }(e))
                }

                function Q(e) {
                    if (!e) return !1;
                    var t = e._valueTracker;
                    if (!t) return !0;
                    var n = t.getValue(),
                        r = "";
                    return e && (r = H(e) ? e.checked ? "true" : "false" : e.value), (e = r) !== n && (t.setValue(e), !0)
                }

                function Y(e) {
                    if (void 0 === (e = e || ("undefined" != typeof document ? document : void 0))) return null;
                    try {
                        return e.activeElement || e.body
                    } catch (t) {
                        return e.body
                    }
                }

                function $(e, t) {
                    var n = t.checked;
                    return q({}, t, {
                        defaultChecked: void 0,
                        defaultValue: void 0,
                        value: void 0,
                        checked: null != n ? n : e._wrapperState.initialChecked
                    })
                }

                function Z(e, t) {
                    var n = null == t.defaultValue ? "" : t.defaultValue,
                        r = null != t.checked ? t.checked : t.defaultChecked;
                    n = W(null != t.value ? t.value : n), e._wrapperState = {
                        initialChecked: r,
                        initialValue: n,
                        controlled: "checkbox" === t.type || "radio" === t.type ? null != t.checked : null != t.value
                    }
                }

                function X(e, t) {
                    null != (t = t.checked) && b(e, "checked", t, !1)
                }

                function K(e, t) {
                    X(e, t);
                    var n = W(t.value),
                        r = t.type;
                    if (null != n) "number" === r ? (0 === n && "" === e.value || e.value != n) && (e.value = "" + n) : e.value !== "" + n && (e.value = "" + n);
                    else if ("submit" === r || "reset" === r) return void e.removeAttribute("value");
                    t.hasOwnProperty("value") ? ee(e, t.type, n) : t.hasOwnProperty("defaultValue") && ee(e, t.type, W(t.defaultValue)), null == t.checked && null != t.defaultChecked && (e.defaultChecked = !!t.defaultChecked)
                }

                function J(e, t, n) {
                    if (t.hasOwnProperty("value") || t.hasOwnProperty("defaultValue")) {
                        var r = t.type;
                        if (!("submit" !== r && "reset" !== r || void 0 !== t.value && null !== t.value)) return;
                        t = "" + e._wrapperState.initialValue, n || t === e.value || (e.value = t), e.defaultValue = t
                    }
                    "" !== (n = e.name) && (e.name = ""), e.defaultChecked = !!e._wrapperState.initialChecked, "" !== n && (e.name = n)
                }

                function ee(e, t, n) {
                    "number" === t && Y(e.ownerDocument) === e || (null == n ? e.defaultValue = "" + e._wrapperState.initialValue : e.defaultValue !== "" + n && (e.defaultValue = "" + n))
                }
                var te = Array.isArray;

                function ne(e, t, n, r) {
                    if (e = e.options, t) {
                        t = {};
                        for (var o = 0; o < n.length; o++) t["$" + n[o]] = !0;
                        for (n = 0; n < e.length; n++) o = t.hasOwnProperty("$" + e[n].value), e[n].selected !== o && (e[n].selected = o), o && r && (e[n].defaultSelected = !0)
                    } else {
                        for (n = "" + W(n), t = null, o = 0; o < e.length; o++) {
                            if (e[o].value === n) return e[o].selected = !0, void(r && (e[o].defaultSelected = !0));
                            null !== t || e[o].disabled || (t = e[o])
                        }
                        null !== t && (t.selected = !0)
                    }
                }

                function re(e, t) {
                    if (null != t.dangerouslySetInnerHTML) throw Error(i(91));
                    return q({}, t, {
                        value: void 0,
                        defaultValue: void 0,
                        children: "" + e._wrapperState.initialValue
                    })
                }

                function oe(e, t) {
                    var n = t.value;
                    if (null == n) {
                        if (n = t.children, t = t.defaultValue, null != n) {
                            if (null != t) throw Error(i(92));
                            if (te(n)) {
                                if (1 < n.length) throw Error(i(93));
                                n = n[0]
                            }
                            t = n
                        }
                        null == t && (t = ""), n = t
                    }
                    e._wrapperState = {
                        initialValue: W(n)
                    }
                }

                function ie(e, t) {
                    var n = W(t.value),
                        r = W(t.defaultValue);
                    null != n && ((n = "" + n) !== e.value && (e.value = n), null == t.defaultValue && e.defaultValue !== n && (e.defaultValue = n)), null != r && (e.defaultValue = "" + r)
                }

                function ae(e) {
                    var t = e.textContent;
                    t === e._wrapperState.initialValue && "" !== t && null !== t && (e.value = t)
                }

                function se(e) {
                    switch (e) {
                        case "svg":
                            return "http://www.w3.org/2000/svg";
                        case "math":
                            return "http://www.w3.org/1998/Math/MathML";
                        default:
                            return "http://www.w3.org/1999/xhtml"
                    }
                }

                function le(e, t) {
                    return null == e || "http://www.w3.org/1999/xhtml" === e ? se(t) : "http://www.w3.org/2000/svg" === e && "foreignObject" === t ? "http://www.w3.org/1999/xhtml" : e
                }
                var ue, ce, he = (ce = function(e, t) {
                    if ("http://www.w3.org/2000/svg" !== e.namespaceURI || "innerHTML" in e) e.innerHTML = t;
                    else {
                        for ((ue = ue || document.createElement("div")).innerHTML = "<svg>" + t.valueOf().toString() + "</svg>", t = ue.firstChild; e.firstChild;) e.removeChild(e.firstChild);
                        for (; t.firstChild;) e.appendChild(t.firstChild)
                    }
                }, "undefined" != typeof MSApp && MSApp.execUnsafeLocalFunction ? function(e, t, n, r) {
                    MSApp.execUnsafeLocalFunction((function() {
                        return ce(e, t)
                    }))
                } : ce);

                function de(e, t) {
                    if (t) {
                        var n = e.firstChild;
                        if (n && n === e.lastChild && 3 === n.nodeType) return void(n.nodeValue = t)
                    }
                    e.textContent = t
                }
                var fe = {
                        animationIterationCount: !0,
                        aspectRatio: !0,
                        borderImageOutset: !0,
                        borderImageSlice: !0,
                        borderImageWidth: !0,
                        boxFlex: !0,
                        boxFlexGroup: !0,
                        boxOrdinalGroup: !0,
                        columnCount: !0,
                        columns: !0,
                        flex: !0,
                        flexGrow: !0,
                        flexPositive: !0,
                        flexShrink: !0,
                        flexNegative: !0,
                        flexOrder: !0,
                        gridArea: !0,
                        gridRow: !0,
                        gridRowEnd: !0,
                        gridRowSpan: !0,
                        gridRowStart: !0,
                        gridColumn: !0,
                        gridColumnEnd: !0,
                        gridColumnSpan: !0,
                        gridColumnStart: !0,
                        fontWeight: !0,
                        lineClamp: !0,
                        lineHeight: !0,
                        opacity: !0,
                        order: !0,
                        orphans: !0,
                        tabSize: !0,
                        widows: !0,
                        zIndex: !0,
                        zoom: !0,
                        fillOpacity: !0,
                        floodOpacity: !0,
                        stopOpacity: !0,
                        strokeDasharray: !0,
                        strokeDashoffset: !0,
                        strokeMiterlimit: !0,
                        strokeOpacity: !0,
                        strokeWidth: !0
                    },
                    pe = ["Webkit", "ms", "Moz", "O"];

                function me(e, t, n) {
                    return null == t || "boolean" == typeof t || "" === t ? "" : n || "number" != typeof t || 0 === t || fe.hasOwnProperty(e) && fe[e] ? ("" + t).trim() : t + "px"
                }

                function ve(e, t) {
                    for (var n in e = e.style, t)
                        if (t.hasOwnProperty(n)) {
                            var r = 0 === n.indexOf("--"),
                                o = me(n, t[n], r);
                            "float" === n && (n = "cssFloat"), r ? e.setProperty(n, o) : e[n] = o
                        }
                }
                Object.keys(fe).forEach((function(e) {
                    pe.forEach((function(t) {
                        t = t + e.charAt(0).toUpperCase() + e.substring(1), fe[t] = fe[e]
                    }))
                }));
                var ge = q({
                    menuitem: !0
                }, {
                    area: !0,
                    base: !0,
                    br: !0,
                    col: !0,
                    embed: !0,
                    hr: !0,
                    img: !0,
                    input: !0,
                    keygen: !0,
                    link: !0,
                    meta: !0,
                    param: !0,
                    source: !0,
                    track: !0,
                    wbr: !0
                });

                function ye(e, t) {
                    if (t) {
                        if (ge[e] && (null != t.children || null != t.dangerouslySetInnerHTML)) throw Error(i(137, e));
                        if (null != t.dangerouslySetInnerHTML) {
                            if (null != t.children) throw Error(i(60));
                            if ("object" != typeof t.dangerouslySetInnerHTML || !("__html" in t.dangerouslySetInnerHTML)) throw Error(i(61))
                        }
                        if (null != t.style && "object" != typeof t.style) throw Error(i(62))
                    }
                }

                function be(e, t) {
                    if (-1 === e.indexOf("-")) return "string" == typeof t.is;
                    switch (e) {
                        case "annotation-xml":
                        case "color-profile":
                        case "font-face":
                        case "font-face-src":
                        case "font-face-uri":
                        case "font-face-format":
                        case "font-face-name":
                        case "missing-glyph":
                            return !1;
                        default:
                            return !0
                    }
                }
                var we = null;

                function _e(e) {
                    return (e = e.target || e.srcElement || window).correspondingUseElement && (e = e.correspondingUseElement), 3 === e.nodeType ? e.parentNode : e
                }
                var xe = null,
                    Ee = null,
                    Se = null;

                function ke(e) {
                    if (e = wo(e)) {
                        if ("function" != typeof xe) throw Error(i(280));
                        var t = e.stateNode;
                        t && (t = xo(t), xe(e.stateNode, e.type, t))
                    }
                }

                function Te(e) {
                    Ee ? Se ? Se.push(e) : Se = [e] : Ee = e
                }

                function Ce() {
                    if (Ee) {
                        var e = Ee,
                            t = Se;
                        if (Se = Ee = null, ke(e), t)
                            for (e = 0; e < t.length; e++) ke(t[e])
                    }
                }

                function Oe(e, t) {
                    return e(t)
                }

                function Ae() {}
                var Pe = !1;

                function Re(e, t, n) {
                    if (Pe) return e(t, n);
                    Pe = !0;
                    try {
                        return Oe(e, t, n)
                    } finally {
                        Pe = !1, (null !== Ee || null !== Se) && (Ae(), Ce())
                    }
                }

                function Me(e, t) {
                    var n = e.stateNode;
                    if (null === n) return null;
                    var r = xo(n);
                    if (null === r) return null;
                    n = r[t];
                    e: switch (t) {
                        case "onClick":
                        case "onClickCapture":
                        case "onDoubleClick":
                        case "onDoubleClickCapture":
                        case "onMouseDown":
                        case "onMouseDownCapture":
                        case "onMouseMove":
                        case "onMouseMoveCapture":
                        case "onMouseUp":
                        case "onMouseUpCapture":
                        case "onMouseEnter":
                            (r = !r.disabled) || (r = !("button" === (e = e.type) || "input" === e || "select" === e || "textarea" === e)), e = !r;
                            break e;
                        default:
                            e = !1
                    }
                    if (e) return null;
                    if (n && "function" != typeof n) throw Error(i(231, t, typeof n));
                    return n
                }
                var De = !1;
                if (c) try {
                    var Ne = {};
                    Object.defineProperty(Ne, "passive", {
                        get: function() {
                            De = !0
                        }
                    }), window.addEventListener("test", Ne, Ne), window.removeEventListener("test", Ne, Ne)
                } catch (ce) {
                    De = !1
                }

                function Ie(e, t, n, r, o, i, a, s, l) {
                    var u = Array.prototype.slice.call(arguments, 3);
                    try {
                        t.apply(n, u)
                    } catch (e) {
                        this.onError(e)
                    }
                }
                var Le = !1,
                    qe = null,
                    je = !1,
                    Fe = null,
                    Ve = {
                        onError: function(e) {
                            Le = !0, qe = e
                        }
                    };

                function Be(e, t, n, r, o, i, a, s, l) {
                    Le = !1, qe = null, Ie.apply(Ve, arguments)
                }

                function ze(e) {
                    var t = e,
                        n = e;
                    if (e.alternate)
                        for (; t.return;) t = t.return;
                    else {
                        e = t;
                        do {
                            0 != (4098 & (t = e).flags) && (n = t.return), e = t.return
                        } while (e)
                    }
                    return 3 === t.tag ? n : null
                }

                function Ue(e) {
                    if (13 === e.tag) {
                        var t = e.memoizedState;
                        if (null === t && null !== (e = e.alternate) && (t = e.memoizedState), null !== t) return t.dehydrated
                    }
                    return null
                }

                function We(e) {
                    if (ze(e) !== e) throw Error(i(188))
                }

                function He(e) {
                    return null !== (e = function(e) {
                        var t = e.alternate;
                        if (!t) {
                            if (null === (t = ze(e))) throw Error(i(188));
                            return t !== e ? null : e
                        }
                        for (var n = e, r = t;;) {
                            var o = n.return;
                            if (null === o) break;
                            var a = o.alternate;
                            if (null === a) {
                                if (null !== (r = o.return)) {
                                    n = r;
                                    continue
                                }
                                break
                            }
                            if (o.child === a.child) {
                                for (a = o.child; a;) {
                                    if (a === n) return We(o), e;
                                    if (a === r) return We(o), t;
                                    a = a.sibling
                                }
                                throw Error(i(188))
                            }
                            if (n.return !== r.return) n = o, r = a;
                            else {
                                for (var s = !1, l = o.child; l;) {
                                    if (l === n) {
                                        s = !0, n = o, r = a;
                                        break
                                    }
                                    if (l === r) {
                                        s = !0, r = o, n = a;
                                        break
                                    }
                                    l = l.sibling
                                }
                                if (!s) {
                                    for (l = a.child; l;) {
                                        if (l === n) {
                                            s = !0, n = a, r = o;
                                            break
                                        }
                                        if (l === r) {
                                            s = !0, r = a, n = o;
                                            break
                                        }
                                        l = l.sibling
                                    }
                                    if (!s) throw Error(i(189))
                                }
                            }
                            if (n.alternate !== r) throw Error(i(190))
                        }
                        if (3 !== n.tag) throw Error(i(188));
                        return n.stateNode.current === n ? e : t
                    }(e)) ? Ge(e) : null
                }

                function Ge(e) {
                    if (5 === e.tag || 6 === e.tag) return e;
                    for (e = e.child; null !== e;) {
                        var t = Ge(e);
                        if (null !== t) return t;
                        e = e.sibling
                    }
                    return null
                }
                var Qe = o.unstable_scheduleCallback,
                    Ye = o.unstable_cancelCallback,
                    $e = o.unstable_shouldYield,
                    Ze = o.unstable_requestPaint,
                    Xe = o.unstable_now,
                    Ke = o.unstable_getCurrentPriorityLevel,
                    Je = o.unstable_ImmediatePriority,
                    et = o.unstable_UserBlockingPriority,
                    tt = o.unstable_NormalPriority,
                    nt = o.unstable_LowPriority,
                    rt = o.unstable_IdlePriority,
                    ot = null,
                    it = null,
                    at = Math.clz32 ? Math.clz32 : function(e) {
                        return 0 == (e >>>= 0) ? 32 : 31 - (st(e) / lt | 0) | 0
                    },
                    st = Math.log,
                    lt = Math.LN2,
                    ut = 64,
                    ct = 4194304;

                function ht(e) {
                    switch (e & -e) {
                        case 1:
                            return 1;
                        case 2:
                            return 2;
                        case 4:
                            return 4;
                        case 8:
                            return 8;
                        case 16:
                            return 16;
                        case 32:
                            return 32;
                        case 64:
                        case 128:
                        case 256:
                        case 512:
                        case 1024:
                        case 2048:
                        case 4096:
                        case 8192:
                        case 16384:
                        case 32768:
                        case 65536:
                        case 131072:
                        case 262144:
                        case 524288:
                        case 1048576:
                        case 2097152:
                            return 4194240 & e;
                        case 4194304:
                        case 8388608:
                        case 16777216:
                        case 33554432:
                        case 67108864:
                            return 130023424 & e;
                        case 134217728:
                            return 134217728;
                        case 268435456:
                            return 268435456;
                        case 536870912:
                            return 536870912;
                        case 1073741824:
                            return 1073741824;
                        default:
                            return e
                    }
                }

                function dt(e, t) {
                    var n = e.pendingLanes;
                    if (0 === n) return 0;
                    var r = 0,
                        o = e.suspendedLanes,
                        i = e.pingedLanes,
                        a = 268435455 & n;
                    if (0 !== a) {
                        var s = a & ~o;
                        0 !== s ? r = ht(s) : 0 != (i &= a) && (r = ht(i))
                    } else 0 != (a = n & ~o) ? r = ht(a) : 0 !== i && (r = ht(i));
                    if (0 === r) return 0;
                    if (0 !== t && t !== r && 0 == (t & o) && ((o = r & -r) >= (i = t & -t) || 16 === o && 0 != (4194240 & i))) return t;
                    if (0 != (4 & r) && (r |= 16 & n), 0 !== (t = e.entangledLanes))
                        for (e = e.entanglements, t &= r; 0 < t;) o = 1 << (n = 31 - at(t)), r |= e[n], t &= ~o;
                    return r
                }

                function ft(e, t) {
                    switch (e) {
                        case 1:
                        case 2:
                        case 4:
                            return t + 250;
                        case 8:
                        case 16:
                        case 32:
                        case 64:
                        case 128:
                        case 256:
                        case 512:
                        case 1024:
                        case 2048:
                        case 4096:
                        case 8192:
                        case 16384:
                        case 32768:
                        case 65536:
                        case 131072:
                        case 262144:
                        case 524288:
                        case 1048576:
                        case 2097152:
                            return t + 5e3;
                        default:
                            return -1
                    }
                }

                function pt(e) {
                    return 0 != (e = -1073741825 & e.pendingLanes) ? e : 1073741824 & e ? 1073741824 : 0
                }

                function mt() {
                    var e = ut;
                    return 0 == (4194240 & (ut <<= 1)) && (ut = 64), e
                }

                function vt(e) {
                    for (var t = [], n = 0; 31 > n; n++) t.push(e);
                    return t
                }

                function gt(e, t, n) {
                    e.pendingLanes |= t, 536870912 !== t && (e.suspendedLanes = 0, e.pingedLanes = 0), (e = e.eventTimes)[t = 31 - at(t)] = n
                }

                function yt(e, t) {
                    var n = e.entangledLanes |= t;
                    for (e = e.entanglements; n;) {
                        var r = 31 - at(n),
                            o = 1 << r;
                        o & t | e[r] & t && (e[r] |= t), n &= ~o
                    }
                }
                var bt = 0;

                function wt(e) {
                    return 1 < (e &= -e) ? 4 < e ? 0 != (268435455 & e) ? 16 : 536870912 : 4 : 1
                }
                var _t, xt, Et, St, kt, Tt = !1,
                    Ct = [],
                    Ot = null,
                    At = null,
                    Pt = null,
                    Rt = new Map,
                    Mt = new Map,
                    Dt = [],
                    Nt = "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");

                function It(e, t) {
                    switch (e) {
                        case "focusin":
                        case "focusout":
                            Ot = null;
                            break;
                        case "dragenter":
                        case "dragleave":
                            At = null;
                            break;
                        case "mouseover":
                        case "mouseout":
                            Pt = null;
                            break;
                        case "pointerover":
                        case "pointerout":
                            Rt.delete(t.pointerId);
                            break;
                        case "gotpointercapture":
                        case "lostpointercapture":
                            Mt.delete(t.pointerId)
                    }
                }

                function Lt(e, t, n, r, o, i) {
                    return null === e || e.nativeEvent !== i ? (e = {
                        blockedOn: t,
                        domEventName: n,
                        eventSystemFlags: r,
                        nativeEvent: i,
                        targetContainers: [o]
                    }, null !== t && null !== (t = wo(t)) && xt(t), e) : (e.eventSystemFlags |= r, t = e.targetContainers, null !== o && -1 === t.indexOf(o) && t.push(o), e)
                }

                function qt(e) {
                    var t = bo(e.target);
                    if (null !== t) {
                        var n = ze(t);
                        if (null !== n)
                            if (13 === (t = n.tag)) {
                                if (null !== (t = Ue(n))) return e.blockedOn = t, void kt(e.priority, (function() {
                                    Et(n)
                                }))
                            } else if (3 === t && n.stateNode.current.memoizedState.isDehydrated) return void(e.blockedOn = 3 === n.tag ? n.stateNode.containerInfo : null)
                    }
                    e.blockedOn = null
                }

                function jt(e) {
                    if (null !== e.blockedOn) return !1;
                    for (var t = e.targetContainers; 0 < t.length;) {
                        var n = $t(e.domEventName, e.eventSystemFlags, t[0], e.nativeEvent);
                        if (null !== n) return null !== (t = wo(n)) && xt(t), e.blockedOn = n, !1;
                        var r = new(n = e.nativeEvent).constructor(n.type, n);
                        we = r, n.target.dispatchEvent(r), we = null, t.shift()
                    }
                    return !0
                }

                function Ft(e, t, n) {
                    jt(e) && n.delete(t)
                }

                function Vt() {
                    Tt = !1, null !== Ot && jt(Ot) && (Ot = null), null !== At && jt(At) && (At = null), null !== Pt && jt(Pt) && (Pt = null), Rt.forEach(Ft), Mt.forEach(Ft)
                }

                function Bt(e, t) {
                    e.blockedOn === t && (e.blockedOn = null, Tt || (Tt = !0, o.unstable_scheduleCallback(o.unstable_NormalPriority, Vt)))
                }

                function zt(e) {
                    function t(t) {
                        return Bt(t, e)
                    }
                    if (0 < Ct.length) {
                        Bt(Ct[0], e);
                        for (var n = 1; n < Ct.length; n++) {
                            var r = Ct[n];
                            r.blockedOn === e && (r.blockedOn = null)
                        }
                    }
                    for (null !== Ot && Bt(Ot, e), null !== At && Bt(At, e), null !== Pt && Bt(Pt, e), Rt.forEach(t), Mt.forEach(t), n = 0; n < Dt.length; n++)(r = Dt[n]).blockedOn === e && (r.blockedOn = null);
                    for (; 0 < Dt.length && null === (n = Dt[0]).blockedOn;) qt(n), null === n.blockedOn && Dt.shift()
                }
                var Ut = w.ReactCurrentBatchConfig,
                    Wt = !0;

                function Ht(e, t, n, r) {
                    var o = bt,
                        i = Ut.transition;
                    Ut.transition = null;
                    try {
                        bt = 1, Qt(e, t, n, r)
                    } finally {
                        bt = o, Ut.transition = i
                    }
                }

                function Gt(e, t, n, r) {
                    var o = bt,
                        i = Ut.transition;
                    Ut.transition = null;
                    try {
                        bt = 4, Qt(e, t, n, r)
                    } finally {
                        bt = o, Ut.transition = i
                    }
                }

                function Qt(e, t, n, r) {
                    if (Wt) {
                        var o = $t(e, t, n, r);
                        if (null === o) Wr(e, t, r, Yt, n), It(e, r);
                        else if (function(e, t, n, r, o) {
                                switch (t) {
                                    case "focusin":
                                        return Ot = Lt(Ot, e, t, n, r, o), !0;
                                    case "dragenter":
                                        return At = Lt(At, e, t, n, r, o), !0;
                                    case "mouseover":
                                        return Pt = Lt(Pt, e, t, n, r, o), !0;
                                    case "pointerover":
                                        var i = o.pointerId;
                                        return Rt.set(i, Lt(Rt.get(i) || null, e, t, n, r, o)), !0;
                                    case "gotpointercapture":
                                        return i = o.pointerId, Mt.set(i, Lt(Mt.get(i) || null, e, t, n, r, o)), !0
                                }
                                return !1
                            }(o, e, t, n, r)) r.stopPropagation();
                        else if (It(e, r), 4 & t && -1 < Nt.indexOf(e)) {
                            for (; null !== o;) {
                                var i = wo(o);
                                if (null !== i && _t(i), null === (i = $t(e, t, n, r)) && Wr(e, t, r, Yt, n), i === o) break;
                                o = i
                            }
                            null !== o && r.stopPropagation()
                        } else Wr(e, t, r, null, n)
                    }
                }
                var Yt = null;

                function $t(e, t, n, r) {
                    if (Yt = null, null !== (e = bo(e = _e(r))))
                        if (null === (t = ze(e))) e = null;
                        else if (13 === (n = t.tag)) {
                        if (null !== (e = Ue(t))) return e;
                        e = null
                    } else if (3 === n) {
                        if (t.stateNode.current.memoizedState.isDehydrated) return 3 === t.tag ? t.stateNode.containerInfo : null;
                        e = null
                    } else t !== e && (e = null);
                    return Yt = e, null
                }

                function Zt(e) {
                    switch (e) {
                        case "cancel":
                        case "click":
                        case "close":
                        case "contextmenu":
                        case "copy":
                        case "cut":
                        case "auxclick":
                        case "dblclick":
                        case "dragend":
                        case "dragstart":
                        case "drop":
                        case "focusin":
                        case "focusout":
                        case "input":
                        case "invalid":
                        case "keydown":
                        case "keypress":
                        case "keyup":
                        case "mousedown":
                        case "mouseup":
                        case "paste":
                        case "pause":
                        case "play":
                        case "pointercancel":
                        case "pointerdown":
                        case "pointerup":
                        case "ratechange":
                        case "reset":
                        case "resize":
                        case "seeked":
                        case "submit":
                        case "touchcancel":
                        case "touchend":
                        case "touchstart":
                        case "volumechange":
                        case "change":
                        case "selectionchange":
                        case "textInput":
                        case "compositionstart":
                        case "compositionend":
                        case "compositionupdate":
                        case "beforeblur":
                        case "afterblur":
                        case "beforeinput":
                        case "blur":
                        case "fullscreenchange":
                        case "focus":
                        case "hashchange":
                        case "popstate":
                        case "select":
                        case "selectstart":
                            return 1;
                        case "drag":
                        case "dragenter":
                        case "dragexit":
                        case "dragleave":
                        case "dragover":
                        case "mousemove":
                        case "mouseout":
                        case "mouseover":
                        case "pointermove":
                        case "pointerout":
                        case "pointerover":
                        case "scroll":
                        case "toggle":
                        case "touchmove":
                        case "wheel":
                        case "mouseenter":
                        case "mouseleave":
                        case "pointerenter":
                        case "pointerleave":
                            return 4;
                        case "message":
                            switch (Ke()) {
                                case Je:
                                    return 1;
                                case et:
                                    return 4;
                                case tt:
                                case nt:
                                    return 16;
                                case rt:
                                    return 536870912;
                                default:
                                    return 16
                            }
                        default:
                            return 16
                    }
                }
                var Xt = null,
                    Kt = null,
                    Jt = null;

                function en() {
                    if (Jt) return Jt;
                    var e, t, n = Kt,
                        r = n.length,
                        o = "value" in Xt ? Xt.value : Xt.textContent,
                        i = o.length;
                    for (e = 0; e < r && n[e] === o[e]; e++);
                    var a = r - e;
                    for (t = 1; t <= a && n[r - t] === o[i - t]; t++);
                    return Jt = o.slice(e, 1 < t ? 1 - t : void 0)
                }

                function tn(e) {
                    var t = e.keyCode;
                    return "charCode" in e ? 0 === (e = e.charCode) && 13 === t && (e = 13) : e = t, 10 === e && (e = 13), 32 <= e || 13 === e ? e : 0
                }

                function nn() {
                    return !0
                }

                function rn() {
                    return !1
                }

                function on(e) {
                    function t(t, n, r, o, i) {
                        for (var a in this._reactName = t, this._targetInst = r, this.type = n, this.nativeEvent = o, this.target = i, this.currentTarget = null, e) e.hasOwnProperty(a) && (t = e[a], this[a] = t ? t(o) : o[a]);
                        return this.isDefaultPrevented = (null != o.defaultPrevented ? o.defaultPrevented : !1 === o.returnValue) ? nn : rn, this.isPropagationStopped = rn, this
                    }
                    return q(t.prototype, {
                        preventDefault: function() {
                            this.defaultPrevented = !0;
                            var e = this.nativeEvent;
                            e && (e.preventDefault ? e.preventDefault() : "unknown" != typeof e.returnValue && (e.returnValue = !1), this.isDefaultPrevented = nn)
                        },
                        stopPropagation: function() {
                            var e = this.nativeEvent;
                            e && (e.stopPropagation ? e.stopPropagation() : "unknown" != typeof e.cancelBubble && (e.cancelBubble = !0), this.isPropagationStopped = nn)
                        },
                        persist: function() {},
                        isPersistent: nn
                    }), t
                }
                var an, sn, ln, un = {
                        eventPhase: 0,
                        bubbles: 0,
                        cancelable: 0,
                        timeStamp: function(e) {
                            return e.timeStamp || Date.now()
                        },
                        defaultPrevented: 0,
                        isTrusted: 0
                    },
                    cn = on(un),
                    hn = q({}, un, {
                        view: 0,
                        detail: 0
                    }),
                    dn = on(hn),
                    fn = q({}, hn, {
                        screenX: 0,
                        screenY: 0,
                        clientX: 0,
                        clientY: 0,
                        pageX: 0,
                        pageY: 0,
                        ctrlKey: 0,
                        shiftKey: 0,
                        altKey: 0,
                        metaKey: 0,
                        getModifierState: kn,
                        button: 0,
                        buttons: 0,
                        relatedTarget: function(e) {
                            return void 0 === e.relatedTarget ? e.fromElement === e.srcElement ? e.toElement : e.fromElement : e.relatedTarget
                        },
                        movementX: function(e) {
                            return "movementX" in e ? e.movementX : (e !== ln && (ln && "mousemove" === e.type ? (an = e.screenX - ln.screenX, sn = e.screenY - ln.screenY) : sn = an = 0, ln = e), an)
                        },
                        movementY: function(e) {
                            return "movementY" in e ? e.movementY : sn
                        }
                    }),
                    pn = on(fn),
                    mn = on(q({}, fn, {
                        dataTransfer: 0
                    })),
                    vn = on(q({}, hn, {
                        relatedTarget: 0
                    })),
                    gn = on(q({}, un, {
                        animationName: 0,
                        elapsedTime: 0,
                        pseudoElement: 0
                    })),
                    yn = q({}, un, {
                        clipboardData: function(e) {
                            return "clipboardData" in e ? e.clipboardData : window.clipboardData
                        }
                    }),
                    bn = on(yn),
                    wn = on(q({}, un, {
                        data: 0
                    })),
                    _n = {
                        Esc: "Escape",
                        Spacebar: " ",
                        Left: "ArrowLeft",
                        Up: "ArrowUp",
                        Right: "ArrowRight",
                        Down: "ArrowDown",
                        Del: "Delete",
                        Win: "OS",
                        Menu: "ContextMenu",
                        Apps: "ContextMenu",
                        Scroll: "ScrollLock",
                        MozPrintableKey: "Unidentified"
                    },
                    xn = {
                        8: "Backspace",
                        9: "Tab",
                        12: "Clear",
                        13: "Enter",
                        16: "Shift",
                        17: "Control",
                        18: "Alt",
                        19: "Pause",
                        20: "CapsLock",
                        27: "Escape",
                        32: " ",
                        33: "PageUp",
                        34: "PageDown",
                        35: "End",
                        36: "Home",
                        37: "ArrowLeft",
                        38: "ArrowUp",
                        39: "ArrowRight",
                        40: "ArrowDown",
                        45: "Insert",
                        46: "Delete",
                        112: "F1",
                        113: "F2",
                        114: "F3",
                        115: "F4",
                        116: "F5",
                        117: "F6",
                        118: "F7",
                        119: "F8",
                        120: "F9",
                        121: "F10",
                        122: "F11",
                        123: "F12",
                        144: "NumLock",
                        145: "ScrollLock",
                        224: "Meta"
                    },
                    En = {
                        Alt: "altKey",
                        Control: "ctrlKey",
                        Meta: "metaKey",
                        Shift: "shiftKey"
                    };

                function Sn(e) {
                    var t = this.nativeEvent;
                    return t.getModifierState ? t.getModifierState(e) : !!(e = En[e]) && !!t[e]
                }

                function kn() {
                    return Sn
                }
                var Tn = q({}, hn, {
                        key: function(e) {
                            if (e.key) {
                                var t = _n[e.key] || e.key;
                                if ("Unidentified" !== t) return t
                            }
                            return "keypress" === e.type ? 13 === (e = tn(e)) ? "Enter" : String.fromCharCode(e) : "keydown" === e.type || "keyup" === e.type ? xn[e.keyCode] || "Unidentified" : ""
                        },
                        code: 0,
                        location: 0,
                        ctrlKey: 0,
                        shiftKey: 0,
                        altKey: 0,
                        metaKey: 0,
                        repeat: 0,
                        locale: 0,
                        getModifierState: kn,
                        charCode: function(e) {
                            return "keypress" === e.type ? tn(e) : 0
                        },
                        keyCode: function(e) {
                            return "keydown" === e.type || "keyup" === e.type ? e.keyCode : 0
                        },
                        which: function(e) {
                            return "keypress" === e.type ? tn(e) : "keydown" === e.type || "keyup" === e.type ? e.keyCode : 0
                        }
                    }),
                    Cn = on(Tn),
                    On = on(q({}, fn, {
                        pointerId: 0,
                        width: 0,
                        height: 0,
                        pressure: 0,
                        tangentialPressure: 0,
                        tiltX: 0,
                        tiltY: 0,
                        twist: 0,
                        pointerType: 0,
                        isPrimary: 0
                    })),
                    An = on(q({}, hn, {
                        touches: 0,
                        targetTouches: 0,
                        changedTouches: 0,
                        altKey: 0,
                        metaKey: 0,
                        ctrlKey: 0,
                        shiftKey: 0,
                        getModifierState: kn
                    })),
                    Pn = on(q({}, un, {
                        propertyName: 0,
                        elapsedTime: 0,
                        pseudoElement: 0
                    })),
                    Rn = q({}, fn, {
                        deltaX: function(e) {
                            return "deltaX" in e ? e.deltaX : "wheelDeltaX" in e ? -e.wheelDeltaX : 0
                        },
                        deltaY: function(e) {
                            return "deltaY" in e ? e.deltaY : "wheelDeltaY" in e ? -e.wheelDeltaY : "wheelDelta" in e ? -e.wheelDelta : 0
                        },
                        deltaZ: 0,
                        deltaMode: 0
                    }),
                    Mn = on(Rn),
                    Dn = [9, 13, 27, 32],
                    Nn = c && "CompositionEvent" in window,
                    In = null;
                c && "documentMode" in document && (In = document.documentMode);
                var Ln = c && "TextEvent" in window && !In,
                    qn = c && (!Nn || In && 8 < In && 11 >= In),
                    jn = String.fromCharCode(32),
                    Fn = !1;

                function Vn(e, t) {
                    switch (e) {
                        case "keyup":
                            return -1 !== Dn.indexOf(t.keyCode);
                        case "keydown":
                            return 229 !== t.keyCode;
                        case "keypress":
                        case "mousedown":
                        case "focusout":
                            return !0;
                        default:
                            return !1
                    }
                }

                function Bn(e) {
                    return "object" == typeof(e = e.detail) && "data" in e ? e.data : null
                }
                var zn = !1,
                    Un = {
                        color: !0,
                        date: !0,
                        datetime: !0,
                        "datetime-local": !0,
                        email: !0,
                        month: !0,
                        number: !0,
                        password: !0,
                        range: !0,
                        search: !0,
                        tel: !0,
                        text: !0,
                        time: !0,
                        url: !0,
                        week: !0
                    };

                function Wn(e) {
                    var t = e && e.nodeName && e.nodeName.toLowerCase();
                    return "input" === t ? !!Un[e.type] : "textarea" === t
                }

                function Hn(e, t, n, r) {
                    Te(r), 0 < (t = Gr(t, "onChange")).length && (n = new cn("onChange", "change", null, n, r), e.push({
                        event: n,
                        listeners: t
                    }))
                }
                var Gn = null,
                    Qn = null;

                function Yn(e) {
                    jr(e, 0)
                }

                function $n(e) {
                    if (Q(_o(e))) return e
                }

                function Zn(e, t) {
                    if ("change" === e) return t
                }
                var Xn = !1;
                if (c) {
                    var Kn;
                    if (c) {
                        var Jn = "oninput" in document;
                        if (!Jn) {
                            var er = document.createElement("div");
                            er.setAttribute("oninput", "return;"), Jn = "function" == typeof er.oninput
                        }
                        Kn = Jn
                    } else Kn = !1;
                    Xn = Kn && (!document.documentMode || 9 < document.documentMode)
                }

                function tr() {
                    Gn && (Gn.detachEvent("onpropertychange", nr), Qn = Gn = null)
                }

                function nr(e) {
                    if ("value" === e.propertyName && $n(Qn)) {
                        var t = [];
                        Hn(t, Qn, e, _e(e)), Re(Yn, t)
                    }
                }

                function rr(e, t, n) {
                    "focusin" === e ? (tr(), Qn = n, (Gn = t).attachEvent("onpropertychange", nr)) : "focusout" === e && tr()
                }

                function or(e) {
                    if ("selectionchange" === e || "keyup" === e || "keydown" === e) return $n(Qn)
                }

                function ir(e, t) {
                    if ("click" === e) return $n(t)
                }

                function ar(e, t) {
                    if ("input" === e || "change" === e) return $n(t)
                }
                var sr = "function" == typeof Object.is ? Object.is : function(e, t) {
                    return e === t && (0 !== e || 1 / e == 1 / t) || e != e && t != t
                };

                function lr(e, t) {
                    if (sr(e, t)) return !0;
                    if ("object" != typeof e || null === e || "object" != typeof t || null === t) return !1;
                    var n = Object.keys(e),
                        r = Object.keys(t);
                    if (n.length !== r.length) return !1;
                    for (r = 0; r < n.length; r++) {
                        var o = n[r];
                        if (!h.call(t, o) || !sr(e[o], t[o])) return !1
                    }
                    return !0
                }

                function ur(e) {
                    for (; e && e.firstChild;) e = e.firstChild;
                    return e
                }

                function cr(e, t) {
                    var n, r = ur(e);
                    for (e = 0; r;) {
                        if (3 === r.nodeType) {
                            if (n = e + r.textContent.length, e <= t && n >= t) return {
                                node: r,
                                offset: t - e
                            };
                            e = n
                        }
                        e: {
                            for (; r;) {
                                if (r.nextSibling) {
                                    r = r.nextSibling;
                                    break e
                                }
                                r = r.parentNode
                            }
                            r = void 0
                        }
                        r = ur(r)
                    }
                }

                function hr(e, t) {
                    return !(!e || !t) && (e === t || (!e || 3 !== e.nodeType) && (t && 3 === t.nodeType ? hr(e, t.parentNode) : "contains" in e ? e.contains(t) : !!e.compareDocumentPosition && !!(16 & e.compareDocumentPosition(t))))
                }

                function dr() {
                    for (var e = window, t = Y(); t instanceof e.HTMLIFrameElement;) {
                        try {
                            var n = "string" == typeof t.contentWindow.location.href
                        } catch (e) {
                            n = !1
                        }
                        if (!n) break;
                        t = Y((e = t.contentWindow).document)
                    }
                    return t
                }

                function fr(e) {
                    var t = e && e.nodeName && e.nodeName.toLowerCase();
                    return t && ("input" === t && ("text" === e.type || "search" === e.type || "tel" === e.type || "url" === e.type || "password" === e.type) || "textarea" === t || "true" === e.contentEditable)
                }

                function pr(e) {
                    var t = dr(),
                        n = e.focusedElem,
                        r = e.selectionRange;
                    if (t !== n && n && n.ownerDocument && hr(n.ownerDocument.documentElement, n)) {
                        if (null !== r && fr(n))
                            if (t = r.start, void 0 === (e = r.end) && (e = t), "selectionStart" in n) n.selectionStart = t, n.selectionEnd = Math.min(e, n.value.length);
                            else if ((e = (t = n.ownerDocument || document) && t.defaultView || window).getSelection) {
                            e = e.getSelection();
                            var o = n.textContent.length,
                                i = Math.min(r.start, o);
                            r = void 0 === r.end ? i : Math.min(r.end, o), !e.extend && i > r && (o = r, r = i, i = o), o = cr(n, i);
                            var a = cr(n, r);
                            o && a && (1 !== e.rangeCount || e.anchorNode !== o.node || e.anchorOffset !== o.offset || e.focusNode !== a.node || e.focusOffset !== a.offset) && ((t = t.createRange()).setStart(o.node, o.offset), e.removeAllRanges(), i > r ? (e.addRange(t), e.extend(a.node, a.offset)) : (t.setEnd(a.node, a.offset), e.addRange(t)))
                        }
                        for (t = [], e = n; e = e.parentNode;) 1 === e.nodeType && t.push({
                            element: e,
                            left: e.scrollLeft,
                            top: e.scrollTop
                        });
                        for ("function" == typeof n.focus && n.focus(), n = 0; n < t.length; n++)(e = t[n]).element.scrollLeft = e.left, e.element.scrollTop = e.top
                    }
                }
                var mr = c && "documentMode" in document && 11 >= document.documentMode,
                    vr = null,
                    gr = null,
                    yr = null,
                    br = !1;

                function wr(e, t, n) {
                    var r = n.window === n ? n.document : 9 === n.nodeType ? n : n.ownerDocument;
                    br || null == vr || vr !== Y(r) || (r = "selectionStart" in (r = vr) && fr(r) ? {
                        start: r.selectionStart,
                        end: r.selectionEnd
                    } : {
                        anchorNode: (r = (r.ownerDocument && r.ownerDocument.defaultView || window).getSelection()).anchorNode,
                        anchorOffset: r.anchorOffset,
                        focusNode: r.focusNode,
                        focusOffset: r.focusOffset
                    }, yr && lr(yr, r) || (yr = r, 0 < (r = Gr(gr, "onSelect")).length && (t = new cn("onSelect", "select", null, t, n), e.push({
                        event: t,
                        listeners: r
                    }), t.target = vr)))
                }

                function _r(e, t) {
                    var n = {};
                    return n[e.toLowerCase()] = t.toLowerCase(), n["Webkit" + e] = "webkit" + t, n["Moz" + e] = "moz" + t, n
                }
                var xr = {
                        animationend: _r("Animation", "AnimationEnd"),
                        animationiteration: _r("Animation", "AnimationIteration"),
                        animationstart: _r("Animation", "AnimationStart"),
                        transitionend: _r("Transition", "TransitionEnd")
                    },
                    Er = {},
                    Sr = {};

                function kr(e) {
                    if (Er[e]) return Er[e];
                    if (!xr[e]) return e;
                    var t, n = xr[e];
                    for (t in n)
                        if (n.hasOwnProperty(t) && t in Sr) return Er[e] = n[t];
                    return e
                }
                c && (Sr = document.createElement("div").style, "AnimationEvent" in window || (delete xr.animationend.animation, delete xr.animationiteration.animation, delete xr.animationstart.animation), "TransitionEvent" in window || delete xr.transitionend.transition);
                var Tr = kr("animationend"),
                    Cr = kr("animationiteration"),
                    Or = kr("animationstart"),
                    Ar = kr("transitionend"),
                    Pr = new Map,
                    Rr = "abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");

                function Mr(e, t) {
                    Pr.set(e, t), l(t, [e])
                }
                for (var Dr = 0; Dr < Rr.length; Dr++) {
                    var Nr = Rr[Dr];
                    Mr(Nr.toLowerCase(), "on" + (Nr[0].toUpperCase() + Nr.slice(1)))
                }
                Mr(Tr, "onAnimationEnd"), Mr(Cr, "onAnimationIteration"), Mr(Or, "onAnimationStart"), Mr("dblclick", "onDoubleClick"), Mr("focusin", "onFocus"), Mr("focusout", "onBlur"), Mr(Ar, "onTransitionEnd"), u("onMouseEnter", ["mouseout", "mouseover"]), u("onMouseLeave", ["mouseout", "mouseover"]), u("onPointerEnter", ["pointerout", "pointerover"]), u("onPointerLeave", ["pointerout", "pointerover"]), l("onChange", "change click focusin focusout input keydown keyup selectionchange".split(" ")), l("onSelect", "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")), l("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]), l("onCompositionEnd", "compositionend focusout keydown keypress keyup mousedown".split(" ")), l("onCompositionStart", "compositionstart focusout keydown keypress keyup mousedown".split(" ")), l("onCompositionUpdate", "compositionupdate focusout keydown keypress keyup mousedown".split(" "));
                var Ir = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),
                    Lr = new Set("cancel close invalid load scroll toggle".split(" ").concat(Ir));

                function qr(e, t, n) {
                    var r = e.type || "unknown-event";
                    e.currentTarget = n,
                        function(e, t, n, r, o, a, s, l, u) {
                            if (Be.apply(this, arguments), Le) {
                                if (!Le) throw Error(i(198));
                                var c = qe;
                                Le = !1, qe = null, je || (je = !0, Fe = c)
                            }
                        }(r, t, void 0, e), e.currentTarget = null
                }

                function jr(e, t) {
                    t = 0 != (4 & t);
                    for (var n = 0; n < e.length; n++) {
                        var r = e[n],
                            o = r.event;
                        r = r.listeners;
                        e: {
                            var i = void 0;
                            if (t)
                                for (var a = r.length - 1; 0 <= a; a--) {
                                    var s = r[a],
                                        l = s.instance,
                                        u = s.currentTarget;
                                    if (s = s.listener, l !== i && o.isPropagationStopped()) break e;
                                    qr(o, s, u), i = l
                                } else
                                    for (a = 0; a < r.length; a++) {
                                        if (l = (s = r[a]).instance, u = s.currentTarget, s = s.listener, l !== i && o.isPropagationStopped()) break e;
                                        qr(o, s, u), i = l
                                    }
                        }
                    }
                    if (je) throw e = Fe, je = !1, Fe = null, e
                }

                function Fr(e, t) {
                    var n = t[vo];
                    void 0 === n && (n = t[vo] = new Set);
                    var r = e + "__bubble";
                    n.has(r) || (Ur(t, e, 2, !1), n.add(r))
                }

                function Vr(e, t, n) {
                    var r = 0;
                    t && (r |= 4), Ur(n, e, r, t)
                }
                var Br = "_reactListening" + Math.random().toString(36).slice(2);

                function zr(e) {
                    if (!e[Br]) {
                        e[Br] = !0, a.forEach((function(t) {
                            "selectionchange" !== t && (Lr.has(t) || Vr(t, !1, e), Vr(t, !0, e))
                        }));
                        var t = 9 === e.nodeType ? e : e.ownerDocument;
                        null === t || t[Br] || (t[Br] = !0, Vr("selectionchange", !1, t))
                    }
                }

                function Ur(e, t, n, r) {
                    switch (Zt(t)) {
                        case 1:
                            var o = Ht;
                            break;
                        case 4:
                            o = Gt;
                            break;
                        default:
                            o = Qt
                    }
                    n = o.bind(null, t, n, e), o = void 0, !De || "touchstart" !== t && "touchmove" !== t && "wheel" !== t || (o = !0), r ? void 0 !== o ? e.addEventListener(t, n, {
                        capture: !0,
                        passive: o
                    }) : e.addEventListener(t, n, !0) : void 0 !== o ? e.addEventListener(t, n, {
                        passive: o
                    }) : e.addEventListener(t, n, !1)
                }

                function Wr(e, t, n, r, o) {
                    var i = r;
                    if (0 == (1 & t) && 0 == (2 & t) && null !== r) e: for (;;) {
                        if (null === r) return;
                        var a = r.tag;
                        if (3 === a || 4 === a) {
                            var s = r.stateNode.containerInfo;
                            if (s === o || 8 === s.nodeType && s.parentNode === o) break;
                            if (4 === a)
                                for (a = r.return; null !== a;) {
                                    var l = a.tag;
                                    if ((3 === l || 4 === l) && ((l = a.stateNode.containerInfo) === o || 8 === l.nodeType && l.parentNode === o)) return;
                                    a = a.return
                                }
                            for (; null !== s;) {
                                if (null === (a = bo(s))) return;
                                if (5 === (l = a.tag) || 6 === l) {
                                    r = i = a;
                                    continue e
                                }
                                s = s.parentNode
                            }
                        }
                        r = r.return
                    }
                    Re((function() {
                        var r = i,
                            o = _e(n),
                            a = [];
                        e: {
                            var s = Pr.get(e);
                            if (void 0 !== s) {
                                var l = cn,
                                    u = e;
                                switch (e) {
                                    case "keypress":
                                        if (0 === tn(n)) break e;
                                    case "keydown":
                                    case "keyup":
                                        l = Cn;
                                        break;
                                    case "focusin":
                                        u = "focus", l = vn;
                                        break;
                                    case "focusout":
                                        u = "blur", l = vn;
                                        break;
                                    case "beforeblur":
                                    case "afterblur":
                                        l = vn;
                                        break;
                                    case "click":
                                        if (2 === n.button) break e;
                                    case "auxclick":
                                    case "dblclick":
                                    case "mousedown":
                                    case "mousemove":
                                    case "mouseup":
                                    case "mouseout":
                                    case "mouseover":
                                    case "contextmenu":
                                        l = pn;
                                        break;
                                    case "drag":
                                    case "dragend":
                                    case "dragenter":
                                    case "dragexit":
                                    case "dragleave":
                                    case "dragover":
                                    case "dragstart":
                                    case "drop":
                                        l = mn;
                                        break;
                                    case "touchcancel":
                                    case "touchend":
                                    case "touchmove":
                                    case "touchstart":
                                        l = An;
                                        break;
                                    case Tr:
                                    case Cr:
                                    case Or:
                                        l = gn;
                                        break;
                                    case Ar:
                                        l = Pn;
                                        break;
                                    case "scroll":
                                        l = dn;
                                        break;
                                    case "wheel":
                                        l = Mn;
                                        break;
                                    case "copy":
                                    case "cut":
                                    case "paste":
                                        l = bn;
                                        break;
                                    case "gotpointercapture":
                                    case "lostpointercapture":
                                    case "pointercancel":
                                    case "pointerdown":
                                    case "pointermove":
                                    case "pointerout":
                                    case "pointerover":
                                    case "pointerup":
                                        l = On
                                }
                                var c = 0 != (4 & t),
                                    h = !c && "scroll" === e,
                                    d = c ? null !== s ? s + "Capture" : null : s;
                                c = [];
                                for (var f, p = r; null !== p;) {
                                    var m = (f = p).stateNode;
                                    if (5 === f.tag && null !== m && (f = m, null !== d && null != (m = Me(p, d)) && c.push(Hr(p, m, f))), h) break;
                                    p = p.return
                                }
                                0 < c.length && (s = new l(s, u, null, n, o), a.push({
                                    event: s,
                                    listeners: c
                                }))
                            }
                        }
                        if (0 == (7 & t)) {
                            if (l = "mouseout" === e || "pointerout" === e, (!(s = "mouseover" === e || "pointerover" === e) || n === we || !(u = n.relatedTarget || n.fromElement) || !bo(u) && !u[mo]) && (l || s) && (s = o.window === o ? o : (s = o.ownerDocument) ? s.defaultView || s.parentWindow : window, l ? (l = r, null !== (u = (u = n.relatedTarget || n.toElement) ? bo(u) : null) && (u !== (h = ze(u)) || 5 !== u.tag && 6 !== u.tag) && (u = null)) : (l = null, u = r), l !== u)) {
                                if (c = pn, m = "onMouseLeave", d = "onMouseEnter", p = "mouse", "pointerout" !== e && "pointerover" !== e || (c = On, m = "onPointerLeave", d = "onPointerEnter", p = "pointer"), h = null == l ? s : _o(l), f = null == u ? s : _o(u), (s = new c(m, p + "leave", l, n, o)).target = h, s.relatedTarget = f, m = null, bo(o) === r && ((c = new c(d, p + "enter", u, n, o)).target = f, c.relatedTarget = h, m = c), h = m, l && u) e: {
                                    for (d = u, p = 0, f = c = l; f; f = Qr(f)) p++;
                                    for (f = 0, m = d; m; m = Qr(m)) f++;
                                    for (; 0 < p - f;) c = Qr(c),
                                    p--;
                                    for (; 0 < f - p;) d = Qr(d),
                                    f--;
                                    for (; p--;) {
                                        if (c === d || null !== d && c === d.alternate) break e;
                                        c = Qr(c), d = Qr(d)
                                    }
                                    c = null
                                }
                                else c = null;
                                null !== l && Yr(a, s, l, c, !1), null !== u && null !== h && Yr(a, h, u, c, !0)
                            }
                            if ("select" === (l = (s = r ? _o(r) : window).nodeName && s.nodeName.toLowerCase()) || "input" === l && "file" === s.type) var v = Zn;
                            else if (Wn(s))
                                if (Xn) v = ar;
                                else {
                                    v = or;
                                    var g = rr
                                }
                            else(l = s.nodeName) && "input" === l.toLowerCase() && ("checkbox" === s.type || "radio" === s.type) && (v = ir);
                            switch (v && (v = v(e, r)) ? Hn(a, v, n, o) : (g && g(e, s, r), "focusout" === e && (g = s._wrapperState) && g.controlled && "number" === s.type && ee(s, "number", s.value)), g = r ? _o(r) : window, e) {
                                case "focusin":
                                    (Wn(g) || "true" === g.contentEditable) && (vr = g, gr = r, yr = null);
                                    break;
                                case "focusout":
                                    yr = gr = vr = null;
                                    break;
                                case "mousedown":
                                    br = !0;
                                    break;
                                case "contextmenu":
                                case "mouseup":
                                case "dragend":
                                    br = !1, wr(a, n, o);
                                    break;
                                case "selectionchange":
                                    if (mr) break;
                                case "keydown":
                                case "keyup":
                                    wr(a, n, o)
                            }
                            var y;
                            if (Nn) e: {
                                switch (e) {
                                    case "compositionstart":
                                        var b = "onCompositionStart";
                                        break e;
                                    case "compositionend":
                                        b = "onCompositionEnd";
                                        break e;
                                    case "compositionupdate":
                                        b = "onCompositionUpdate";
                                        break e
                                }
                                b = void 0
                            }
                            else zn ? Vn(e, n) && (b = "onCompositionEnd") : "keydown" === e && 229 === n.keyCode && (b = "onCompositionStart");
                            b && (qn && "ko" !== n.locale && (zn || "onCompositionStart" !== b ? "onCompositionEnd" === b && zn && (y = en()) : (Kt = "value" in (Xt = o) ? Xt.value : Xt.textContent, zn = !0)), 0 < (g = Gr(r, b)).length && (b = new wn(b, e, null, n, o), a.push({
                                event: b,
                                listeners: g
                            }), (y || null !== (y = Bn(n))) && (b.data = y))), (y = Ln ? function(e, t) {
                                switch (e) {
                                    case "compositionend":
                                        return Bn(t);
                                    case "keypress":
                                        return 32 !== t.which ? null : (Fn = !0, jn);
                                    case "textInput":
                                        return (e = t.data) === jn && Fn ? null : e;
                                    default:
                                        return null
                                }
                            }(e, n) : function(e, t) {
                                if (zn) return "compositionend" === e || !Nn && Vn(e, t) ? (e = en(), Jt = Kt = Xt = null, zn = !1, e) : null;
                                switch (e) {
                                    case "paste":
                                    default:
                                        return null;
                                    case "keypress":
                                        if (!(t.ctrlKey || t.altKey || t.metaKey) || t.ctrlKey && t.altKey) {
                                            if (t.char && 1 < t.char.length) return t.char;
                                            if (t.which) return String.fromCharCode(t.which)
                                        }
                                        return null;
                                    case "compositionend":
                                        return qn && "ko" !== t.locale ? null : t.data
                                }
                            }(e, n)) && 0 < (r = Gr(r, "onBeforeInput")).length && (o = new wn("onBeforeInput", "beforeinput", null, n, o), a.push({
                                event: o,
                                listeners: r
                            }), o.data = y)
                        }
                        jr(a, t)
                    }))
                }

                function Hr(e, t, n) {
                    return {
                        instance: e,
                        listener: t,
                        currentTarget: n
                    }
                }

                function Gr(e, t) {
                    for (var n = t + "Capture", r = []; null !== e;) {
                        var o = e,
                            i = o.stateNode;
                        5 === o.tag && null !== i && (o = i, null != (i = Me(e, n)) && r.unshift(Hr(e, i, o)), null != (i = Me(e, t)) && r.push(Hr(e, i, o))), e = e.return
                    }
                    return r
                }

                function Qr(e) {
                    if (null === e) return null;
                    do {
                        e = e.return
                    } while (e && 5 !== e.tag);
                    return e || null
                }

                function Yr(e, t, n, r, o) {
                    for (var i = t._reactName, a = []; null !== n && n !== r;) {
                        var s = n,
                            l = s.alternate,
                            u = s.stateNode;
                        if (null !== l && l === r) break;
                        5 === s.tag && null !== u && (s = u, o ? null != (l = Me(n, i)) && a.unshift(Hr(n, l, s)) : o || null != (l = Me(n, i)) && a.push(Hr(n, l, s))), n = n.return
                    }
                    0 !== a.length && e.push({
                        event: t,
                        listeners: a
                    })
                }
                var $r = /\r\n?/g,
                    Zr = /\u0000|\uFFFD/g;

                function Xr(e) {
                    return ("string" == typeof e ? e : "" + e).replace($r, "\n").replace(Zr, "")
                }

                function Kr(e, t, n) {
                    if (t = Xr(t), Xr(e) !== t && n) throw Error(i(425))
                }

                function Jr() {}
                var eo = null,
                    to = null;

                function no(e, t) {
                    return "textarea" === e || "noscript" === e || "string" == typeof t.children || "number" == typeof t.children || "object" == typeof t.dangerouslySetInnerHTML && null !== t.dangerouslySetInnerHTML && null != t.dangerouslySetInnerHTML.__html
                }
                var ro = "function" == typeof setTimeout ? setTimeout : void 0,
                    oo = "function" == typeof clearTimeout ? clearTimeout : void 0,
                    io = "function" == typeof Promise ? Promise : void 0,
                    ao = "function" == typeof queueMicrotask ? queueMicrotask : void 0 !== io ? function(e) {
                        return io.resolve(null).then(e).catch(so)
                    } : ro;

                function so(e) {
                    setTimeout((function() {
                        throw e
                    }))
                }

                function lo(e, t) {
                    var n = t,
                        r = 0;
                    do {
                        var o = n.nextSibling;
                        if (e.removeChild(n), o && 8 === o.nodeType)
                            if ("/$" === (n = o.data)) {
                                if (0 === r) return e.removeChild(o), void zt(t);
                                r--
                            } else "$" !== n && "$?" !== n && "$!" !== n || r++;
                        n = o
                    } while (n);
                    zt(t)
                }

                function uo(e) {
                    for (; null != e; e = e.nextSibling) {
                        var t = e.nodeType;
                        if (1 === t || 3 === t) break;
                        if (8 === t) {
                            if ("$" === (t = e.data) || "$!" === t || "$?" === t) break;
                            if ("/$" === t) return null
                        }
                    }
                    return e
                }

                function co(e) {
                    e = e.previousSibling;
                    for (var t = 0; e;) {
                        if (8 === e.nodeType) {
                            var n = e.data;
                            if ("$" === n || "$!" === n || "$?" === n) {
                                if (0 === t) return e;
                                t--
                            } else "/$" === n && t++
                        }
                        e = e.previousSibling
                    }
                    return null
                }
                var ho = Math.random().toString(36).slice(2),
                    fo = "__reactFiber$" + ho,
                    po = "__reactProps$" + ho,
                    mo = "__reactContainer$" + ho,
                    vo = "__reactEvents$" + ho,
                    go = "__reactListeners$" + ho,
                    yo = "__reactHandles$" + ho;

                function bo(e) {
                    var t = e[fo];
                    if (t) return t;
                    for (var n = e.parentNode; n;) {
                        if (t = n[mo] || n[fo]) {
                            if (n = t.alternate, null !== t.child || null !== n && null !== n.child)
                                for (e = co(e); null !== e;) {
                                    if (n = e[fo]) return n;
                                    e = co(e)
                                }
                            return t
                        }
                        n = (e = n).parentNode
                    }
                    return null
                }

                function wo(e) {
                    return !(e = e[fo] || e[mo]) || 5 !== e.tag && 6 !== e.tag && 13 !== e.tag && 3 !== e.tag ? null : e
                }

                function _o(e) {
                    if (5 === e.tag || 6 === e.tag) return e.stateNode;
                    throw Error(i(33))
                }

                function xo(e) {
                    return e[po] || null
                }
                var Eo = [],
                    So = -1;

                function ko(e) {
                    return {
                        current: e
                    }
                }

                function To(e) {
                    0 > So || (e.current = Eo[So], Eo[So] = null, So--)
                }

                function Co(e, t) {
                    So++, Eo[So] = e.current, e.current = t
                }
                var Oo = {},
                    Ao = ko(Oo),
                    Po = ko(!1),
                    Ro = Oo;

                function Mo(e, t) {
                    var n = e.type.contextTypes;
                    if (!n) return Oo;
                    var r = e.stateNode;
                    if (r && r.__reactInternalMemoizedUnmaskedChildContext === t) return r.__reactInternalMemoizedMaskedChildContext;
                    var o, i = {};
                    for (o in n) i[o] = t[o];
                    return r && ((e = e.stateNode).__reactInternalMemoizedUnmaskedChildContext = t, e.__reactInternalMemoizedMaskedChildContext = i), i
                }

                function Do(e) {
                    return null != e.childContextTypes
                }

                function No() {
                    To(Po), To(Ao)
                }

                function Io(e, t, n) {
                    if (Ao.current !== Oo) throw Error(i(168));
                    Co(Ao, t), Co(Po, n)
                }

                function Lo(e, t, n) {
                    var r = e.stateNode;
                    if (t = t.childContextTypes, "function" != typeof r.getChildContext) return n;
                    for (var o in r = r.getChildContext())
                        if (!(o in t)) throw Error(i(108, U(e) || "Unknown", o));
                    return q({}, n, r)
                }

                function qo(e) {
                    return e = (e = e.stateNode) && e.__reactInternalMemoizedMergedChildContext || Oo, Ro = Ao.current, Co(Ao, e), Co(Po, Po.current), !0
                }

                function jo(e, t, n) {
                    var r = e.stateNode;
                    if (!r) throw Error(i(169));
                    n ? (e = Lo(e, t, Ro), r.__reactInternalMemoizedMergedChildContext = e, To(Po), To(Ao), Co(Ao, e)) : To(Po), Co(Po, n)
                }
                var Fo = null,
                    Vo = !1,
                    Bo = !1;

                function zo(e) {
                    null === Fo ? Fo = [e] : Fo.push(e)
                }

                function Uo() {
                    if (!Bo && null !== Fo) {
                        Bo = !0;
                        var e = 0,
                            t = bt;
                        try {
                            var n = Fo;
                            for (bt = 1; e < n.length; e++) {
                                var r = n[e];
                                do {
                                    r = r(!0)
                                } while (null !== r)
                            }
                            Fo = null, Vo = !1
                        } catch (t) {
                            throw null !== Fo && (Fo = Fo.slice(e + 1)), Qe(Je, Uo), t
                        } finally {
                            bt = t, Bo = !1
                        }
                    }
                    return null
                }
                var Wo = [],
                    Ho = 0,
                    Go = null,
                    Qo = 0,
                    Yo = [],
                    $o = 0,
                    Zo = null,
                    Xo = 1,
                    Ko = "";

                function Jo(e, t) {
                    Wo[Ho++] = Qo, Wo[Ho++] = Go, Go = e, Qo = t
                }

                function ei(e, t, n) {
                    Yo[$o++] = Xo, Yo[$o++] = Ko, Yo[$o++] = Zo, Zo = e;
                    var r = Xo;
                    e = Ko;
                    var o = 32 - at(r) - 1;
                    r &= ~(1 << o), n += 1;
                    var i = 32 - at(t) + o;
                    if (30 < i) {
                        var a = o - o % 5;
                        i = (r & (1 << a) - 1).toString(32), r >>= a, o -= a, Xo = 1 << 32 - at(t) + o | n << o | r, Ko = i + e
                    } else Xo = 1 << i | n << o | r, Ko = e
                }

                function ti(e) {
                    null !== e.return && (Jo(e, 1), ei(e, 1, 0))
                }

                function ni(e) {
                    for (; e === Go;) Go = Wo[--Ho], Wo[Ho] = null, Qo = Wo[--Ho], Wo[Ho] = null;
                    for (; e === Zo;) Zo = Yo[--$o], Yo[$o] = null, Ko = Yo[--$o], Yo[$o] = null, Xo = Yo[--$o], Yo[$o] = null
                }
                var ri = null,
                    oi = null,
                    ii = !1,
                    ai = null;

                function si(e, t) {
                    var n = Ru(5, null, null, 0);
                    n.elementType = "DELETED", n.stateNode = t, n.return = e, null === (t = e.deletions) ? (e.deletions = [n], e.flags |= 16) : t.push(n)
                }

                function li(e, t) {
                    switch (e.tag) {
                        case 5:
                            var n = e.type;
                            return null !== (t = 1 !== t.nodeType || n.toLowerCase() !== t.nodeName.toLowerCase() ? null : t) && (e.stateNode = t, ri = e, oi = uo(t.firstChild), !0);
                        case 6:
                            return null !== (t = "" === e.pendingProps || 3 !== t.nodeType ? null : t) && (e.stateNode = t, ri = e, oi = null, !0);
                        case 13:
                            return null !== (t = 8 !== t.nodeType ? null : t) && (n = null !== Zo ? {
                                id: Xo,
                                overflow: Ko
                            } : null, e.memoizedState = {
                                dehydrated: t,
                                treeContext: n,
                                retryLane: 1073741824
                            }, (n = Ru(18, null, null, 0)).stateNode = t, n.return = e, e.child = n, ri = e, oi = null, !0);
                        default:
                            return !1
                    }
                }

                function ui(e) {
                    return 0 != (1 & e.mode) && 0 == (128 & e.flags)
                }

                function ci(e) {
                    if (ii) {
                        var t = oi;
                        if (t) {
                            var n = t;
                            if (!li(e, t)) {
                                if (ui(e)) throw Error(i(418));
                                t = uo(n.nextSibling);
                                var r = ri;
                                t && li(e, t) ? si(r, n) : (e.flags = -4097 & e.flags | 2, ii = !1, ri = e)
                            }
                        } else {
                            if (ui(e)) throw Error(i(418));
                            e.flags = -4097 & e.flags | 2, ii = !1, ri = e
                        }
                    }
                }

                function hi(e) {
                    for (e = e.return; null !== e && 5 !== e.tag && 3 !== e.tag && 13 !== e.tag;) e = e.return;
                    ri = e
                }

                function di(e) {
                    if (e !== ri) return !1;
                    if (!ii) return hi(e), ii = !0, !1;
                    var t;
                    if ((t = 3 !== e.tag) && !(t = 5 !== e.tag) && (t = "head" !== (t = e.type) && "body" !== t && !no(e.type, e.memoizedProps)), t && (t = oi)) {
                        if (ui(e)) throw fi(), Error(i(418));
                        for (; t;) si(e, t), t = uo(t.nextSibling)
                    }
                    if (hi(e), 13 === e.tag) {
                        if (!(e = null !== (e = e.memoizedState) ? e.dehydrated : null)) throw Error(i(317));
                        e: {
                            for (e = e.nextSibling, t = 0; e;) {
                                if (8 === e.nodeType) {
                                    var n = e.data;
                                    if ("/$" === n) {
                                        if (0 === t) {
                                            oi = uo(e.nextSibling);
                                            break e
                                        }
                                        t--
                                    } else "$" !== n && "$!" !== n && "$?" !== n || t++
                                }
                                e = e.nextSibling
                            }
                            oi = null
                        }
                    } else oi = ri ? uo(e.stateNode.nextSibling) : null;
                    return !0
                }

                function fi() {
                    for (var e = oi; e;) e = uo(e.nextSibling)
                }

                function pi() {
                    oi = ri = null, ii = !1
                }

                function mi(e) {
                    null === ai ? ai = [e] : ai.push(e)
                }
                var vi = w.ReactCurrentBatchConfig;

                function gi(e, t) {
                    if (e && e.defaultProps) {
                        for (var n in t = q({}, t), e = e.defaultProps) void 0 === t[n] && (t[n] = e[n]);
                        return t
                    }
                    return t
                }
                var yi = ko(null),
                    bi = null,
                    wi = null,
                    _i = null;

                function xi() {
                    _i = wi = bi = null
                }

                function Ei(e) {
                    var t = yi.current;
                    To(yi), e._currentValue = t
                }

                function Si(e, t, n) {
                    for (; null !== e;) {
                        var r = e.alternate;
                        if ((e.childLanes & t) !== t ? (e.childLanes |= t, null !== r && (r.childLanes |= t)) : null !== r && (r.childLanes & t) !== t && (r.childLanes |= t), e === n) break;
                        e = e.return
                    }
                }

                function ki(e, t) {
                    bi = e, _i = wi = null, null !== (e = e.dependencies) && null !== e.firstContext && (0 != (e.lanes & t) && (ws = !0), e.firstContext = null)
                }

                function Ti(e) {
                    var t = e._currentValue;
                    if (_i !== e)
                        if (e = {
                                context: e,
                                memoizedValue: t,
                                next: null
                            }, null === wi) {
                            if (null === bi) throw Error(i(308));
                            wi = e, bi.dependencies = {
                                lanes: 0,
                                firstContext: e
                            }
                        } else wi = wi.next = e;
                    return t
                }
                var Ci = null;

                function Oi(e) {
                    null === Ci ? Ci = [e] : Ci.push(e)
                }

                function Ai(e, t, n, r) {
                    var o = t.interleaved;
                    return null === o ? (n.next = n, Oi(t)) : (n.next = o.next, o.next = n), t.interleaved = n, Pi(e, r)
                }

                function Pi(e, t) {
                    e.lanes |= t;
                    var n = e.alternate;
                    for (null !== n && (n.lanes |= t), n = e, e = e.return; null !== e;) e.childLanes |= t, null !== (n = e.alternate) && (n.childLanes |= t), n = e, e = e.return;
                    return 3 === n.tag ? n.stateNode : null
                }
                var Ri = !1;

                function Mi(e) {
                    e.updateQueue = {
                        baseState: e.memoizedState,
                        firstBaseUpdate: null,
                        lastBaseUpdate: null,
                        shared: {
                            pending: null,
                            interleaved: null,
                            lanes: 0
                        },
                        effects: null
                    }
                }

                function Di(e, t) {
                    e = e.updateQueue, t.updateQueue === e && (t.updateQueue = {
                        baseState: e.baseState,
                        firstBaseUpdate: e.firstBaseUpdate,
                        lastBaseUpdate: e.lastBaseUpdate,
                        shared: e.shared,
                        effects: e.effects
                    })
                }

                function Ni(e, t) {
                    return {
                        eventTime: e,
                        lane: t,
                        tag: 0,
                        payload: null,
                        callback: null,
                        next: null
                    }
                }

                function Ii(e, t, n) {
                    var r = e.updateQueue;
                    if (null === r) return null;
                    if (r = r.shared, 0 != (2 & Ol)) {
                        var o = r.pending;
                        return null === o ? t.next = t : (t.next = o.next, o.next = t), r.pending = t, Pi(e, n)
                    }
                    return null === (o = r.interleaved) ? (t.next = t, Oi(r)) : (t.next = o.next, o.next = t), r.interleaved = t, Pi(e, n)
                }

                function Li(e, t, n) {
                    if (null !== (t = t.updateQueue) && (t = t.shared, 0 != (4194240 & n))) {
                        var r = t.lanes;
                        n |= r &= e.pendingLanes, t.lanes = n, yt(e, n)
                    }
                }

                function qi(e, t) {
                    var n = e.updateQueue,
                        r = e.alternate;
                    if (null !== r && n === (r = r.updateQueue)) {
                        var o = null,
                            i = null;
                        if (null !== (n = n.firstBaseUpdate)) {
                            do {
                                var a = {
                                    eventTime: n.eventTime,
                                    lane: n.lane,
                                    tag: n.tag,
                                    payload: n.payload,
                                    callback: n.callback,
                                    next: null
                                };
                                null === i ? o = i = a : i = i.next = a, n = n.next
                            } while (null !== n);
                            null === i ? o = i = t : i = i.next = t
                        } else o = i = t;
                        return n = {
                            baseState: r.baseState,
                            firstBaseUpdate: o,
                            lastBaseUpdate: i,
                            shared: r.shared,
                            effects: r.effects
                        }, void(e.updateQueue = n)
                    }
                    null === (e = n.lastBaseUpdate) ? n.firstBaseUpdate = t : e.next = t, n.lastBaseUpdate = t
                }

                function ji(e, t, n, r) {
                    var o = e.updateQueue;
                    Ri = !1;
                    var i = o.firstBaseUpdate,
                        a = o.lastBaseUpdate,
                        s = o.shared.pending;
                    if (null !== s) {
                        o.shared.pending = null;
                        var l = s,
                            u = l.next;
                        l.next = null, null === a ? i = u : a.next = u, a = l;
                        var c = e.alternate;
                        null !== c && (s = (c = c.updateQueue).lastBaseUpdate) !== a && (null === s ? c.firstBaseUpdate = u : s.next = u, c.lastBaseUpdate = l)
                    }
                    if (null !== i) {
                        var h = o.baseState;
                        for (a = 0, c = u = l = null, s = i;;) {
                            var d = s.lane,
                                f = s.eventTime;
                            if ((r & d) === d) {
                                null !== c && (c = c.next = {
                                    eventTime: f,
                                    lane: 0,
                                    tag: s.tag,
                                    payload: s.payload,
                                    callback: s.callback,
                                    next: null
                                });
                                e: {
                                    var p = e,
                                        m = s;
                                    switch (d = t, f = n, m.tag) {
                                        case 1:
                                            if ("function" == typeof(p = m.payload)) {
                                                h = p.call(f, h, d);
                                                break e
                                            }
                                            h = p;
                                            break e;
                                        case 3:
                                            p.flags = -65537 & p.flags | 128;
                                        case 0:
                                            if (null == (d = "function" == typeof(p = m.payload) ? p.call(f, h, d) : p)) break e;
                                            h = q({}, h, d);
                                            break e;
                                        case 2:
                                            Ri = !0
                                    }
                                }
                                null !== s.callback && 0 !== s.lane && (e.flags |= 64, null === (d = o.effects) ? o.effects = [s] : d.push(s))
                            } else f = {
                                eventTime: f,
                                lane: d,
                                tag: s.tag,
                                payload: s.payload,
                                callback: s.callback,
                                next: null
                            }, null === c ? (u = c = f, l = h) : c = c.next = f, a |= d;
                            if (null === (s = s.next)) {
                                if (null === (s = o.shared.pending)) break;
                                s = (d = s).next, d.next = null, o.lastBaseUpdate = d, o.shared.pending = null
                            }
                        }
                        if (null === c && (l = h), o.baseState = l, o.firstBaseUpdate = u, o.lastBaseUpdate = c, null !== (t = o.shared.interleaved)) {
                            o = t;
                            do {
                                a |= o.lane, o = o.next
                            } while (o !== t)
                        } else null === i && (o.shared.lanes = 0);
                        Ll |= a, e.lanes = a, e.memoizedState = h
                    }
                }

                function Fi(e, t, n) {
                    if (e = t.effects, t.effects = null, null !== e)
                        for (t = 0; t < e.length; t++) {
                            var r = e[t],
                                o = r.callback;
                            if (null !== o) {
                                if (r.callback = null, r = n, "function" != typeof o) throw Error(i(191, o));
                                o.call(r)
                            }
                        }
                }
                var Vi = (new r.Component).refs;

                function Bi(e, t, n, r) {
                    n = null == (n = n(r, t = e.memoizedState)) ? t : q({}, t, n), e.memoizedState = n, 0 === e.lanes && (e.updateQueue.baseState = n)
                }
                var zi = {
                    isMounted: function(e) {
                        return !!(e = e._reactInternals) && ze(e) === e
                    },
                    enqueueSetState: function(e, t, n) {
                        e = e._reactInternals;
                        var r = eu(),
                            o = tu(e),
                            i = Ni(r, o);
                        i.payload = t, null != n && (i.callback = n), null !== (t = Ii(e, i, o)) && (nu(t, e, o, r), Li(t, e, o))
                    },
                    enqueueReplaceState: function(e, t, n) {
                        e = e._reactInternals;
                        var r = eu(),
                            o = tu(e),
                            i = Ni(r, o);
                        i.tag = 1, i.payload = t, null != n && (i.callback = n), null !== (t = Ii(e, i, o)) && (nu(t, e, o, r), Li(t, e, o))
                    },
                    enqueueForceUpdate: function(e, t) {
                        e = e._reactInternals;
                        var n = eu(),
                            r = tu(e),
                            o = Ni(n, r);
                        o.tag = 2, null != t && (o.callback = t), null !== (t = Ii(e, o, r)) && (nu(t, e, r, n), Li(t, e, r))
                    }
                };

                function Ui(e, t, n, r, o, i, a) {
                    return "function" == typeof(e = e.stateNode).shouldComponentUpdate ? e.shouldComponentUpdate(r, i, a) : !(t.prototype && t.prototype.isPureReactComponent && lr(n, r) && lr(o, i))
                }

                function Wi(e, t, n) {
                    var r = !1,
                        o = Oo,
                        i = t.contextType;
                    return "object" == typeof i && null !== i ? i = Ti(i) : (o = Do(t) ? Ro : Ao.current, i = (r = null != (r = t.contextTypes)) ? Mo(e, o) : Oo), t = new t(n, i), e.memoizedState = null !== t.state && void 0 !== t.state ? t.state : null, t.updater = zi, e.stateNode = t, t._reactInternals = e, r && ((e = e.stateNode).__reactInternalMemoizedUnmaskedChildContext = o, e.__reactInternalMemoizedMaskedChildContext = i), t
                }

                function Hi(e, t, n, r) {
                    e = t.state, "function" == typeof t.componentWillReceiveProps && t.componentWillReceiveProps(n, r), "function" == typeof t.UNSAFE_componentWillReceiveProps && t.UNSAFE_componentWillReceiveProps(n, r), t.state !== e && zi.enqueueReplaceState(t, t.state, null)
                }

                function Gi(e, t, n, r) {
                    var o = e.stateNode;
                    o.props = n, o.state = e.memoizedState, o.refs = Vi, Mi(e);
                    var i = t.contextType;
                    "object" == typeof i && null !== i ? o.context = Ti(i) : (i = Do(t) ? Ro : Ao.current, o.context = Mo(e, i)), o.state = e.memoizedState, "function" == typeof(i = t.getDerivedStateFromProps) && (Bi(e, t, i, n), o.state = e.memoizedState), "function" == typeof t.getDerivedStateFromProps || "function" == typeof o.getSnapshotBeforeUpdate || "function" != typeof o.UNSAFE_componentWillMount && "function" != typeof o.componentWillMount || (t = o.state, "function" == typeof o.componentWillMount && o.componentWillMount(), "function" == typeof o.UNSAFE_componentWillMount && o.UNSAFE_componentWillMount(), t !== o.state && zi.enqueueReplaceState(o, o.state, null), ji(e, n, o, r), o.state = e.memoizedState), "function" == typeof o.componentDidMount && (e.flags |= 4194308)
                }

                function Qi(e, t, n) {
                    if (null !== (e = n.ref) && "function" != typeof e && "object" != typeof e) {
                        if (n._owner) {
                            if (n = n._owner) {
                                if (1 !== n.tag) throw Error(i(309));
                                var r = n.stateNode
                            }
                            if (!r) throw Error(i(147, e));
                            var o = r,
                                a = "" + e;
                            return null !== t && null !== t.ref && "function" == typeof t.ref && t.ref._stringRef === a ? t.ref : (t = function(e) {
                                var t = o.refs;
                                t === Vi && (t = o.refs = {}), null === e ? delete t[a] : t[a] = e
                            }, t._stringRef = a, t)
                        }
                        if ("string" != typeof e) throw Error(i(284));
                        if (!n._owner) throw Error(i(290, e))
                    }
                    return e
                }

                function Yi(e, t) {
                    throw e = Object.prototype.toString.call(t), Error(i(31, "[object Object]" === e ? "object with keys {" + Object.keys(t).join(", ") + "}" : e))
                }

                function $i(e) {
                    return (0, e._init)(e._payload)
                }

                function Zi(e) {
                    function t(t, n) {
                        if (e) {
                            var r = t.deletions;
                            null === r ? (t.deletions = [n], t.flags |= 16) : r.push(n)
                        }
                    }

                    function n(n, r) {
                        if (!e) return null;
                        for (; null !== r;) t(n, r), r = r.sibling;
                        return null
                    }

                    function r(e, t) {
                        for (e = new Map; null !== t;) null !== t.key ? e.set(t.key, t) : e.set(t.index, t), t = t.sibling;
                        return e
                    }

                    function o(e, t) {
                        return (e = Du(e, t)).index = 0, e.sibling = null, e
                    }

                    function a(t, n, r) {
                        return t.index = r, e ? null !== (r = t.alternate) ? (r = r.index) < n ? (t.flags |= 2, n) : r : (t.flags |= 2, n) : (t.flags |= 1048576, n)
                    }

                    function s(t) {
                        return e && null === t.alternate && (t.flags |= 2), t
                    }

                    function l(e, t, n, r) {
                        return null === t || 6 !== t.tag ? ((t = qu(n, e.mode, r)).return = e, t) : ((t = o(t, n)).return = e, t)
                    }

                    function u(e, t, n, r) {
                        var i = n.type;
                        return i === E ? h(e, t, n.props.children, r, n.key) : null !== t && (t.elementType === i || "object" == typeof i && null !== i && i.$$typeof === M && $i(i) === t.type) ? ((r = o(t, n.props)).ref = Qi(e, t, n), r.return = e, r) : ((r = Nu(n.type, n.key, n.props, null, e.mode, r)).ref = Qi(e, t, n), r.return = e, r)
                    }

                    function c(e, t, n, r) {
                        return null === t || 4 !== t.tag || t.stateNode.containerInfo !== n.containerInfo || t.stateNode.implementation !== n.implementation ? ((t = ju(n, e.mode, r)).return = e, t) : ((t = o(t, n.children || [])).return = e, t)
                    }

                    function h(e, t, n, r, i) {
                        return null === t || 7 !== t.tag ? ((t = Iu(n, e.mode, r, i)).return = e, t) : ((t = o(t, n)).return = e, t)
                    }

                    function d(e, t, n) {
                        if ("string" == typeof t && "" !== t || "number" == typeof t) return (t = qu("" + t, e.mode, n)).return = e, t;
                        if ("object" == typeof t && null !== t) {
                            switch (t.$$typeof) {
                                case _:
                                    return (n = Nu(t.type, t.key, t.props, null, e.mode, n)).ref = Qi(e, null, t), n.return = e, n;
                                case x:
                                    return (t = ju(t, e.mode, n)).return = e, t;
                                case M:
                                    return d(e, (0, t._init)(t._payload), n)
                            }
                            if (te(t) || I(t)) return (t = Iu(t, e.mode, n, null)).return = e, t;
                            Yi(e, t)
                        }
                        return null
                    }

                    function f(e, t, n, r) {
                        var o = null !== t ? t.key : null;
                        if ("string" == typeof n && "" !== n || "number" == typeof n) return null !== o ? null : l(e, t, "" + n, r);
                        if ("object" == typeof n && null !== n) {
                            switch (n.$$typeof) {
                                case _:
                                    return n.key === o ? u(e, t, n, r) : null;
                                case x:
                                    return n.key === o ? c(e, t, n, r) : null;
                                case M:
                                    return f(e, t, (o = n._init)(n._payload), r)
                            }
                            if (te(n) || I(n)) return null !== o ? null : h(e, t, n, r, null);
                            Yi(e, n)
                        }
                        return null
                    }

                    function p(e, t, n, r, o) {
                        if ("string" == typeof r && "" !== r || "number" == typeof r) return l(t, e = e.get(n) || null, "" + r, o);
                        if ("object" == typeof r && null !== r) {
                            switch (r.$$typeof) {
                                case _:
                                    return u(t, e = e.get(null === r.key ? n : r.key) || null, r, o);
                                case x:
                                    return c(t, e = e.get(null === r.key ? n : r.key) || null, r, o);
                                case M:
                                    return p(e, t, n, (0, r._init)(r._payload), o)
                            }
                            if (te(r) || I(r)) return h(t, e = e.get(n) || null, r, o, null);
                            Yi(t, r)
                        }
                        return null
                    }

                    function m(o, i, s, l) {
                        for (var u = null, c = null, h = i, m = i = 0, v = null; null !== h && m < s.length; m++) {
                            h.index > m ? (v = h, h = null) : v = h.sibling;
                            var g = f(o, h, s[m], l);
                            if (null === g) {
                                null === h && (h = v);
                                break
                            }
                            e && h && null === g.alternate && t(o, h), i = a(g, i, m), null === c ? u = g : c.sibling = g, c = g, h = v
                        }
                        if (m === s.length) return n(o, h), ii && Jo(o, m), u;
                        if (null === h) {
                            for (; m < s.length; m++) null !== (h = d(o, s[m], l)) && (i = a(h, i, m), null === c ? u = h : c.sibling = h, c = h);
                            return ii && Jo(o, m), u
                        }
                        for (h = r(o, h); m < s.length; m++) null !== (v = p(h, o, m, s[m], l)) && (e && null !== v.alternate && h.delete(null === v.key ? m : v.key), i = a(v, i, m), null === c ? u = v : c.sibling = v, c = v);
                        return e && h.forEach((function(e) {
                            return t(o, e)
                        })), ii && Jo(o, m), u
                    }

                    function v(o, s, l, u) {
                        var c = I(l);
                        if ("function" != typeof c) throw Error(i(150));
                        if (null == (l = c.call(l))) throw Error(i(151));
                        for (var h = c = null, m = s, v = s = 0, g = null, y = l.next(); null !== m && !y.done; v++, y = l.next()) {
                            m.index > v ? (g = m, m = null) : g = m.sibling;
                            var b = f(o, m, y.value, u);
                            if (null === b) {
                                null === m && (m = g);
                                break
                            }
                            e && m && null === b.alternate && t(o, m), s = a(b, s, v), null === h ? c = b : h.sibling = b, h = b, m = g
                        }
                        if (y.done) return n(o, m), ii && Jo(o, v), c;
                        if (null === m) {
                            for (; !y.done; v++, y = l.next()) null !== (y = d(o, y.value, u)) && (s = a(y, s, v), null === h ? c = y : h.sibling = y, h = y);
                            return ii && Jo(o, v), c
                        }
                        for (m = r(o, m); !y.done; v++, y = l.next()) null !== (y = p(m, o, v, y.value, u)) && (e && null !== y.alternate && m.delete(null === y.key ? v : y.key), s = a(y, s, v), null === h ? c = y : h.sibling = y, h = y);
                        return e && m.forEach((function(e) {
                            return t(o, e)
                        })), ii && Jo(o, v), c
                    }
                    return function e(r, i, a, l) {
                        if ("object" == typeof a && null !== a && a.type === E && null === a.key && (a = a.props.children), "object" == typeof a && null !== a) {
                            switch (a.$$typeof) {
                                case _:
                                    e: {
                                        for (var u = a.key, c = i; null !== c;) {
                                            if (c.key === u) {
                                                if ((u = a.type) === E) {
                                                    if (7 === c.tag) {
                                                        n(r, c.sibling), (i = o(c, a.props.children)).return = r, r = i;
                                                        break e
                                                    }
                                                } else if (c.elementType === u || "object" == typeof u && null !== u && u.$$typeof === M && $i(u) === c.type) {
                                                    n(r, c.sibling), (i = o(c, a.props)).ref = Qi(r, c, a), i.return = r, r = i;
                                                    break e
                                                }
                                                n(r, c);
                                                break
                                            }
                                            t(r, c), c = c.sibling
                                        }
                                        a.type === E ? ((i = Iu(a.props.children, r.mode, l, a.key)).return = r, r = i) : ((l = Nu(a.type, a.key, a.props, null, r.mode, l)).ref = Qi(r, i, a), l.return = r, r = l)
                                    }
                                    return s(r);
                                case x:
                                    e: {
                                        for (c = a.key; null !== i;) {
                                            if (i.key === c) {
                                                if (4 === i.tag && i.stateNode.containerInfo === a.containerInfo && i.stateNode.implementation === a.implementation) {
                                                    n(r, i.sibling), (i = o(i, a.children || [])).return = r, r = i;
                                                    break e
                                                }
                                                n(r, i);
                                                break
                                            }
                                            t(r, i), i = i.sibling
                                        }(i = ju(a, r.mode, l)).return = r,
                                        r = i
                                    }
                                    return s(r);
                                case M:
                                    return e(r, i, (c = a._init)(a._payload), l)
                            }
                            if (te(a)) return m(r, i, a, l);
                            if (I(a)) return v(r, i, a, l);
                            Yi(r, a)
                        }
                        return "string" == typeof a && "" !== a || "number" == typeof a ? (a = "" + a, null !== i && 6 === i.tag ? (n(r, i.sibling), (i = o(i, a)).return = r, r = i) : (n(r, i), (i = qu(a, r.mode, l)).return = r, r = i), s(r)) : n(r, i)
                    }
                }
                var Xi = Zi(!0),
                    Ki = Zi(!1),
                    Ji = {},
                    ea = ko(Ji),
                    ta = ko(Ji),
                    na = ko(Ji);

                function ra(e) {
                    if (e === Ji) throw Error(i(174));
                    return e
                }

                function oa(e, t) {
                    switch (Co(na, t), Co(ta, e), Co(ea, Ji), e = t.nodeType) {
                        case 9:
                        case 11:
                            t = (t = t.documentElement) ? t.namespaceURI : le(null, "");
                            break;
                        default:
                            t = le(t = (e = 8 === e ? t.parentNode : t).namespaceURI || null, e = e.tagName)
                    }
                    To(ea), Co(ea, t)
                }

                function ia() {
                    To(ea), To(ta), To(na)
                }

                function aa(e) {
                    ra(na.current);
                    var t = ra(ea.current),
                        n = le(t, e.type);
                    t !== n && (Co(ta, e), Co(ea, n))
                }

                function sa(e) {
                    ta.current === e && (To(ea), To(ta))
                }
                var la = ko(0);

                function ua(e) {
                    for (var t = e; null !== t;) {
                        if (13 === t.tag) {
                            var n = t.memoizedState;
                            if (null !== n && (null === (n = n.dehydrated) || "$?" === n.data || "$!" === n.data)) return t
                        } else if (19 === t.tag && void 0 !== t.memoizedProps.revealOrder) {
                            if (0 != (128 & t.flags)) return t
                        } else if (null !== t.child) {
                            t.child.return = t, t = t.child;
                            continue
                        }
                        if (t === e) break;
                        for (; null === t.sibling;) {
                            if (null === t.return || t.return === e) return null;
                            t = t.return
                        }
                        t.sibling.return = t.return, t = t.sibling
                    }
                    return null
                }
                var ca = [];

                function ha() {
                    for (var e = 0; e < ca.length; e++) ca[e]._workInProgressVersionPrimary = null;
                    ca.length = 0
                }
                var da = w.ReactCurrentDispatcher,
                    fa = w.ReactCurrentBatchConfig,
                    pa = 0,
                    ma = null,
                    va = null,
                    ga = null,
                    ya = !1,
                    ba = !1,
                    wa = 0,
                    _a = 0;

                function xa() {
                    throw Error(i(321))
                }

                function Ea(e, t) {
                    if (null === t) return !1;
                    for (var n = 0; n < t.length && n < e.length; n++)
                        if (!sr(e[n], t[n])) return !1;
                    return !0
                }

                function Sa(e, t, n, r, o, a) {
                    if (pa = a, ma = t, t.memoizedState = null, t.updateQueue = null, t.lanes = 0, da.current = null === e || null === e.memoizedState ? ss : ls, e = n(r, o), ba) {
                        a = 0;
                        do {
                            if (ba = !1, wa = 0, 25 <= a) throw Error(i(301));
                            a += 1, ga = va = null, t.updateQueue = null, da.current = us, e = n(r, o)
                        } while (ba)
                    }
                    if (da.current = as, t = null !== va && null !== va.next, pa = 0, ga = va = ma = null, ya = !1, t) throw Error(i(300));
                    return e
                }

                function ka() {
                    var e = 0 !== wa;
                    return wa = 0, e
                }

                function Ta() {
                    var e = {
                        memoizedState: null,
                        baseState: null,
                        baseQueue: null,
                        queue: null,
                        next: null
                    };
                    return null === ga ? ma.memoizedState = ga = e : ga = ga.next = e, ga
                }

                function Ca() {
                    if (null === va) {
                        var e = ma.alternate;
                        e = null !== e ? e.memoizedState : null
                    } else e = va.next;
                    var t = null === ga ? ma.memoizedState : ga.next;
                    if (null !== t) ga = t, va = e;
                    else {
                        if (null === e) throw Error(i(310));
                        e = {
                            memoizedState: (va = e).memoizedState,
                            baseState: va.baseState,
                            baseQueue: va.baseQueue,
                            queue: va.queue,
                            next: null
                        }, null === ga ? ma.memoizedState = ga = e : ga = ga.next = e
                    }
                    return ga
                }

                function Oa(e, t) {
                    return "function" == typeof t ? t(e) : t
                }

                function Aa(e) {
                    var t = Ca(),
                        n = t.queue;
                    if (null === n) throw Error(i(311));
                    n.lastRenderedReducer = e;
                    var r = va,
                        o = r.baseQueue,
                        a = n.pending;
                    if (null !== a) {
                        if (null !== o) {
                            var s = o.next;
                            o.next = a.next, a.next = s
                        }
                        r.baseQueue = o = a, n.pending = null
                    }
                    if (null !== o) {
                        a = o.next, r = r.baseState;
                        var l = s = null,
                            u = null,
                            c = a;
                        do {
                            var h = c.lane;
                            if ((pa & h) === h) null !== u && (u = u.next = {
                                lane: 0,
                                action: c.action,
                                hasEagerState: c.hasEagerState,
                                eagerState: c.eagerState,
                                next: null
                            }), r = c.hasEagerState ? c.eagerState : e(r, c.action);
                            else {
                                var d = {
                                    lane: h,
                                    action: c.action,
                                    hasEagerState: c.hasEagerState,
                                    eagerState: c.eagerState,
                                    next: null
                                };
                                null === u ? (l = u = d, s = r) : u = u.next = d, ma.lanes |= h, Ll |= h
                            }
                            c = c.next
                        } while (null !== c && c !== a);
                        null === u ? s = r : u.next = l, sr(r, t.memoizedState) || (ws = !0), t.memoizedState = r, t.baseState = s, t.baseQueue = u, n.lastRenderedState = r
                    }
                    if (null !== (e = n.interleaved)) {
                        o = e;
                        do {
                            a = o.lane, ma.lanes |= a, Ll |= a, o = o.next
                        } while (o !== e)
                    } else null === o && (n.lanes = 0);
                    return [t.memoizedState, n.dispatch]
                }

                function Pa(e) {
                    var t = Ca(),
                        n = t.queue;
                    if (null === n) throw Error(i(311));
                    n.lastRenderedReducer = e;
                    var r = n.dispatch,
                        o = n.pending,
                        a = t.memoizedState;
                    if (null !== o) {
                        n.pending = null;
                        var s = o = o.next;
                        do {
                            a = e(a, s.action), s = s.next
                        } while (s !== o);
                        sr(a, t.memoizedState) || (ws = !0), t.memoizedState = a, null === t.baseQueue && (t.baseState = a), n.lastRenderedState = a
                    }
                    return [a, r]
                }

                function Ra() {}

                function Ma(e, t) {
                    var n = ma,
                        r = Ca(),
                        o = t(),
                        a = !sr(r.memoizedState, o);
                    if (a && (r.memoizedState = o, ws = !0), r = r.queue, Wa(Ia.bind(null, n, r, e), [e]), r.getSnapshot !== t || a || null !== ga && 1 & ga.memoizedState.tag) {
                        if (n.flags |= 2048, Fa(9, Na.bind(null, n, r, o, t), void 0, null), null === Al) throw Error(i(349));
                        0 != (30 & pa) || Da(n, t, o)
                    }
                    return o
                }

                function Da(e, t, n) {
                    e.flags |= 16384, e = {
                        getSnapshot: t,
                        value: n
                    }, null === (t = ma.updateQueue) ? (t = {
                        lastEffect: null,
                        stores: null
                    }, ma.updateQueue = t, t.stores = [e]) : null === (n = t.stores) ? t.stores = [e] : n.push(e)
                }

                function Na(e, t, n, r) {
                    t.value = n, t.getSnapshot = r, La(t) && qa(e)
                }

                function Ia(e, t, n) {
                    return n((function() {
                        La(t) && qa(e)
                    }))
                }

                function La(e) {
                    var t = e.getSnapshot;
                    e = e.value;
                    try {
                        var n = t();
                        return !sr(e, n)
                    } catch (e) {
                        return !0
                    }
                }

                function qa(e) {
                    var t = Pi(e, 1);
                    null !== t && nu(t, e, 1, -1)
                }

                function ja(e) {
                    var t = Ta();
                    return "function" == typeof e && (e = e()), t.memoizedState = t.baseState = e, e = {
                        pending: null,
                        interleaved: null,
                        lanes: 0,
                        dispatch: null,
                        lastRenderedReducer: Oa,
                        lastRenderedState: e
                    }, t.queue = e, e = e.dispatch = ns.bind(null, ma, e), [t.memoizedState, e]
                }

                function Fa(e, t, n, r) {
                    return e = {
                        tag: e,
                        create: t,
                        destroy: n,
                        deps: r,
                        next: null
                    }, null === (t = ma.updateQueue) ? (t = {
                        lastEffect: null,
                        stores: null
                    }, ma.updateQueue = t, t.lastEffect = e.next = e) : null === (n = t.lastEffect) ? t.lastEffect = e.next = e : (r = n.next, n.next = e, e.next = r, t.lastEffect = e), e
                }

                function Va() {
                    return Ca().memoizedState
                }

                function Ba(e, t, n, r) {
                    var o = Ta();
                    ma.flags |= e, o.memoizedState = Fa(1 | t, n, void 0, void 0 === r ? null : r)
                }

                function za(e, t, n, r) {
                    var o = Ca();
                    r = void 0 === r ? null : r;
                    var i = void 0;
                    if (null !== va) {
                        var a = va.memoizedState;
                        if (i = a.destroy, null !== r && Ea(r, a.deps)) return void(o.memoizedState = Fa(t, n, i, r))
                    }
                    ma.flags |= e, o.memoizedState = Fa(1 | t, n, i, r)
                }

                function Ua(e, t) {
                    return Ba(8390656, 8, e, t)
                }

                function Wa(e, t) {
                    return za(2048, 8, e, t)
                }

                function Ha(e, t) {
                    return za(4, 2, e, t)
                }

                function Ga(e, t) {
                    return za(4, 4, e, t)
                }

                function Qa(e, t) {
                    return "function" == typeof t ? (e = e(), t(e), function() {
                        t(null)
                    }) : null != t ? (e = e(), t.current = e, function() {
                        t.current = null
                    }) : void 0
                }

                function Ya(e, t, n) {
                    return n = null != n ? n.concat([e]) : null, za(4, 4, Qa.bind(null, t, e), n)
                }

                function $a() {}

                function Za(e, t) {
                    var n = Ca();
                    t = void 0 === t ? null : t;
                    var r = n.memoizedState;
                    return null !== r && null !== t && Ea(t, r[1]) ? r[0] : (n.memoizedState = [e, t], e)
                }

                function Xa(e, t) {
                    var n = Ca();
                    t = void 0 === t ? null : t;
                    var r = n.memoizedState;
                    return null !== r && null !== t && Ea(t, r[1]) ? r[0] : (e = e(), n.memoizedState = [e, t], e)
                }

                function Ka(e, t, n) {
                    return 0 == (21 & pa) ? (e.baseState && (e.baseState = !1, ws = !0), e.memoizedState = n) : (sr(n, t) || (n = mt(), ma.lanes |= n, Ll |= n, e.baseState = !0), t)
                }

                function Ja(e, t) {
                    var n = bt;
                    bt = 0 !== n && 4 > n ? n : 4, e(!0);
                    var r = fa.transition;
                    fa.transition = {};
                    try {
                        e(!1), t()
                    } finally {
                        bt = n, fa.transition = r
                    }
                }

                function es() {
                    return Ca().memoizedState
                }

                function ts(e, t, n) {
                    var r = tu(e);
                    n = {
                        lane: r,
                        action: n,
                        hasEagerState: !1,
                        eagerState: null,
                        next: null
                    }, rs(e) ? os(t, n) : null !== (n = Ai(e, t, n, r)) && (nu(n, e, r, eu()), is(n, t, r))
                }

                function ns(e, t, n) {
                    var r = tu(e),
                        o = {
                            lane: r,
                            action: n,
                            hasEagerState: !1,
                            eagerState: null,
                            next: null
                        };
                    if (rs(e)) os(t, o);
                    else {
                        var i = e.alternate;
                        if (0 === e.lanes && (null === i || 0 === i.lanes) && null !== (i = t.lastRenderedReducer)) try {
                            var a = t.lastRenderedState,
                                s = i(a, n);
                            if (o.hasEagerState = !0, o.eagerState = s, sr(s, a)) {
                                var l = t.interleaved;
                                return null === l ? (o.next = o, Oi(t)) : (o.next = l.next, l.next = o), void(t.interleaved = o)
                            }
                        } catch (e) {}
                        null !== (n = Ai(e, t, o, r)) && (nu(n, e, r, o = eu()), is(n, t, r))
                    }
                }

                function rs(e) {
                    var t = e.alternate;
                    return e === ma || null !== t && t === ma
                }

                function os(e, t) {
                    ba = ya = !0;
                    var n = e.pending;
                    null === n ? t.next = t : (t.next = n.next, n.next = t), e.pending = t
                }

                function is(e, t, n) {
                    if (0 != (4194240 & n)) {
                        var r = t.lanes;
                        n |= r &= e.pendingLanes, t.lanes = n, yt(e, n)
                    }
                }
                var as = {
                        readContext: Ti,
                        useCallback: xa,
                        useContext: xa,
                        useEffect: xa,
                        useImperativeHandle: xa,
                        useInsertionEffect: xa,
                        useLayoutEffect: xa,
                        useMemo: xa,
                        useReducer: xa,
                        useRef: xa,
                        useState: xa,
                        useDebugValue: xa,
                        useDeferredValue: xa,
                        useTransition: xa,
                        useMutableSource: xa,
                        useSyncExternalStore: xa,
                        useId: xa,
                        unstable_isNewReconciler: !1
                    },
                    ss = {
                        readContext: Ti,
                        useCallback: function(e, t) {
                            return Ta().memoizedState = [e, void 0 === t ? null : t], e
                        },
                        useContext: Ti,
                        useEffect: Ua,
                        useImperativeHandle: function(e, t, n) {
                            return n = null != n ? n.concat([e]) : null, Ba(4194308, 4, Qa.bind(null, t, e), n)
                        },
                        useLayoutEffect: function(e, t) {
                            return Ba(4194308, 4, e, t)
                        },
                        useInsertionEffect: function(e, t) {
                            return Ba(4, 2, e, t)
                        },
                        useMemo: function(e, t) {
                            var n = Ta();
                            return t = void 0 === t ? null : t, e = e(), n.memoizedState = [e, t], e
                        },
                        useReducer: function(e, t, n) {
                            var r = Ta();
                            return t = void 0 !== n ? n(t) : t, r.memoizedState = r.baseState = t, e = {
                                pending: null,
                                interleaved: null,
                                lanes: 0,
                                dispatch: null,
                                lastRenderedReducer: e,
                                lastRenderedState: t
                            }, r.queue = e, e = e.dispatch = ts.bind(null, ma, e), [r.memoizedState, e]
                        },
                        useRef: function(e) {
                            return e = {
                                current: e
                            }, Ta().memoizedState = e
                        },
                        useState: ja,
                        useDebugValue: $a,
                        useDeferredValue: function(e) {
                            return Ta().memoizedState = e
                        },
                        useTransition: function() {
                            var e = ja(!1),
                                t = e[0];
                            return e = Ja.bind(null, e[1]), Ta().memoizedState = e, [t, e]
                        },
                        useMutableSource: function() {},
                        useSyncExternalStore: function(e, t, n) {
                            var r = ma,
                                o = Ta();
                            if (ii) {
                                if (void 0 === n) throw Error(i(407));
                                n = n()
                            } else {
                                if (n = t(), null === Al) throw Error(i(349));
                                0 != (30 & pa) || Da(r, t, n)
                            }
                            o.memoizedState = n;
                            var a = {
                                value: n,
                                getSnapshot: t
                            };
                            return o.queue = a, Ua(Ia.bind(null, r, a, e), [e]), r.flags |= 2048, Fa(9, Na.bind(null, r, a, n, t), void 0, null), n
                        },
                        useId: function() {
                            var e = Ta(),
                                t = Al.identifierPrefix;
                            if (ii) {
                                var n = Ko;
                                t = ":" + t + "R" + (n = (Xo & ~(1 << 32 - at(Xo) - 1)).toString(32) + n), 0 < (n = wa++) && (t += "H" + n.toString(32)), t += ":"
                            } else t = ":" + t + "r" + (n = _a++).toString(32) + ":";
                            return e.memoizedState = t
                        },
                        unstable_isNewReconciler: !1
                    },
                    ls = {
                        readContext: Ti,
                        useCallback: Za,
                        useContext: Ti,
                        useEffect: Wa,
                        useImperativeHandle: Ya,
                        useInsertionEffect: Ha,
                        useLayoutEffect: Ga,
                        useMemo: Xa,
                        useReducer: Aa,
                        useRef: Va,
                        useState: function() {
                            return Aa(Oa)
                        },
                        useDebugValue: $a,
                        useDeferredValue: function(e) {
                            return Ka(Ca(), va.memoizedState, e)
                        },
                        useTransition: function() {
                            return [Aa(Oa)[0], Ca().memoizedState]
                        },
                        useMutableSource: Ra,
                        useSyncExternalStore: Ma,
                        useId: es,
                        unstable_isNewReconciler: !1
                    },
                    us = {
                        readContext: Ti,
                        useCallback: Za,
                        useContext: Ti,
                        useEffect: Wa,
                        useImperativeHandle: Ya,
                        useInsertionEffect: Ha,
                        useLayoutEffect: Ga,
                        useMemo: Xa,
                        useReducer: Pa,
                        useRef: Va,
                        useState: function() {
                            return Pa(Oa)
                        },
                        useDebugValue: $a,
                        useDeferredValue: function(e) {
                            var t = Ca();
                            return null === va ? t.memoizedState = e : Ka(t, va.memoizedState, e)
                        },
                        useTransition: function() {
                            return [Pa(Oa)[0], Ca().memoizedState]
                        },
                        useMutableSource: Ra,
                        useSyncExternalStore: Ma,
                        useId: es,
                        unstable_isNewReconciler: !1
                    };

                function cs(e, t) {
                    try {
                        var n = "",
                            r = t;
                        do {
                            n += B(r), r = r.return
                        } while (r);
                        var o = n
                    } catch (e) {
                        o = "\nError generating stack: " + e.message + "\n" + e.stack
                    }
                    return {
                        value: e,
                        source: t,
                        stack: o,
                        digest: null
                    }
                }

                function hs(e, t, n) {
                    return {
                        value: e,
                        source: null,
                        stack: null != n ? n : null,
                        digest: null != t ? t : null
                    }
                }

                function ds(e, t) {
                    try {
                        console.error(t.value)
                    } catch (e) {
                        setTimeout((function() {
                            throw e
                        }))
                    }
                }
                var fs = "function" == typeof WeakMap ? WeakMap : Map;

                function ps(e, t, n) {
                    (n = Ni(-1, n)).tag = 3, n.payload = {
                        element: null
                    };
                    var r = t.value;
                    return n.callback = function() {
                        Wl || (Wl = !0, Hl = r), ds(0, t)
                    }, n
                }

                function ms(e, t, n) {
                    (n = Ni(-1, n)).tag = 3;
                    var r = e.type.getDerivedStateFromError;
                    if ("function" == typeof r) {
                        var o = t.value;
                        n.payload = function() {
                            return r(o)
                        }, n.callback = function() {
                            ds(0, t)
                        }
                    }
                    var i = e.stateNode;
                    return null !== i && "function" == typeof i.componentDidCatch && (n.callback = function() {
                        ds(0, t), "function" != typeof r && (null === Gl ? Gl = new Set([this]) : Gl.add(this));
                        var e = t.stack;
                        this.componentDidCatch(t.value, {
                            componentStack: null !== e ? e : ""
                        })
                    }), n
                }

                function vs(e, t, n) {
                    var r = e.pingCache;
                    if (null === r) {
                        r = e.pingCache = new fs;
                        var o = new Set;
                        r.set(t, o)
                    } else void 0 === (o = r.get(t)) && (o = new Set, r.set(t, o));
                    o.has(n) || (o.add(n), e = ku.bind(null, e, t, n), t.then(e, e))
                }

                function gs(e) {
                    do {
                        var t;
                        if ((t = 13 === e.tag) && (t = null === (t = e.memoizedState) || null !== t.dehydrated), t) return e;
                        e = e.return
                    } while (null !== e);
                    return null
                }

                function ys(e, t, n, r, o) {
                    return 0 == (1 & e.mode) ? (e === t ? e.flags |= 65536 : (e.flags |= 128, n.flags |= 131072, n.flags &= -52805, 1 === n.tag && (null === n.alternate ? n.tag = 17 : ((t = Ni(-1, 1)).tag = 2, Ii(n, t, 1))), n.lanes |= 1), e) : (e.flags |= 65536, e.lanes = o, e)
                }
                var bs = w.ReactCurrentOwner,
                    ws = !1;

                function _s(e, t, n, r) {
                    t.child = null === e ? Ki(t, null, n, r) : Xi(t, e.child, n, r)
                }

                function xs(e, t, n, r, o) {
                    n = n.render;
                    var i = t.ref;
                    return ki(t, o), r = Sa(e, t, n, r, i, o), n = ka(), null === e || ws ? (ii && n && ti(t), t.flags |= 1, _s(e, t, r, o), t.child) : (t.updateQueue = e.updateQueue, t.flags &= -2053, e.lanes &= ~o, Ws(e, t, o))
                }

                function Es(e, t, n, r, o) {
                    if (null === e) {
                        var i = n.type;
                        return "function" != typeof i || Mu(i) || void 0 !== i.defaultProps || null !== n.compare || void 0 !== n.defaultProps ? ((e = Nu(n.type, null, r, t, t.mode, o)).ref = t.ref, e.return = t, t.child = e) : (t.tag = 15, t.type = i, Ss(e, t, i, r, o))
                    }
                    if (i = e.child, 0 == (e.lanes & o)) {
                        var a = i.memoizedProps;
                        if ((n = null !== (n = n.compare) ? n : lr)(a, r) && e.ref === t.ref) return Ws(e, t, o)
                    }
                    return t.flags |= 1, (e = Du(i, r)).ref = t.ref, e.return = t, t.child = e
                }

                function Ss(e, t, n, r, o) {
                    if (null !== e) {
                        var i = e.memoizedProps;
                        if (lr(i, r) && e.ref === t.ref) {
                            if (ws = !1, t.pendingProps = r = i, 0 == (e.lanes & o)) return t.lanes = e.lanes, Ws(e, t, o);
                            0 != (131072 & e.flags) && (ws = !0)
                        }
                    }
                    return Cs(e, t, n, r, o)
                }

                function ks(e, t, n) {
                    var r = t.pendingProps,
                        o = r.children,
                        i = null !== e ? e.memoizedState : null;
                    if ("hidden" === r.mode)
                        if (0 == (1 & t.mode)) t.memoizedState = {
                            baseLanes: 0,
                            cachePool: null,
                            transitions: null
                        }, Co(Dl, Ml), Ml |= n;
                        else {
                            if (0 == (1073741824 & n)) return e = null !== i ? i.baseLanes | n : n, t.lanes = t.childLanes = 1073741824, t.memoizedState = {
                                baseLanes: e,
                                cachePool: null,
                                transitions: null
                            }, t.updateQueue = null, Co(Dl, Ml), Ml |= e, null;
                            t.memoizedState = {
                                baseLanes: 0,
                                cachePool: null,
                                transitions: null
                            }, r = null !== i ? i.baseLanes : n, Co(Dl, Ml), Ml |= r
                        }
                    else null !== i ? (r = i.baseLanes | n, t.memoizedState = null) : r = n, Co(Dl, Ml), Ml |= r;
                    return _s(e, t, o, n), t.child
                }

                function Ts(e, t) {
                    var n = t.ref;
                    (null === e && null !== n || null !== e && e.ref !== n) && (t.flags |= 512, t.flags |= 2097152)
                }

                function Cs(e, t, n, r, o) {
                    var i = Do(n) ? Ro : Ao.current;
                    return i = Mo(t, i), ki(t, o), n = Sa(e, t, n, r, i, o), r = ka(), null === e || ws ? (ii && r && ti(t), t.flags |= 1, _s(e, t, n, o), t.child) : (t.updateQueue = e.updateQueue, t.flags &= -2053, e.lanes &= ~o, Ws(e, t, o))
                }

                function Os(e, t, n, r, o) {
                    if (Do(n)) {
                        var i = !0;
                        qo(t)
                    } else i = !1;
                    if (ki(t, o), null === t.stateNode) Us(e, t), Wi(t, n, r), Gi(t, n, r, o), r = !0;
                    else if (null === e) {
                        var a = t.stateNode,
                            s = t.memoizedProps;
                        a.props = s;
                        var l = a.context,
                            u = n.contextType;
                        u = "object" == typeof u && null !== u ? Ti(u) : Mo(t, u = Do(n) ? Ro : Ao.current);
                        var c = n.getDerivedStateFromProps,
                            h = "function" == typeof c || "function" == typeof a.getSnapshotBeforeUpdate;
                        h || "function" != typeof a.UNSAFE_componentWillReceiveProps && "function" != typeof a.componentWillReceiveProps || (s !== r || l !== u) && Hi(t, a, r, u), Ri = !1;
                        var d = t.memoizedState;
                        a.state = d, ji(t, r, a, o), l = t.memoizedState, s !== r || d !== l || Po.current || Ri ? ("function" == typeof c && (Bi(t, n, c, r), l = t.memoizedState), (s = Ri || Ui(t, n, s, r, d, l, u)) ? (h || "function" != typeof a.UNSAFE_componentWillMount && "function" != typeof a.componentWillMount || ("function" == typeof a.componentWillMount && a.componentWillMount(), "function" == typeof a.UNSAFE_componentWillMount && a.UNSAFE_componentWillMount()), "function" == typeof a.componentDidMount && (t.flags |= 4194308)) : ("function" == typeof a.componentDidMount && (t.flags |= 4194308), t.memoizedProps = r, t.memoizedState = l), a.props = r, a.state = l, a.context = u, r = s) : ("function" == typeof a.componentDidMount && (t.flags |= 4194308), r = !1)
                    } else {
                        a = t.stateNode, Di(e, t), s = t.memoizedProps, u = t.type === t.elementType ? s : gi(t.type, s), a.props = u, h = t.pendingProps, d = a.context, l = "object" == typeof(l = n.contextType) && null !== l ? Ti(l) : Mo(t, l = Do(n) ? Ro : Ao.current);
                        var f = n.getDerivedStateFromProps;
                        (c = "function" == typeof f || "function" == typeof a.getSnapshotBeforeUpdate) || "function" != typeof a.UNSAFE_componentWillReceiveProps && "function" != typeof a.componentWillReceiveProps || (s !== h || d !== l) && Hi(t, a, r, l), Ri = !1, d = t.memoizedState, a.state = d, ji(t, r, a, o);
                        var p = t.memoizedState;
                        s !== h || d !== p || Po.current || Ri ? ("function" == typeof f && (Bi(t, n, f, r), p = t.memoizedState), (u = Ri || Ui(t, n, u, r, d, p, l) || !1) ? (c || "function" != typeof a.UNSAFE_componentWillUpdate && "function" != typeof a.componentWillUpdate || ("function" == typeof a.componentWillUpdate && a.componentWillUpdate(r, p, l), "function" == typeof a.UNSAFE_componentWillUpdate && a.UNSAFE_componentWillUpdate(r, p, l)), "function" == typeof a.componentDidUpdate && (t.flags |= 4), "function" == typeof a.getSnapshotBeforeUpdate && (t.flags |= 1024)) : ("function" != typeof a.componentDidUpdate || s === e.memoizedProps && d === e.memoizedState || (t.flags |= 4), "function" != typeof a.getSnapshotBeforeUpdate || s === e.memoizedProps && d === e.memoizedState || (t.flags |= 1024), t.memoizedProps = r, t.memoizedState = p), a.props = r, a.state = p, a.context = l, r = u) : ("function" != typeof a.componentDidUpdate || s === e.memoizedProps && d === e.memoizedState || (t.flags |= 4), "function" != typeof a.getSnapshotBeforeUpdate || s === e.memoizedProps && d === e.memoizedState || (t.flags |= 1024), r = !1)
                    }
                    return As(e, t, n, r, i, o)
                }

                function As(e, t, n, r, o, i) {
                    Ts(e, t);
                    var a = 0 != (128 & t.flags);
                    if (!r && !a) return o && jo(t, n, !1), Ws(e, t, i);
                    r = t.stateNode, bs.current = t;
                    var s = a && "function" != typeof n.getDerivedStateFromError ? null : r.render();
                    return t.flags |= 1, null !== e && a ? (t.child = Xi(t, e.child, null, i), t.child = Xi(t, null, s, i)) : _s(e, t, s, i), t.memoizedState = r.state, o && jo(t, n, !0), t.child
                }

                function Ps(e) {
                    var t = e.stateNode;
                    t.pendingContext ? Io(0, t.pendingContext, t.pendingContext !== t.context) : t.context && Io(0, t.context, !1), oa(e, t.containerInfo)
                }

                function Rs(e, t, n, r, o) {
                    return pi(), mi(o), t.flags |= 256, _s(e, t, n, r), t.child
                }
                var Ms, Ds, Ns, Is = {
                    dehydrated: null,
                    treeContext: null,
                    retryLane: 0
                };

                function Ls(e) {
                    return {
                        baseLanes: e,
                        cachePool: null,
                        transitions: null
                    }
                }

                function qs(e, t, n) {
                    var r, o = t.pendingProps,
                        a = la.current,
                        s = !1,
                        l = 0 != (128 & t.flags);
                    if ((r = l) || (r = (null === e || null !== e.memoizedState) && 0 != (2 & a)), r ? (s = !0, t.flags &= -129) : null !== e && null === e.memoizedState || (a |= 1), Co(la, 1 & a), null === e) return ci(t), null !== (e = t.memoizedState) && null !== (e = e.dehydrated) ? (0 == (1 & t.mode) ? t.lanes = 1 : "$!" === e.data ? t.lanes = 8 : t.lanes = 1073741824, null) : (l = o.children, e = o.fallback, s ? (o = t.mode, s = t.child, l = {
                        mode: "hidden",
                        children: l
                    }, 0 == (1 & o) && null !== s ? (s.childLanes = 0, s.pendingProps = l) : s = Lu(l, o, 0, null), e = Iu(e, o, n, null), s.return = t, e.return = t, s.sibling = e, t.child = s, t.child.memoizedState = Ls(n), t.memoizedState = Is, e) : js(t, l));
                    if (null !== (a = e.memoizedState) && null !== (r = a.dehydrated)) return function(e, t, n, r, o, a, s) {
                        if (n) return 256 & t.flags ? (t.flags &= -257, Fs(e, t, s, r = hs(Error(i(422))))) : null !== t.memoizedState ? (t.child = e.child, t.flags |= 128, null) : (a = r.fallback, o = t.mode, r = Lu({
                            mode: "visible",
                            children: r.children
                        }, o, 0, null), (a = Iu(a, o, s, null)).flags |= 2, r.return = t, a.return = t, r.sibling = a, t.child = r, 0 != (1 & t.mode) && Xi(t, e.child, null, s), t.child.memoizedState = Ls(s), t.memoizedState = Is, a);
                        if (0 == (1 & t.mode)) return Fs(e, t, s, null);
                        if ("$!" === o.data) {
                            if (r = o.nextSibling && o.nextSibling.dataset) var l = r.dgst;
                            return r = l, Fs(e, t, s, r = hs(a = Error(i(419)), r, void 0))
                        }
                        if (l = 0 != (s & e.childLanes), ws || l) {
                            if (null !== (r = Al)) {
                                switch (s & -s) {
                                    case 4:
                                        o = 2;
                                        break;
                                    case 16:
                                        o = 8;
                                        break;
                                    case 64:
                                    case 128:
                                    case 256:
                                    case 512:
                                    case 1024:
                                    case 2048:
                                    case 4096:
                                    case 8192:
                                    case 16384:
                                    case 32768:
                                    case 65536:
                                    case 131072:
                                    case 262144:
                                    case 524288:
                                    case 1048576:
                                    case 2097152:
                                    case 4194304:
                                    case 8388608:
                                    case 16777216:
                                    case 33554432:
                                    case 67108864:
                                        o = 32;
                                        break;
                                    case 536870912:
                                        o = 268435456;
                                        break;
                                    default:
                                        o = 0
                                }
                                0 !== (o = 0 != (o & (r.suspendedLanes | s)) ? 0 : o) && o !== a.retryLane && (a.retryLane = o, Pi(e, o), nu(r, e, o, -1))
                            }
                            return mu(), Fs(e, t, s, r = hs(Error(i(421))))
                        }
                        return "$?" === o.data ? (t.flags |= 128, t.child = e.child, t = Cu.bind(null, e), o._reactRetry = t, null) : (e = a.treeContext, oi = uo(o.nextSibling), ri = t, ii = !0, ai = null, null !== e && (Yo[$o++] = Xo, Yo[$o++] = Ko, Yo[$o++] = Zo, Xo = e.id, Ko = e.overflow, Zo = t), (t = js(t, r.children)).flags |= 4096, t)
                    }(e, t, l, o, r, a, n);
                    if (s) {
                        s = o.fallback, l = t.mode, r = (a = e.child).sibling;
                        var u = {
                            mode: "hidden",
                            children: o.children
                        };
                        return 0 == (1 & l) && t.child !== a ? ((o = t.child).childLanes = 0, o.pendingProps = u, t.deletions = null) : (o = Du(a, u)).subtreeFlags = 14680064 & a.subtreeFlags, null !== r ? s = Du(r, s) : (s = Iu(s, l, n, null)).flags |= 2, s.return = t, o.return = t, o.sibling = s, t.child = o, o = s, s = t.child, l = null === (l = e.child.memoizedState) ? Ls(n) : {
                            baseLanes: l.baseLanes | n,
                            cachePool: null,
                            transitions: l.transitions
                        }, s.memoizedState = l, s.childLanes = e.childLanes & ~n, t.memoizedState = Is, o
                    }
                    return e = (s = e.child).sibling, o = Du(s, {
                        mode: "visible",
                        children: o.children
                    }), 0 == (1 & t.mode) && (o.lanes = n), o.return = t, o.sibling = null, null !== e && (null === (n = t.deletions) ? (t.deletions = [e], t.flags |= 16) : n.push(e)), t.child = o, t.memoizedState = null, o
                }

                function js(e, t) {
                    return (t = Lu({
                        mode: "visible",
                        children: t
                    }, e.mode, 0, null)).return = e, e.child = t
                }

                function Fs(e, t, n, r) {
                    return null !== r && mi(r), Xi(t, e.child, null, n), (e = js(t, t.pendingProps.children)).flags |= 2, t.memoizedState = null, e
                }

                function Vs(e, t, n) {
                    e.lanes |= t;
                    var r = e.alternate;
                    null !== r && (r.lanes |= t), Si(e.return, t, n)
                }

                function Bs(e, t, n, r, o) {
                    var i = e.memoizedState;
                    null === i ? e.memoizedState = {
                        isBackwards: t,
                        rendering: null,
                        renderingStartTime: 0,
                        last: r,
                        tail: n,
                        tailMode: o
                    } : (i.isBackwards = t, i.rendering = null, i.renderingStartTime = 0, i.last = r, i.tail = n, i.tailMode = o)
                }

                function zs(e, t, n) {
                    var r = t.pendingProps,
                        o = r.revealOrder,
                        i = r.tail;
                    if (_s(e, t, r.children, n), 0 != (2 & (r = la.current))) r = 1 & r | 2, t.flags |= 128;
                    else {
                        if (null !== e && 0 != (128 & e.flags)) e: for (e = t.child; null !== e;) {
                            if (13 === e.tag) null !== e.memoizedState && Vs(e, n, t);
                            else if (19 === e.tag) Vs(e, n, t);
                            else if (null !== e.child) {
                                e.child.return = e, e = e.child;
                                continue
                            }
                            if (e === t) break e;
                            for (; null === e.sibling;) {
                                if (null === e.return || e.return === t) break e;
                                e = e.return
                            }
                            e.sibling.return = e.return, e = e.sibling
                        }
                        r &= 1
                    }
                    if (Co(la, r), 0 == (1 & t.mode)) t.memoizedState = null;
                    else switch (o) {
                        case "forwards":
                            for (n = t.child, o = null; null !== n;) null !== (e = n.alternate) && null === ua(e) && (o = n), n = n.sibling;
                            null === (n = o) ? (o = t.child, t.child = null) : (o = n.sibling, n.sibling = null), Bs(t, !1, o, n, i);
                            break;
                        case "backwards":
                            for (n = null, o = t.child, t.child = null; null !== o;) {
                                if (null !== (e = o.alternate) && null === ua(e)) {
                                    t.child = o;
                                    break
                                }
                                e = o.sibling, o.sibling = n, n = o, o = e
                            }
                            Bs(t, !0, n, null, i);
                            break;
                        case "together":
                            Bs(t, !1, null, null, void 0);
                            break;
                        default:
                            t.memoizedState = null
                    }
                    return t.child
                }

                function Us(e, t) {
                    0 == (1 & t.mode) && null !== e && (e.alternate = null, t.alternate = null, t.flags |= 2)
                }

                function Ws(e, t, n) {
                    if (null !== e && (t.dependencies = e.dependencies), Ll |= t.lanes, 0 == (n & t.childLanes)) return null;
                    if (null !== e && t.child !== e.child) throw Error(i(153));
                    if (null !== t.child) {
                        for (n = Du(e = t.child, e.pendingProps), t.child = n, n.return = t; null !== e.sibling;) e = e.sibling, (n = n.sibling = Du(e, e.pendingProps)).return = t;
                        n.sibling = null
                    }
                    return t.child
                }

                function Hs(e, t) {
                    if (!ii) switch (e.tailMode) {
                        case "hidden":
                            t = e.tail;
                            for (var n = null; null !== t;) null !== t.alternate && (n = t), t = t.sibling;
                            null === n ? e.tail = null : n.sibling = null;
                            break;
                        case "collapsed":
                            n = e.tail;
                            for (var r = null; null !== n;) null !== n.alternate && (r = n), n = n.sibling;
                            null === r ? t || null === e.tail ? e.tail = null : e.tail.sibling = null : r.sibling = null
                    }
                }

                function Gs(e) {
                    var t = null !== e.alternate && e.alternate.child === e.child,
                        n = 0,
                        r = 0;
                    if (t)
                        for (var o = e.child; null !== o;) n |= o.lanes | o.childLanes, r |= 14680064 & o.subtreeFlags, r |= 14680064 & o.flags, o.return = e, o = o.sibling;
                    else
                        for (o = e.child; null !== o;) n |= o.lanes | o.childLanes, r |= o.subtreeFlags, r |= o.flags, o.return = e, o = o.sibling;
                    return e.subtreeFlags |= r, e.childLanes = n, t
                }

                function Qs(e, t, n) {
                    var r = t.pendingProps;
                    switch (ni(t), t.tag) {
                        case 2:
                        case 16:
                        case 15:
                        case 0:
                        case 11:
                        case 7:
                        case 8:
                        case 12:
                        case 9:
                        case 14:
                            return Gs(t), null;
                        case 1:
                        case 17:
                            return Do(t.type) && No(), Gs(t), null;
                        case 3:
                            return r = t.stateNode, ia(), To(Po), To(Ao), ha(), r.pendingContext && (r.context = r.pendingContext, r.pendingContext = null), null !== e && null !== e.child || (di(t) ? t.flags |= 4 : null === e || e.memoizedState.isDehydrated && 0 == (256 & t.flags) || (t.flags |= 1024, null !== ai && (au(ai), ai = null))), Gs(t), null;
                        case 5:
                            sa(t);
                            var o = ra(na.current);
                            if (n = t.type, null !== e && null != t.stateNode) Ds(e, t, n, r), e.ref !== t.ref && (t.flags |= 512, t.flags |= 2097152);
                            else {
                                if (!r) {
                                    if (null === t.stateNode) throw Error(i(166));
                                    return Gs(t), null
                                }
                                if (e = ra(ea.current), di(t)) {
                                    r = t.stateNode, n = t.type;
                                    var a = t.memoizedProps;
                                    switch (r[fo] = t, r[po] = a, e = 0 != (1 & t.mode), n) {
                                        case "dialog":
                                            Fr("cancel", r), Fr("close", r);
                                            break;
                                        case "iframe":
                                        case "object":
                                        case "embed":
                                            Fr("load", r);
                                            break;
                                        case "video":
                                        case "audio":
                                            for (o = 0; o < Ir.length; o++) Fr(Ir[o], r);
                                            break;
                                        case "source":
                                            Fr("error", r);
                                            break;
                                        case "img":
                                        case "image":
                                        case "link":
                                            Fr("error", r), Fr("load", r);
                                            break;
                                        case "details":
                                            Fr("toggle", r);
                                            break;
                                        case "input":
                                            Z(r, a), Fr("invalid", r);
                                            break;
                                        case "select":
                                            r._wrapperState = {
                                                wasMultiple: !!a.multiple
                                            }, Fr("invalid", r);
                                            break;
                                        case "textarea":
                                            oe(r, a), Fr("invalid", r)
                                    }
                                    for (var l in ye(n, a), o = null, a)
                                        if (a.hasOwnProperty(l)) {
                                            var u = a[l];
                                            "children" === l ? "string" == typeof u ? r.textContent !== u && (!0 !== a.suppressHydrationWarning && Kr(r.textContent, u, e), o = ["children", u]) : "number" == typeof u && r.textContent !== "" + u && (!0 !== a.suppressHydrationWarning && Kr(r.textContent, u, e), o = ["children", "" + u]) : s.hasOwnProperty(l) && null != u && "onScroll" === l && Fr("scroll", r)
                                        } switch (n) {
                                        case "input":
                                            G(r), J(r, a, !0);
                                            break;
                                        case "textarea":
                                            G(r), ae(r);
                                            break;
                                        case "select":
                                        case "option":
                                            break;
                                        default:
                                            "function" == typeof a.onClick && (r.onclick = Jr)
                                    }
                                    r = o, t.updateQueue = r, null !== r && (t.flags |= 4)
                                } else {
                                    l = 9 === o.nodeType ? o : o.ownerDocument, "http://www.w3.org/1999/xhtml" === e && (e = se(n)), "http://www.w3.org/1999/xhtml" === e ? "script" === n ? ((e = l.createElement("div")).innerHTML = "<script><\/script>", e = e.removeChild(e.firstChild)) : "string" == typeof r.is ? e = l.createElement(n, {
                                        is: r.is
                                    }) : (e = l.createElement(n), "select" === n && (l = e, r.multiple ? l.multiple = !0 : r.size && (l.size = r.size))) : e = l.createElementNS(e, n), e[fo] = t, e[po] = r, Ms(e, t), t.stateNode = e;
                                    e: {
                                        switch (l = be(n, r), n) {
                                            case "dialog":
                                                Fr("cancel", e), Fr("close", e), o = r;
                                                break;
                                            case "iframe":
                                            case "object":
                                            case "embed":
                                                Fr("load", e), o = r;
                                                break;
                                            case "video":
                                            case "audio":
                                                for (o = 0; o < Ir.length; o++) Fr(Ir[o], e);
                                                o = r;
                                                break;
                                            case "source":
                                                Fr("error", e), o = r;
                                                break;
                                            case "img":
                                            case "image":
                                            case "link":
                                                Fr("error", e), Fr("load", e), o = r;
                                                break;
                                            case "details":
                                                Fr("toggle", e), o = r;
                                                break;
                                            case "input":
                                                Z(e, r), o = $(e, r), Fr("invalid", e);
                                                break;
                                            case "option":
                                            default:
                                                o = r;
                                                break;
                                            case "select":
                                                e._wrapperState = {
                                                    wasMultiple: !!r.multiple
                                                }, o = q({}, r, {
                                                    value: void 0
                                                }), Fr("invalid", e);
                                                break;
                                            case "textarea":
                                                oe(e, r), o = re(e, r), Fr("invalid", e)
                                        }
                                        for (a in ye(n, o), u = o)
                                            if (u.hasOwnProperty(a)) {
                                                var c = u[a];
                                                "style" === a ? ve(e, c) : "dangerouslySetInnerHTML" === a ? null != (c = c ? c.__html : void 0) && he(e, c) : "children" === a ? "string" == typeof c ? ("textarea" !== n || "" !== c) && de(e, c) : "number" == typeof c && de(e, "" + c) : "suppressContentEditableWarning" !== a && "suppressHydrationWarning" !== a && "autoFocus" !== a && (s.hasOwnProperty(a) ? null != c && "onScroll" === a && Fr("scroll", e) : null != c && b(e, a, c, l))
                                            } switch (n) {
                                            case "input":
                                                G(e), J(e, r, !1);
                                                break;
                                            case "textarea":
                                                G(e), ae(e);
                                                break;
                                            case "option":
                                                null != r.value && e.setAttribute("value", "" + W(r.value));
                                                break;
                                            case "select":
                                                e.multiple = !!r.multiple, null != (a = r.value) ? ne(e, !!r.multiple, a, !1) : null != r.defaultValue && ne(e, !!r.multiple, r.defaultValue, !0);
                                                break;
                                            default:
                                                "function" == typeof o.onClick && (e.onclick = Jr)
                                        }
                                        switch (n) {
                                            case "button":
                                            case "input":
                                            case "select":
                                            case "textarea":
                                                r = !!r.autoFocus;
                                                break e;
                                            case "img":
                                                r = !0;
                                                break e;
                                            default:
                                                r = !1
                                        }
                                    }
                                    r && (t.flags |= 4)
                                }
                                null !== t.ref && (t.flags |= 512, t.flags |= 2097152)
                            }
                            return Gs(t), null;
                        case 6:
                            if (e && null != t.stateNode) Ns(0, t, e.memoizedProps, r);
                            else {
                                if ("string" != typeof r && null === t.stateNode) throw Error(i(166));
                                if (n = ra(na.current), ra(ea.current), di(t)) {
                                    if (r = t.stateNode, n = t.memoizedProps, r[fo] = t, (a = r.nodeValue !== n) && null !== (e = ri)) switch (e.tag) {
                                        case 3:
                                            Kr(r.nodeValue, n, 0 != (1 & e.mode));
                                            break;
                                        case 5:
                                            !0 !== e.memoizedProps.suppressHydrationWarning && Kr(r.nodeValue, n, 0 != (1 & e.mode))
                                    }
                                    a && (t.flags |= 4)
                                } else(r = (9 === n.nodeType ? n : n.ownerDocument).createTextNode(r))[fo] = t, t.stateNode = r
                            }
                            return Gs(t), null;
                        case 13:
                            if (To(la), r = t.memoizedState, null === e || null !== e.memoizedState && null !== e.memoizedState.dehydrated) {
                                if (ii && null !== oi && 0 != (1 & t.mode) && 0 == (128 & t.flags)) fi(), pi(), t.flags |= 98560, a = !1;
                                else if (a = di(t), null !== r && null !== r.dehydrated) {
                                    if (null === e) {
                                        if (!a) throw Error(i(318));
                                        if (!(a = null !== (a = t.memoizedState) ? a.dehydrated : null)) throw Error(i(317));
                                        a[fo] = t
                                    } else pi(), 0 == (128 & t.flags) && (t.memoizedState = null), t.flags |= 4;
                                    Gs(t), a = !1
                                } else null !== ai && (au(ai), ai = null), a = !0;
                                if (!a) return 65536 & t.flags ? t : null
                            }
                            return 0 != (128 & t.flags) ? (t.lanes = n, t) : ((r = null !== r) != (null !== e && null !== e.memoizedState) && r && (t.child.flags |= 8192, 0 != (1 & t.mode) && (null === e || 0 != (1 & la.current) ? 0 === Nl && (Nl = 3) : mu())), null !== t.updateQueue && (t.flags |= 4), Gs(t), null);
                        case 4:
                            return ia(), null === e && zr(t.stateNode.containerInfo), Gs(t), null;
                        case 10:
                            return Ei(t.type._context), Gs(t), null;
                        case 19:
                            if (To(la), null === (a = t.memoizedState)) return Gs(t), null;
                            if (r = 0 != (128 & t.flags), null === (l = a.rendering))
                                if (r) Hs(a, !1);
                                else {
                                    if (0 !== Nl || null !== e && 0 != (128 & e.flags))
                                        for (e = t.child; null !== e;) {
                                            if (null !== (l = ua(e))) {
                                                for (t.flags |= 128, Hs(a, !1), null !== (r = l.updateQueue) && (t.updateQueue = r, t.flags |= 4), t.subtreeFlags = 0, r = n, n = t.child; null !== n;) e = r, (a = n).flags &= 14680066, null === (l = a.alternate) ? (a.childLanes = 0, a.lanes = e, a.child = null, a.subtreeFlags = 0, a.memoizedProps = null, a.memoizedState = null, a.updateQueue = null, a.dependencies = null, a.stateNode = null) : (a.childLanes = l.childLanes, a.lanes = l.lanes, a.child = l.child, a.subtreeFlags = 0, a.deletions = null, a.memoizedProps = l.memoizedProps, a.memoizedState = l.memoizedState, a.updateQueue = l.updateQueue, a.type = l.type, e = l.dependencies, a.dependencies = null === e ? null : {
                                                    lanes: e.lanes,
                                                    firstContext: e.firstContext
                                                }), n = n.sibling;
                                                return Co(la, 1 & la.current | 2), t.child
                                            }
                                            e = e.sibling
                                        }
                                    null !== a.tail && Xe() > zl && (t.flags |= 128, r = !0, Hs(a, !1), t.lanes = 4194304)
                                }
                            else {
                                if (!r)
                                    if (null !== (e = ua(l))) {
                                        if (t.flags |= 128, r = !0, null !== (n = e.updateQueue) && (t.updateQueue = n, t.flags |= 4), Hs(a, !0), null === a.tail && "hidden" === a.tailMode && !l.alternate && !ii) return Gs(t), null
                                    } else 2 * Xe() - a.renderingStartTime > zl && 1073741824 !== n && (t.flags |= 128, r = !0, Hs(a, !1), t.lanes = 4194304);
                                a.isBackwards ? (l.sibling = t.child, t.child = l) : (null !== (n = a.last) ? n.sibling = l : t.child = l, a.last = l)
                            }
                            return null !== a.tail ? (t = a.tail, a.rendering = t, a.tail = t.sibling, a.renderingStartTime = Xe(), t.sibling = null, n = la.current, Co(la, r ? 1 & n | 2 : 1 & n), t) : (Gs(t), null);
                        case 22:
                        case 23:
                            return hu(), r = null !== t.memoizedState, null !== e && null !== e.memoizedState !== r && (t.flags |= 8192), r && 0 != (1 & t.mode) ? 0 != (1073741824 & Ml) && (Gs(t), 6 & t.subtreeFlags && (t.flags |= 8192)) : Gs(t), null;
                        case 24:
                        case 25:
                            return null
                    }
                    throw Error(i(156, t.tag))
                }

                function Ys(e, t) {
                    switch (ni(t), t.tag) {
                        case 1:
                            return Do(t.type) && No(), 65536 & (e = t.flags) ? (t.flags = -65537 & e | 128, t) : null;
                        case 3:
                            return ia(), To(Po), To(Ao), ha(), 0 != (65536 & (e = t.flags)) && 0 == (128 & e) ? (t.flags = -65537 & e | 128, t) : null;
                        case 5:
                            return sa(t), null;
                        case 13:
                            if (To(la), null !== (e = t.memoizedState) && null !== e.dehydrated) {
                                if (null === t.alternate) throw Error(i(340));
                                pi()
                            }
                            return 65536 & (e = t.flags) ? (t.flags = -65537 & e | 128, t) : null;
                        case 19:
                            return To(la), null;
                        case 4:
                            return ia(), null;
                        case 10:
                            return Ei(t.type._context), null;
                        case 22:
                        case 23:
                            return hu(), null;
                        default:
                            return null
                    }
                }
                Ms = function(e, t) {
                    for (var n = t.child; null !== n;) {
                        if (5 === n.tag || 6 === n.tag) e.appendChild(n.stateNode);
                        else if (4 !== n.tag && null !== n.child) {
                            n.child.return = n, n = n.child;
                            continue
                        }
                        if (n === t) break;
                        for (; null === n.sibling;) {
                            if (null === n.return || n.return === t) return;
                            n = n.return
                        }
                        n.sibling.return = n.return, n = n.sibling
                    }
                }, Ds = function(e, t, n, r) {
                    var o = e.memoizedProps;
                    if (o !== r) {
                        e = t.stateNode, ra(ea.current);
                        var i, a = null;
                        switch (n) {
                            case "input":
                                o = $(e, o), r = $(e, r), a = [];
                                break;
                            case "select":
                                o = q({}, o, {
                                    value: void 0
                                }), r = q({}, r, {
                                    value: void 0
                                }), a = [];
                                break;
                            case "textarea":
                                o = re(e, o), r = re(e, r), a = [];
                                break;
                            default:
                                "function" != typeof o.onClick && "function" == typeof r.onClick && (e.onclick = Jr)
                        }
                        for (c in ye(n, r), n = null, o)
                            if (!r.hasOwnProperty(c) && o.hasOwnProperty(c) && null != o[c])
                                if ("style" === c) {
                                    var l = o[c];
                                    for (i in l) l.hasOwnProperty(i) && (n || (n = {}), n[i] = "")
                                } else "dangerouslySetInnerHTML" !== c && "children" !== c && "suppressContentEditableWarning" !== c && "suppressHydrationWarning" !== c && "autoFocus" !== c && (s.hasOwnProperty(c) ? a || (a = []) : (a = a || []).push(c, null));
                        for (c in r) {
                            var u = r[c];
                            if (l = null != o ? o[c] : void 0, r.hasOwnProperty(c) && u !== l && (null != u || null != l))
                                if ("style" === c)
                                    if (l) {
                                        for (i in l) !l.hasOwnProperty(i) || u && u.hasOwnProperty(i) || (n || (n = {}), n[i] = "");
                                        for (i in u) u.hasOwnProperty(i) && l[i] !== u[i] && (n || (n = {}), n[i] = u[i])
                                    } else n || (a || (a = []), a.push(c, n)), n = u;
                            else "dangerouslySetInnerHTML" === c ? (u = u ? u.__html : void 0, l = l ? l.__html : void 0, null != u && l !== u && (a = a || []).push(c, u)) : "children" === c ? "string" != typeof u && "number" != typeof u || (a = a || []).push(c, "" + u) : "suppressContentEditableWarning" !== c && "suppressHydrationWarning" !== c && (s.hasOwnProperty(c) ? (null != u && "onScroll" === c && Fr("scroll", e), a || l === u || (a = [])) : (a = a || []).push(c, u))
                        }
                        n && (a = a || []).push("style", n);
                        var c = a;
                        (t.updateQueue = c) && (t.flags |= 4)
                    }
                }, Ns = function(e, t, n, r) {
                    n !== r && (t.flags |= 4)
                };
                var $s = !1,
                    Zs = !1,
                    Xs = "function" == typeof WeakSet ? WeakSet : Set,
                    Ks = null;

                function Js(e, t) {
                    var n = e.ref;
                    if (null !== n)
                        if ("function" == typeof n) try {
                            n(null)
                        } catch (n) {
                            Su(e, t, n)
                        } else n.current = null
                }

                function el(e, t, n) {
                    try {
                        n()
                    } catch (n) {
                        Su(e, t, n)
                    }
                }
                var tl = !1;

                function nl(e, t, n) {
                    var r = t.updateQueue;
                    if (null !== (r = null !== r ? r.lastEffect : null)) {
                        var o = r = r.next;
                        do {
                            if ((o.tag & e) === e) {
                                var i = o.destroy;
                                o.destroy = void 0, void 0 !== i && el(t, n, i)
                            }
                            o = o.next
                        } while (o !== r)
                    }
                }

                function rl(e, t) {
                    if (null !== (t = null !== (t = t.updateQueue) ? t.lastEffect : null)) {
                        var n = t = t.next;
                        do {
                            if ((n.tag & e) === e) {
                                var r = n.create;
                                n.destroy = r()
                            }
                            n = n.next
                        } while (n !== t)
                    }
                }

                function ol(e) {
                    var t = e.ref;
                    if (null !== t) {
                        var n = e.stateNode;
                        e.tag, e = n, "function" == typeof t ? t(e) : t.current = e
                    }
                }

                function il(e) {
                    var t = e.alternate;
                    null !== t && (e.alternate = null, il(t)), e.child = null, e.deletions = null, e.sibling = null, 5 === e.tag && null !== (t = e.stateNode) && (delete t[fo], delete t[po], delete t[vo], delete t[go], delete t[yo]), e.stateNode = null, e.return = null, e.dependencies = null, e.memoizedProps = null, e.memoizedState = null, e.pendingProps = null, e.stateNode = null, e.updateQueue = null
                }

                function al(e) {
                    return 5 === e.tag || 3 === e.tag || 4 === e.tag
                }

                function sl(e) {
                    e: for (;;) {
                        for (; null === e.sibling;) {
                            if (null === e.return || al(e.return)) return null;
                            e = e.return
                        }
                        for (e.sibling.return = e.return, e = e.sibling; 5 !== e.tag && 6 !== e.tag && 18 !== e.tag;) {
                            if (2 & e.flags) continue e;
                            if (null === e.child || 4 === e.tag) continue e;
                            e.child.return = e, e = e.child
                        }
                        if (!(2 & e.flags)) return e.stateNode
                    }
                }

                function ll(e, t, n) {
                    var r = e.tag;
                    if (5 === r || 6 === r) e = e.stateNode, t ? 8 === n.nodeType ? n.parentNode.insertBefore(e, t) : n.insertBefore(e, t) : (8 === n.nodeType ? (t = n.parentNode).insertBefore(e, n) : (t = n).appendChild(e), null != (n = n._reactRootContainer) || null !== t.onclick || (t.onclick = Jr));
                    else if (4 !== r && null !== (e = e.child))
                        for (ll(e, t, n), e = e.sibling; null !== e;) ll(e, t, n), e = e.sibling
                }

                function ul(e, t, n) {
                    var r = e.tag;
                    if (5 === r || 6 === r) e = e.stateNode, t ? n.insertBefore(e, t) : n.appendChild(e);
                    else if (4 !== r && null !== (e = e.child))
                        for (ul(e, t, n), e = e.sibling; null !== e;) ul(e, t, n), e = e.sibling
                }
                var cl = null,
                    hl = !1;

                function dl(e, t, n) {
                    for (n = n.child; null !== n;) fl(e, t, n), n = n.sibling
                }

                function fl(e, t, n) {
                    if (it && "function" == typeof it.onCommitFiberUnmount) try {
                        it.onCommitFiberUnmount(ot, n)
                    } catch (e) {}
                    switch (n.tag) {
                        case 5:
                            Zs || Js(n, t);
                        case 6:
                            var r = cl,
                                o = hl;
                            cl = null, dl(e, t, n), hl = o, null !== (cl = r) && (hl ? (e = cl, n = n.stateNode, 8 === e.nodeType ? e.parentNode.removeChild(n) : e.removeChild(n)) : cl.removeChild(n.stateNode));
                            break;
                        case 18:
                            null !== cl && (hl ? (e = cl, n = n.stateNode, 8 === e.nodeType ? lo(e.parentNode, n) : 1 === e.nodeType && lo(e, n), zt(e)) : lo(cl, n.stateNode));
                            break;
                        case 4:
                            r = cl, o = hl, cl = n.stateNode.containerInfo, hl = !0, dl(e, t, n), cl = r, hl = o;
                            break;
                        case 0:
                        case 11:
                        case 14:
                        case 15:
                            if (!Zs && null !== (r = n.updateQueue) && null !== (r = r.lastEffect)) {
                                o = r = r.next;
                                do {
                                    var i = o,
                                        a = i.destroy;
                                    i = i.tag, void 0 !== a && (0 != (2 & i) || 0 != (4 & i)) && el(n, t, a), o = o.next
                                } while (o !== r)
                            }
                            dl(e, t, n);
                            break;
                        case 1:
                            if (!Zs && (Js(n, t), "function" == typeof(r = n.stateNode).componentWillUnmount)) try {
                                r.props = n.memoizedProps, r.state = n.memoizedState, r.componentWillUnmount()
                            } catch (e) {
                                Su(n, t, e)
                            }
                            dl(e, t, n);
                            break;
                        case 21:
                            dl(e, t, n);
                            break;
                        case 22:
                            1 & n.mode ? (Zs = (r = Zs) || null !== n.memoizedState, dl(e, t, n), Zs = r) : dl(e, t, n);
                            break;
                        default:
                            dl(e, t, n)
                    }
                }

                function pl(e) {
                    var t = e.updateQueue;
                    if (null !== t) {
                        e.updateQueue = null;
                        var n = e.stateNode;
                        null === n && (n = e.stateNode = new Xs), t.forEach((function(t) {
                            var r = Ou.bind(null, e, t);
                            n.has(t) || (n.add(t), t.then(r, r))
                        }))
                    }
                }

                function ml(e, t) {
                    var n = t.deletions;
                    if (null !== n)
                        for (var r = 0; r < n.length; r++) {
                            var o = n[r];
                            try {
                                var a = e,
                                    s = t,
                                    l = s;
                                e: for (; null !== l;) {
                                    switch (l.tag) {
                                        case 5:
                                            cl = l.stateNode, hl = !1;
                                            break e;
                                        case 3:
                                        case 4:
                                            cl = l.stateNode.containerInfo, hl = !0;
                                            break e
                                    }
                                    l = l.return
                                }
                                if (null === cl) throw Error(i(160));
                                fl(a, s, o), cl = null, hl = !1;
                                var u = o.alternate;
                                null !== u && (u.return = null), o.return = null
                            } catch (e) {
                                Su(o, t, e)
                            }
                        }
                    if (12854 & t.subtreeFlags)
                        for (t = t.child; null !== t;) vl(t, e), t = t.sibling
                }

                function vl(e, t) {
                    var n = e.alternate,
                        r = e.flags;
                    switch (e.tag) {
                        case 0:
                        case 11:
                        case 14:
                        case 15:
                            if (ml(t, e), gl(e), 4 & r) {
                                try {
                                    nl(3, e, e.return), rl(3, e)
                                } catch (t) {
                                    Su(e, e.return, t)
                                }
                                try {
                                    nl(5, e, e.return)
                                } catch (t) {
                                    Su(e, e.return, t)
                                }
                            }
                            break;
                        case 1:
                            ml(t, e), gl(e), 512 & r && null !== n && Js(n, n.return);
                            break;
                        case 5:
                            if (ml(t, e), gl(e), 512 & r && null !== n && Js(n, n.return), 32 & e.flags) {
                                var o = e.stateNode;
                                try {
                                    de(o, "")
                                } catch (t) {
                                    Su(e, e.return, t)
                                }
                            }
                            if (4 & r && null != (o = e.stateNode)) {
                                var a = e.memoizedProps,
                                    s = null !== n ? n.memoizedProps : a,
                                    l = e.type,
                                    u = e.updateQueue;
                                if (e.updateQueue = null, null !== u) try {
                                    "input" === l && "radio" === a.type && null != a.name && X(o, a), be(l, s);
                                    var c = be(l, a);
                                    for (s = 0; s < u.length; s += 2) {
                                        var h = u[s],
                                            d = u[s + 1];
                                        "style" === h ? ve(o, d) : "dangerouslySetInnerHTML" === h ? he(o, d) : "children" === h ? de(o, d) : b(o, h, d, c)
                                    }
                                    switch (l) {
                                        case "input":
                                            K(o, a);
                                            break;
                                        case "textarea":
                                            ie(o, a);
                                            break;
                                        case "select":
                                            var f = o._wrapperState.wasMultiple;
                                            o._wrapperState.wasMultiple = !!a.multiple;
                                            var p = a.value;
                                            null != p ? ne(o, !!a.multiple, p, !1) : f !== !!a.multiple && (null != a.defaultValue ? ne(o, !!a.multiple, a.defaultValue, !0) : ne(o, !!a.multiple, a.multiple ? [] : "", !1))
                                    }
                                    o[po] = a
                                } catch (t) {
                                    Su(e, e.return, t)
                                }
                            }
                            break;
                        case 6:
                            if (ml(t, e), gl(e), 4 & r) {
                                if (null === e.stateNode) throw Error(i(162));
                                o = e.stateNode, a = e.memoizedProps;
                                try {
                                    o.nodeValue = a
                                } catch (t) {
                                    Su(e, e.return, t)
                                }
                            }
                            break;
                        case 3:
                            if (ml(t, e), gl(e), 4 & r && null !== n && n.memoizedState.isDehydrated) try {
                                zt(t.containerInfo)
                            } catch (t) {
                                Su(e, e.return, t)
                            }
                            break;
                        case 4:
                        default:
                            ml(t, e), gl(e);
                            break;
                        case 13:
                            ml(t, e), gl(e), 8192 & (o = e.child).flags && (a = null !== o.memoizedState, o.stateNode.isHidden = a, !a || null !== o.alternate && null !== o.alternate.memoizedState || (Bl = Xe())), 4 & r && pl(e);
                            break;
                        case 22:
                            if (h = null !== n && null !== n.memoizedState, 1 & e.mode ? (Zs = (c = Zs) || h, ml(t, e), Zs = c) : ml(t, e), gl(e), 8192 & r) {
                                if (c = null !== e.memoizedState, (e.stateNode.isHidden = c) && !h && 0 != (1 & e.mode))
                                    for (Ks = e, h = e.child; null !== h;) {
                                        for (d = Ks = h; null !== Ks;) {
                                            switch (p = (f = Ks).child, f.tag) {
                                                case 0:
                                                case 11:
                                                case 14:
                                                case 15:
                                                    nl(4, f, f.return);
                                                    break;
                                                case 1:
                                                    Js(f, f.return);
                                                    var m = f.stateNode;
                                                    if ("function" == typeof m.componentWillUnmount) {
                                                        r = f, n = f.return;
                                                        try {
                                                            t = r, m.props = t.memoizedProps, m.state = t.memoizedState, m.componentWillUnmount()
                                                        } catch (e) {
                                                            Su(r, n, e)
                                                        }
                                                    }
                                                    break;
                                                case 5:
                                                    Js(f, f.return);
                                                    break;
                                                case 22:
                                                    if (null !== f.memoizedState) {
                                                        _l(d);
                                                        continue
                                                    }
                                            }
                                            null !== p ? (p.return = f, Ks = p) : _l(d)
                                        }
                                        h = h.sibling
                                    }
                                e: for (h = null, d = e;;) {
                                    if (5 === d.tag) {
                                        if (null === h) {
                                            h = d;
                                            try {
                                                o = d.stateNode, c ? "function" == typeof(a = o.style).setProperty ? a.setProperty("display", "none", "important") : a.display = "none" : (l = d.stateNode, s = null != (u = d.memoizedProps.style) && u.hasOwnProperty("display") ? u.display : null, l.style.display = me("display", s))
                                            } catch (t) {
                                                Su(e, e.return, t)
                                            }
                                        }
                                    } else if (6 === d.tag) {
                                        if (null === h) try {
                                            d.stateNode.nodeValue = c ? "" : d.memoizedProps
                                        } catch (t) {
                                            Su(e, e.return, t)
                                        }
                                    } else if ((22 !== d.tag && 23 !== d.tag || null === d.memoizedState || d === e) && null !== d.child) {
                                        d.child.return = d, d = d.child;
                                        continue
                                    }
                                    if (d === e) break e;
                                    for (; null === d.sibling;) {
                                        if (null === d.return || d.return === e) break e;
                                        h === d && (h = null), d = d.return
                                    }
                                    h === d && (h = null), d.sibling.return = d.return, d = d.sibling
                                }
                            }
                            break;
                        case 19:
                            ml(t, e), gl(e), 4 & r && pl(e);
                        case 21:
                    }
                }

                function gl(e) {
                    var t = e.flags;
                    if (2 & t) {
                        try {
                            e: {
                                for (var n = e.return; null !== n;) {
                                    if (al(n)) {
                                        var r = n;
                                        break e
                                    }
                                    n = n.return
                                }
                                throw Error(i(160))
                            }
                            switch (r.tag) {
                                case 5:
                                    var o = r.stateNode;
                                    32 & r.flags && (de(o, ""), r.flags &= -33), ul(e, sl(e), o);
                                    break;
                                case 3:
                                case 4:
                                    var a = r.stateNode.containerInfo;
                                    ll(e, sl(e), a);
                                    break;
                                default:
                                    throw Error(i(161))
                            }
                        }
                        catch (t) {
                            Su(e, e.return, t)
                        }
                        e.flags &= -3
                    }
                    4096 & t && (e.flags &= -4097)
                }

                function yl(e, t, n) {
                    Ks = e, bl(e, t, n)
                }

                function bl(e, t, n) {
                    for (var r = 0 != (1 & e.mode); null !== Ks;) {
                        var o = Ks,
                            i = o.child;
                        if (22 === o.tag && r) {
                            var a = null !== o.memoizedState || $s;
                            if (!a) {
                                var s = o.alternate,
                                    l = null !== s && null !== s.memoizedState || Zs;
                                s = $s;
                                var u = Zs;
                                if ($s = a, (Zs = l) && !u)
                                    for (Ks = o; null !== Ks;) l = (a = Ks).child, 22 === a.tag && null !== a.memoizedState ? xl(o) : null !== l ? (l.return = a, Ks = l) : xl(o);
                                for (; null !== i;) Ks = i, bl(i, t, n), i = i.sibling;
                                Ks = o, $s = s, Zs = u
                            }
                            wl(e)
                        } else 0 != (8772 & o.subtreeFlags) && null !== i ? (i.return = o, Ks = i) : wl(e)
                    }
                }

                function wl(e) {
                    for (; null !== Ks;) {
                        var t = Ks;
                        if (0 != (8772 & t.flags)) {
                            var n = t.alternate;
                            try {
                                if (0 != (8772 & t.flags)) switch (t.tag) {
                                    case 0:
                                    case 11:
                                    case 15:
                                        Zs || rl(5, t);
                                        break;
                                    case 1:
                                        var r = t.stateNode;
                                        if (4 & t.flags && !Zs)
                                            if (null === n) r.componentDidMount();
                                            else {
                                                var o = t.elementType === t.type ? n.memoizedProps : gi(t.type, n.memoizedProps);
                                                r.componentDidUpdate(o, n.memoizedState, r.__reactInternalSnapshotBeforeUpdate)
                                            } var a = t.updateQueue;
                                        null !== a && Fi(t, a, r);
                                        break;
                                    case 3:
                                        var s = t.updateQueue;
                                        if (null !== s) {
                                            if (n = null, null !== t.child) switch (t.child.tag) {
                                                case 5:
                                                case 1:
                                                    n = t.child.stateNode
                                            }
                                            Fi(t, s, n)
                                        }
                                        break;
                                    case 5:
                                        var l = t.stateNode;
                                        if (null === n && 4 & t.flags) {
                                            n = l;
                                            var u = t.memoizedProps;
                                            switch (t.type) {
                                                case "button":
                                                case "input":
                                                case "select":
                                                case "textarea":
                                                    u.autoFocus && n.focus();
                                                    break;
                                                case "img":
                                                    u.src && (n.src = u.src)
                                            }
                                        }
                                        break;
                                    case 6:
                                    case 4:
                                    case 12:
                                    case 19:
                                    case 17:
                                    case 21:
                                    case 22:
                                    case 23:
                                    case 25:
                                        break;
                                    case 13:
                                        if (null === t.memoizedState) {
                                            var c = t.alternate;
                                            if (null !== c) {
                                                var h = c.memoizedState;
                                                if (null !== h) {
                                                    var d = h.dehydrated;
                                                    null !== d && zt(d)
                                                }
                                            }
                                        }
                                        break;
                                    default:
                                        throw Error(i(163))
                                }
                                Zs || 512 & t.flags && ol(t)
                            } catch (e) {
                                Su(t, t.return, e)
                            }
                        }
                        if (t === e) {
                            Ks = null;
                            break
                        }
                        if (null !== (n = t.sibling)) {
                            n.return = t.return, Ks = n;
                            break
                        }
                        Ks = t.return
                    }
                }

                function _l(e) {
                    for (; null !== Ks;) {
                        var t = Ks;
                        if (t === e) {
                            Ks = null;
                            break
                        }
                        var n = t.sibling;
                        if (null !== n) {
                            n.return = t.return, Ks = n;
                            break
                        }
                        Ks = t.return
                    }
                }

                function xl(e) {
                    for (; null !== Ks;) {
                        var t = Ks;
                        try {
                            switch (t.tag) {
                                case 0:
                                case 11:
                                case 15:
                                    var n = t.return;
                                    try {
                                        rl(4, t)
                                    } catch (e) {
                                        Su(t, n, e)
                                    }
                                    break;
                                case 1:
                                    var r = t.stateNode;
                                    if ("function" == typeof r.componentDidMount) {
                                        var o = t.return;
                                        try {
                                            r.componentDidMount()
                                        } catch (e) {
                                            Su(t, o, e)
                                        }
                                    }
                                    var i = t.return;
                                    try {
                                        ol(t)
                                    } catch (e) {
                                        Su(t, i, e)
                                    }
                                    break;
                                case 5:
                                    var a = t.return;
                                    try {
                                        ol(t)
                                    } catch (e) {
                                        Su(t, a, e)
                                    }
                            }
                        } catch (e) {
                            Su(t, t.return, e)
                        }
                        if (t === e) {
                            Ks = null;
                            break
                        }
                        var s = t.sibling;
                        if (null !== s) {
                            s.return = t.return, Ks = s;
                            break
                        }
                        Ks = t.return
                    }
                }
                var El, Sl = Math.ceil,
                    kl = w.ReactCurrentDispatcher,
                    Tl = w.ReactCurrentOwner,
                    Cl = w.ReactCurrentBatchConfig,
                    Ol = 0,
                    Al = null,
                    Pl = null,
                    Rl = 0,
                    Ml = 0,
                    Dl = ko(0),
                    Nl = 0,
                    Il = null,
                    Ll = 0,
                    ql = 0,
                    jl = 0,
                    Fl = null,
                    Vl = null,
                    Bl = 0,
                    zl = 1 / 0,
                    Ul = null,
                    Wl = !1,
                    Hl = null,
                    Gl = null,
                    Ql = !1,
                    Yl = null,
                    $l = 0,
                    Zl = 0,
                    Xl = null,
                    Kl = -1,
                    Jl = 0;

                function eu() {
                    return 0 != (6 & Ol) ? Xe() : -1 !== Kl ? Kl : Kl = Xe()
                }

                function tu(e) {
                    return 0 == (1 & e.mode) ? 1 : 0 != (2 & Ol) && 0 !== Rl ? Rl & -Rl : null !== vi.transition ? (0 === Jl && (Jl = mt()), Jl) : 0 !== (e = bt) ? e : e = void 0 === (e = window.event) ? 16 : Zt(e.type)
                }

                function nu(e, t, n, r) {
                    if (50 < Zl) throw Zl = 0, Xl = null, Error(i(185));
                    gt(e, n, r), 0 != (2 & Ol) && e === Al || (e === Al && (0 == (2 & Ol) && (ql |= n), 4 === Nl && su(e, Rl)), ru(e, r), 1 === n && 0 === Ol && 0 == (1 & t.mode) && (zl = Xe() + 500, Vo && Uo()))
                }

                function ru(e, t) {
                    var n = e.callbackNode;
                    ! function(e, t) {
                        for (var n = e.suspendedLanes, r = e.pingedLanes, o = e.expirationTimes, i = e.pendingLanes; 0 < i;) {
                            var a = 31 - at(i),
                                s = 1 << a,
                                l = o[a]; - 1 === l ? 0 != (s & n) && 0 == (s & r) || (o[a] = ft(s, t)) : l <= t && (e.expiredLanes |= s), i &= ~s
                        }
                    }(e, t);
                    var r = dt(e, e === Al ? Rl : 0);
                    if (0 === r) null !== n && Ye(n), e.callbackNode = null, e.callbackPriority = 0;
                    else if (t = r & -r, e.callbackPriority !== t) {
                        if (null != n && Ye(n), 1 === t) 0 === e.tag ? function(e) {
                            Vo = !0, zo(e)
                        }(lu.bind(null, e)) : zo(lu.bind(null, e)), ao((function() {
                            0 == (6 & Ol) && Uo()
                        })), n = null;
                        else {
                            switch (wt(r)) {
                                case 1:
                                    n = Je;
                                    break;
                                case 4:
                                    n = et;
                                    break;
                                case 16:
                                default:
                                    n = tt;
                                    break;
                                case 536870912:
                                    n = rt
                            }
                            n = Au(n, ou.bind(null, e))
                        }
                        e.callbackPriority = t, e.callbackNode = n
                    }
                }

                function ou(e, t) {
                    if (Kl = -1, Jl = 0, 0 != (6 & Ol)) throw Error(i(327));
                    var n = e.callbackNode;
                    if (xu() && e.callbackNode !== n) return null;
                    var r = dt(e, e === Al ? Rl : 0);
                    if (0 === r) return null;
                    if (0 != (30 & r) || 0 != (r & e.expiredLanes) || t) t = vu(e, r);
                    else {
                        t = r;
                        var o = Ol;
                        Ol |= 2;
                        var a = pu();
                        for (Al === e && Rl === t || (Ul = null, zl = Xe() + 500, du(e, t));;) try {
                            yu();
                            break
                        } catch (t) {
                            fu(e, t)
                        }
                        xi(), kl.current = a, Ol = o, null !== Pl ? t = 0 : (Al = null, Rl = 0, t = Nl)
                    }
                    if (0 !== t) {
                        if (2 === t && 0 !== (o = pt(e)) && (r = o, t = iu(e, o)), 1 === t) throw n = Il, du(e, 0), su(e, r), ru(e, Xe()), n;
                        if (6 === t) su(e, r);
                        else {
                            if (o = e.current.alternate, 0 == (30 & r) && ! function(e) {
                                    for (var t = e;;) {
                                        if (16384 & t.flags) {
                                            var n = t.updateQueue;
                                            if (null !== n && null !== (n = n.stores))
                                                for (var r = 0; r < n.length; r++) {
                                                    var o = n[r],
                                                        i = o.getSnapshot;
                                                    o = o.value;
                                                    try {
                                                        if (!sr(i(), o)) return !1
                                                    } catch (e) {
                                                        return !1
                                                    }
                                                }
                                        }
                                        if (n = t.child, 16384 & t.subtreeFlags && null !== n) n.return = t, t = n;
                                        else {
                                            if (t === e) break;
                                            for (; null === t.sibling;) {
                                                if (null === t.return || t.return === e) return !0;
                                                t = t.return
                                            }
                                            t.sibling.return = t.return, t = t.sibling
                                        }
                                    }
                                    return !0
                                }(o) && (2 === (t = vu(e, r)) && 0 !== (a = pt(e)) && (r = a, t = iu(e, a)), 1 === t)) throw n = Il, du(e, 0), su(e, r), ru(e, Xe()), n;
                            switch (e.finishedWork = o, e.finishedLanes = r, t) {
                                case 0:
                                case 1:
                                    throw Error(i(345));
                                case 2:
                                case 5:
                                    _u(e, Vl, Ul);
                                    break;
                                case 3:
                                    if (su(e, r), (130023424 & r) === r && 10 < (t = Bl + 500 - Xe())) {
                                        if (0 !== dt(e, 0)) break;
                                        if (((o = e.suspendedLanes) & r) !== r) {
                                            eu(), e.pingedLanes |= e.suspendedLanes & o;
                                            break
                                        }
                                        e.timeoutHandle = ro(_u.bind(null, e, Vl, Ul), t);
                                        break
                                    }
                                    _u(e, Vl, Ul);
                                    break;
                                case 4:
                                    if (su(e, r), (4194240 & r) === r) break;
                                    for (t = e.eventTimes, o = -1; 0 < r;) {
                                        var s = 31 - at(r);
                                        a = 1 << s, (s = t[s]) > o && (o = s), r &= ~a
                                    }
                                    if (r = o, 10 < (r = (120 > (r = Xe() - r) ? 120 : 480 > r ? 480 : 1080 > r ? 1080 : 1920 > r ? 1920 : 3e3 > r ? 3e3 : 4320 > r ? 4320 : 1960 * Sl(r / 1960)) - r)) {
                                        e.timeoutHandle = ro(_u.bind(null, e, Vl, Ul), r);
                                        break
                                    }
                                    _u(e, Vl, Ul);
                                    break;
                                default:
                                    throw Error(i(329))
                            }
                        }
                    }
                    return ru(e, Xe()), e.callbackNode === n ? ou.bind(null, e) : null
                }

                function iu(e, t) {
                    var n = Fl;
                    return e.current.memoizedState.isDehydrated && (du(e, t).flags |= 256), 2 !== (e = vu(e, t)) && (t = Vl, Vl = n, null !== t && au(t)), e
                }

                function au(e) {
                    null === Vl ? Vl = e : Vl.push.apply(Vl, e)
                }

                function su(e, t) {
                    for (t &= ~jl, t &= ~ql, e.suspendedLanes |= t, e.pingedLanes &= ~t, e = e.expirationTimes; 0 < t;) {
                        var n = 31 - at(t),
                            r = 1 << n;
                        e[n] = -1, t &= ~r
                    }
                }

                function lu(e) {
                    if (0 != (6 & Ol)) throw Error(i(327));
                    xu();
                    var t = dt(e, 0);
                    if (0 == (1 & t)) return ru(e, Xe()), null;
                    var n = vu(e, t);
                    if (0 !== e.tag && 2 === n) {
                        var r = pt(e);
                        0 !== r && (t = r, n = iu(e, r))
                    }
                    if (1 === n) throw n = Il, du(e, 0), su(e, t), ru(e, Xe()), n;
                    if (6 === n) throw Error(i(345));
                    return e.finishedWork = e.current.alternate, e.finishedLanes = t, _u(e, Vl, Ul), ru(e, Xe()), null
                }

                function uu(e, t) {
                    var n = Ol;
                    Ol |= 1;
                    try {
                        return e(t)
                    } finally {
                        0 === (Ol = n) && (zl = Xe() + 500, Vo && Uo())
                    }
                }

                function cu(e) {
                    null !== Yl && 0 === Yl.tag && 0 == (6 & Ol) && xu();
                    var t = Ol;
                    Ol |= 1;
                    var n = Cl.transition,
                        r = bt;
                    try {
                        if (Cl.transition = null, bt = 1, e) return e()
                    } finally {
                        bt = r, Cl.transition = n, 0 == (6 & (Ol = t)) && Uo()
                    }
                }

                function hu() {
                    Ml = Dl.current, To(Dl)
                }

                function du(e, t) {
                    e.finishedWork = null, e.finishedLanes = 0;
                    var n = e.timeoutHandle;
                    if (-1 !== n && (e.timeoutHandle = -1, oo(n)), null !== Pl)
                        for (n = Pl.return; null !== n;) {
                            var r = n;
                            switch (ni(r), r.tag) {
                                case 1:
                                    null != (r = r.type.childContextTypes) && No();
                                    break;
                                case 3:
                                    ia(), To(Po), To(Ao), ha();
                                    break;
                                case 5:
                                    sa(r);
                                    break;
                                case 4:
                                    ia();
                                    break;
                                case 13:
                                case 19:
                                    To(la);
                                    break;
                                case 10:
                                    Ei(r.type._context);
                                    break;
                                case 22:
                                case 23:
                                    hu()
                            }
                            n = n.return
                        }
                    if (Al = e, Pl = e = Du(e.current, null), Rl = Ml = t, Nl = 0, Il = null, jl = ql = Ll = 0, Vl = Fl = null, null !== Ci) {
                        for (t = 0; t < Ci.length; t++)
                            if (null !== (r = (n = Ci[t]).interleaved)) {
                                n.interleaved = null;
                                var o = r.next,
                                    i = n.pending;
                                if (null !== i) {
                                    var a = i.next;
                                    i.next = o, r.next = a
                                }
                                n.pending = r
                            } Ci = null
                    }
                    return e
                }

                function fu(e, t) {
                    for (;;) {
                        var n = Pl;
                        try {
                            if (xi(), da.current = as, ya) {
                                for (var r = ma.memoizedState; null !== r;) {
                                    var o = r.queue;
                                    null !== o && (o.pending = null), r = r.next
                                }
                                ya = !1
                            }
                            if (pa = 0, ga = va = ma = null, ba = !1, wa = 0, Tl.current = null, null === n || null === n.return) {
                                Nl = 1, Il = t, Pl = null;
                                break
                            }
                            e: {
                                var a = e,
                                    s = n.return,
                                    l = n,
                                    u = t;
                                if (t = Rl, l.flags |= 32768, null !== u && "object" == typeof u && "function" == typeof u.then) {
                                    var c = u,
                                        h = l,
                                        d = h.tag;
                                    if (0 == (1 & h.mode) && (0 === d || 11 === d || 15 === d)) {
                                        var f = h.alternate;
                                        f ? (h.updateQueue = f.updateQueue, h.memoizedState = f.memoizedState, h.lanes = f.lanes) : (h.updateQueue = null, h.memoizedState = null)
                                    }
                                    var p = gs(s);
                                    if (null !== p) {
                                        p.flags &= -257, ys(p, s, l, 0, t), 1 & p.mode && vs(a, c, t), u = c;
                                        var m = (t = p).updateQueue;
                                        if (null === m) {
                                            var v = new Set;
                                            v.add(u), t.updateQueue = v
                                        } else m.add(u);
                                        break e
                                    }
                                    if (0 == (1 & t)) {
                                        vs(a, c, t), mu();
                                        break e
                                    }
                                    u = Error(i(426))
                                } else if (ii && 1 & l.mode) {
                                    var g = gs(s);
                                    if (null !== g) {
                                        0 == (65536 & g.flags) && (g.flags |= 256), ys(g, s, l, 0, t), mi(cs(u, l));
                                        break e
                                    }
                                }
                                a = u = cs(u, l),
                                4 !== Nl && (Nl = 2),
                                null === Fl ? Fl = [a] : Fl.push(a),
                                a = s;do {
                                    switch (a.tag) {
                                        case 3:
                                            a.flags |= 65536, t &= -t, a.lanes |= t, qi(a, ps(0, u, t));
                                            break e;
                                        case 1:
                                            l = u;
                                            var y = a.type,
                                                b = a.stateNode;
                                            if (0 == (128 & a.flags) && ("function" == typeof y.getDerivedStateFromError || null !== b && "function" == typeof b.componentDidCatch && (null === Gl || !Gl.has(b)))) {
                                                a.flags |= 65536, t &= -t, a.lanes |= t, qi(a, ms(a, l, t));
                                                break e
                                            }
                                    }
                                    a = a.return
                                } while (null !== a)
                            }
                            wu(n)
                        } catch (e) {
                            t = e, Pl === n && null !== n && (Pl = n = n.return);
                            continue
                        }
                        break
                    }
                }

                function pu() {
                    var e = kl.current;
                    return kl.current = as, null === e ? as : e
                }

                function mu() {
                    0 !== Nl && 3 !== Nl && 2 !== Nl || (Nl = 4), null === Al || 0 == (268435455 & Ll) && 0 == (268435455 & ql) || su(Al, Rl)
                }

                function vu(e, t) {
                    var n = Ol;
                    Ol |= 2;
                    var r = pu();
                    for (Al === e && Rl === t || (Ul = null, du(e, t));;) try {
                        gu();
                        break
                    } catch (t) {
                        fu(e, t)
                    }
                    if (xi(), Ol = n, kl.current = r, null !== Pl) throw Error(i(261));
                    return Al = null, Rl = 0, Nl
                }

                function gu() {
                    for (; null !== Pl;) bu(Pl)
                }

                function yu() {
                    for (; null !== Pl && !$e();) bu(Pl)
                }

                function bu(e) {
                    var t = El(e.alternate, e, Ml);
                    e.memoizedProps = e.pendingProps, null === t ? wu(e) : Pl = t, Tl.current = null
                }

                function wu(e) {
                    var t = e;
                    do {
                        var n = t.alternate;
                        if (e = t.return, 0 == (32768 & t.flags)) {
                            if (null !== (n = Qs(n, t, Ml))) return void(Pl = n)
                        } else {
                            if (null !== (n = Ys(n, t))) return n.flags &= 32767, void(Pl = n);
                            if (null === e) return Nl = 6, void(Pl = null);
                            e.flags |= 32768, e.subtreeFlags = 0, e.deletions = null
                        }
                        if (null !== (t = t.sibling)) return void(Pl = t);
                        Pl = t = e
                    } while (null !== t);
                    0 === Nl && (Nl = 5)
                }

                function _u(e, t, n) {
                    var r = bt,
                        o = Cl.transition;
                    try {
                        Cl.transition = null, bt = 1,
                            function(e, t, n, r) {
                                do {
                                    xu()
                                } while (null !== Yl);
                                if (0 != (6 & Ol)) throw Error(i(327));
                                n = e.finishedWork;
                                var o = e.finishedLanes;
                                if (null === n) return null;
                                if (e.finishedWork = null, e.finishedLanes = 0, n === e.current) throw Error(i(177));
                                e.callbackNode = null, e.callbackPriority = 0;
                                var a = n.lanes | n.childLanes;
                                if (function(e, t) {
                                        var n = e.pendingLanes & ~t;
                                        e.pendingLanes = t, e.suspendedLanes = 0, e.pingedLanes = 0, e.expiredLanes &= t, e.mutableReadLanes &= t, e.entangledLanes &= t, t = e.entanglements;
                                        var r = e.eventTimes;
                                        for (e = e.expirationTimes; 0 < n;) {
                                            var o = 31 - at(n),
                                                i = 1 << o;
                                            t[o] = 0, r[o] = -1, e[o] = -1, n &= ~i
                                        }
                                    }(e, a), e === Al && (Pl = Al = null, Rl = 0), 0 == (2064 & n.subtreeFlags) && 0 == (2064 & n.flags) || Ql || (Ql = !0, Au(tt, (function() {
                                        return xu(), null
                                    }))), a = 0 != (15990 & n.flags), 0 != (15990 & n.subtreeFlags) || a) {
                                    a = Cl.transition, Cl.transition = null;
                                    var s = bt;
                                    bt = 1;
                                    var l = Ol;
                                    Ol |= 4, Tl.current = null,
                                        function(e, t) {
                                            if (eo = Wt, fr(e = dr())) {
                                                if ("selectionStart" in e) var n = {
                                                    start: e.selectionStart,
                                                    end: e.selectionEnd
                                                };
                                                else e: {
                                                    var r = (n = (n = e.ownerDocument) && n.defaultView || window).getSelection && n.getSelection();
                                                    if (r && 0 !== r.rangeCount) {
                                                        n = r.anchorNode;
                                                        var o = r.anchorOffset,
                                                            a = r.focusNode;
                                                        r = r.focusOffset;
                                                        try {
                                                            n.nodeType, a.nodeType
                                                        } catch (e) {
                                                            n = null;
                                                            break e
                                                        }
                                                        var s = 0,
                                                            l = -1,
                                                            u = -1,
                                                            c = 0,
                                                            h = 0,
                                                            d = e,
                                                            f = null;
                                                        t: for (;;) {
                                                            for (var p; d !== n || 0 !== o && 3 !== d.nodeType || (l = s + o), d !== a || 0 !== r && 3 !== d.nodeType || (u = s + r), 3 === d.nodeType && (s += d.nodeValue.length), null !== (p = d.firstChild);) f = d, d = p;
                                                            for (;;) {
                                                                if (d === e) break t;
                                                                if (f === n && ++c === o && (l = s), f === a && ++h === r && (u = s), null !== (p = d.nextSibling)) break;
                                                                f = (d = f).parentNode
                                                            }
                                                            d = p
                                                        }
                                                        n = -1 === l || -1 === u ? null : {
                                                            start: l,
                                                            end: u
                                                        }
                                                    } else n = null
                                                }
                                                n = n || {
                                                    start: 0,
                                                    end: 0
                                                }
                                            } else n = null;
                                            for (to = {
                                                    focusedElem: e,
                                                    selectionRange: n
                                                }, Wt = !1, Ks = t; null !== Ks;)
                                                if (e = (t = Ks).child, 0 != (1028 & t.subtreeFlags) && null !== e) e.return = t, Ks = e;
                                                else
                                                    for (; null !== Ks;) {
                                                        t = Ks;
                                                        try {
                                                            var m = t.alternate;
                                                            if (0 != (1024 & t.flags)) switch (t.tag) {
                                                                case 0:
                                                                case 11:
                                                                case 15:
                                                                case 5:
                                                                case 6:
                                                                case 4:
                                                                case 17:
                                                                    break;
                                                                case 1:
                                                                    if (null !== m) {
                                                                        var v = m.memoizedProps,
                                                                            g = m.memoizedState,
                                                                            y = t.stateNode,
                                                                            b = y.getSnapshotBeforeUpdate(t.elementType === t.type ? v : gi(t.type, v), g);
                                                                        y.__reactInternalSnapshotBeforeUpdate = b
                                                                    }
                                                                    break;
                                                                case 3:
                                                                    var w = t.stateNode.containerInfo;
                                                                    1 === w.nodeType ? w.textContent = "" : 9 === w.nodeType && w.documentElement && w.removeChild(w.documentElement);
                                                                    break;
                                                                default:
                                                                    throw Error(i(163))
                                                            }
                                                        } catch (e) {
                                                            Su(t, t.return, e)
                                                        }
                                                        if (null !== (e = t.sibling)) {
                                                            e.return = t.return, Ks = e;
                                                            break
                                                        }
                                                        Ks = t.return
                                                    }
                                            m = tl, tl = !1
                                        }(e, n), vl(n, e), pr(to), Wt = !!eo, to = eo = null, e.current = n, yl(n, e, o), Ze(), Ol = l, bt = s, Cl.transition = a
                                } else e.current = n;
                                if (Ql && (Ql = !1, Yl = e, $l = o), 0 === (a = e.pendingLanes) && (Gl = null), function(e) {
                                        if (it && "function" == typeof it.onCommitFiberRoot) try {
                                            it.onCommitFiberRoot(ot, e, void 0, 128 == (128 & e.current.flags))
                                        } catch (e) {}
                                    }(n.stateNode), ru(e, Xe()), null !== t)
                                    for (r = e.onRecoverableError, n = 0; n < t.length; n++) r((o = t[n]).value, {
                                        componentStack: o.stack,
                                        digest: o.digest
                                    });
                                if (Wl) throw Wl = !1, e = Hl, Hl = null, e;
                                0 != (1 & $l) && 0 !== e.tag && xu(), 0 != (1 & (a = e.pendingLanes)) ? e === Xl ? Zl++ : (Zl = 0, Xl = e) : Zl = 0, Uo()
                            }(e, t, n, r)
                    } finally {
                        Cl.transition = o, bt = r
                    }
                    return null
                }

                function xu() {
                    if (null !== Yl) {
                        var e = wt($l),
                            t = Cl.transition,
                            n = bt;
                        try {
                            if (Cl.transition = null, bt = 16 > e ? 16 : e, null === Yl) var r = !1;
                            else {
                                if (e = Yl, Yl = null, $l = 0, 0 != (6 & Ol)) throw Error(i(331));
                                var o = Ol;
                                for (Ol |= 4, Ks = e.current; null !== Ks;) {
                                    var a = Ks,
                                        s = a.child;
                                    if (0 != (16 & Ks.flags)) {
                                        var l = a.deletions;
                                        if (null !== l) {
                                            for (var u = 0; u < l.length; u++) {
                                                var c = l[u];
                                                for (Ks = c; null !== Ks;) {
                                                    var h = Ks;
                                                    switch (h.tag) {
                                                        case 0:
                                                        case 11:
                                                        case 15:
                                                            nl(8, h, a)
                                                    }
                                                    var d = h.child;
                                                    if (null !== d) d.return = h, Ks = d;
                                                    else
                                                        for (; null !== Ks;) {
                                                            var f = (h = Ks).sibling,
                                                                p = h.return;
                                                            if (il(h), h === c) {
                                                                Ks = null;
                                                                break
                                                            }
                                                            if (null !== f) {
                                                                f.return = p, Ks = f;
                                                                break
                                                            }
                                                            Ks = p
                                                        }
                                                }
                                            }
                                            var m = a.alternate;
                                            if (null !== m) {
                                                var v = m.child;
                                                if (null !== v) {
                                                    m.child = null;
                                                    do {
                                                        var g = v.sibling;
                                                        v.sibling = null, v = g
                                                    } while (null !== v)
                                                }
                                            }
                                            Ks = a
                                        }
                                    }
                                    if (0 != (2064 & a.subtreeFlags) && null !== s) s.return = a, Ks = s;
                                    else e: for (; null !== Ks;) {
                                        if (0 != (2048 & (a = Ks).flags)) switch (a.tag) {
                                            case 0:
                                            case 11:
                                            case 15:
                                                nl(9, a, a.return)
                                        }
                                        var y = a.sibling;
                                        if (null !== y) {
                                            y.return = a.return, Ks = y;
                                            break e
                                        }
                                        Ks = a.return
                                    }
                                }
                                var b = e.current;
                                for (Ks = b; null !== Ks;) {
                                    var w = (s = Ks).child;
                                    if (0 != (2064 & s.subtreeFlags) && null !== w) w.return = s, Ks = w;
                                    else e: for (s = b; null !== Ks;) {
                                        if (0 != (2048 & (l = Ks).flags)) try {
                                            switch (l.tag) {
                                                case 0:
                                                case 11:
                                                case 15:
                                                    rl(9, l)
                                            }
                                        } catch (e) {
                                            Su(l, l.return, e)
                                        }
                                        if (l === s) {
                                            Ks = null;
                                            break e
                                        }
                                        var _ = l.sibling;
                                        if (null !== _) {
                                            _.return = l.return, Ks = _;
                                            break e
                                        }
                                        Ks = l.return
                                    }
                                }
                                if (Ol = o, Uo(), it && "function" == typeof it.onPostCommitFiberRoot) try {
                                    it.onPostCommitFiberRoot(ot, e)
                                } catch (e) {}
                                r = !0
                            }
                            return r
                        } finally {
                            bt = n, Cl.transition = t
                        }
                    }
                    return !1
                }

                function Eu(e, t, n) {
                    e = Ii(e, t = ps(0, t = cs(n, t), 1), 1), t = eu(), null !== e && (gt(e, 1, t), ru(e, t))
                }

                function Su(e, t, n) {
                    if (3 === e.tag) Eu(e, e, n);
                    else
                        for (; null !== t;) {
                            if (3 === t.tag) {
                                Eu(t, e, n);
                                break
                            }
                            if (1 === t.tag) {
                                var r = t.stateNode;
                                if ("function" == typeof t.type.getDerivedStateFromError || "function" == typeof r.componentDidCatch && (null === Gl || !Gl.has(r))) {
                                    t = Ii(t, e = ms(t, e = cs(n, e), 1), 1), e = eu(), null !== t && (gt(t, 1, e), ru(t, e));
                                    break
                                }
                            }
                            t = t.return
                        }
                }

                function ku(e, t, n) {
                    var r = e.pingCache;
                    null !== r && r.delete(t), t = eu(), e.pingedLanes |= e.suspendedLanes & n, Al === e && (Rl & n) === n && (4 === Nl || 3 === Nl && (130023424 & Rl) === Rl && 500 > Xe() - Bl ? du(e, 0) : jl |= n), ru(e, t)
                }

                function Tu(e, t) {
                    0 === t && (0 == (1 & e.mode) ? t = 1 : (t = ct, 0 == (130023424 & (ct <<= 1)) && (ct = 4194304)));
                    var n = eu();
                    null !== (e = Pi(e, t)) && (gt(e, t, n), ru(e, n))
                }

                function Cu(e) {
                    var t = e.memoizedState,
                        n = 0;
                    null !== t && (n = t.retryLane), Tu(e, n)
                }

                function Ou(e, t) {
                    var n = 0;
                    switch (e.tag) {
                        case 13:
                            var r = e.stateNode,
                                o = e.memoizedState;
                            null !== o && (n = o.retryLane);
                            break;
                        case 19:
                            r = e.stateNode;
                            break;
                        default:
                            throw Error(i(314))
                    }
                    null !== r && r.delete(t), Tu(e, n)
                }

                function Au(e, t) {
                    return Qe(e, t)
                }

                function Pu(e, t, n, r) {
                    this.tag = e, this.key = n, this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null, this.index = 0, this.ref = null, this.pendingProps = t, this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null, this.mode = r, this.subtreeFlags = this.flags = 0, this.deletions = null, this.childLanes = this.lanes = 0, this.alternate = null
                }

                function Ru(e, t, n, r) {
                    return new Pu(e, t, n, r)
                }

                function Mu(e) {
                    return !(!(e = e.prototype) || !e.isReactComponent)
                }

                function Du(e, t) {
                    var n = e.alternate;
                    return null === n ? ((n = Ru(e.tag, t, e.key, e.mode)).elementType = e.elementType, n.type = e.type, n.stateNode = e.stateNode, n.alternate = e, e.alternate = n) : (n.pendingProps = t, n.type = e.type, n.flags = 0, n.subtreeFlags = 0, n.deletions = null), n.flags = 14680064 & e.flags, n.childLanes = e.childLanes, n.lanes = e.lanes, n.child = e.child, n.memoizedProps = e.memoizedProps, n.memoizedState = e.memoizedState, n.updateQueue = e.updateQueue, t = e.dependencies, n.dependencies = null === t ? null : {
                        lanes: t.lanes,
                        firstContext: t.firstContext
                    }, n.sibling = e.sibling, n.index = e.index, n.ref = e.ref, n
                }

                function Nu(e, t, n, r, o, a) {
                    var s = 2;
                    if (r = e, "function" == typeof e) Mu(e) && (s = 1);
                    else if ("string" == typeof e) s = 5;
                    else e: switch (e) {
                        case E:
                            return Iu(n.children, o, a, t);
                        case S:
                            s = 8, o |= 8;
                            break;
                        case k:
                            return (e = Ru(12, n, t, 2 | o)).elementType = k, e.lanes = a, e;
                        case A:
                            return (e = Ru(13, n, t, o)).elementType = A, e.lanes = a, e;
                        case P:
                            return (e = Ru(19, n, t, o)).elementType = P, e.lanes = a, e;
                        case D:
                            return Lu(n, o, a, t);
                        default:
                            if ("object" == typeof e && null !== e) switch (e.$$typeof) {
                                case T:
                                    s = 10;
                                    break e;
                                case C:
                                    s = 9;
                                    break e;
                                case O:
                                    s = 11;
                                    break e;
                                case R:
                                    s = 14;
                                    break e;
                                case M:
                                    s = 16, r = null;
                                    break e
                            }
                            throw Error(i(130, null == e ? e : typeof e, ""))
                    }
                    return (t = Ru(s, n, t, o)).elementType = e, t.type = r, t.lanes = a, t
                }

                function Iu(e, t, n, r) {
                    return (e = Ru(7, e, r, t)).lanes = n, e
                }

                function Lu(e, t, n, r) {
                    return (e = Ru(22, e, r, t)).elementType = D, e.lanes = n, e.stateNode = {
                        isHidden: !1
                    }, e
                }

                function qu(e, t, n) {
                    return (e = Ru(6, e, null, t)).lanes = n, e
                }

                function ju(e, t, n) {
                    return (t = Ru(4, null !== e.children ? e.children : [], e.key, t)).lanes = n, t.stateNode = {
                        containerInfo: e.containerInfo,
                        pendingChildren: null,
                        implementation: e.implementation
                    }, t
                }

                function Fu(e, t, n, r, o) {
                    this.tag = t, this.containerInfo = e, this.finishedWork = this.pingCache = this.current = this.pendingChildren = null, this.timeoutHandle = -1, this.callbackNode = this.pendingContext = this.context = null, this.callbackPriority = 0, this.eventTimes = vt(0), this.expirationTimes = vt(-1), this.entangledLanes = this.finishedLanes = this.mutableReadLanes = this.expiredLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0, this.entanglements = vt(0), this.identifierPrefix = r, this.onRecoverableError = o, this.mutableSourceEagerHydrationData = null
                }

                function Vu(e, t, n, r, o, i, a, s, l) {
                    return e = new Fu(e, t, n, s, l), 1 === t ? (t = 1, !0 === i && (t |= 8)) : t = 0, i = Ru(3, null, null, t), e.current = i, i.stateNode = e, i.memoizedState = {
                        element: r,
                        isDehydrated: n,
                        cache: null,
                        transitions: null,
                        pendingSuspenseBoundaries: null
                    }, Mi(i), e
                }

                function Bu(e) {
                    if (!e) return Oo;
                    e: {
                        if (ze(e = e._reactInternals) !== e || 1 !== e.tag) throw Error(i(170));
                        var t = e;do {
                            switch (t.tag) {
                                case 3:
                                    t = t.stateNode.context;
                                    break e;
                                case 1:
                                    if (Do(t.type)) {
                                        t = t.stateNode.__reactInternalMemoizedMergedChildContext;
                                        break e
                                    }
                            }
                            t = t.return
                        } while (null !== t);
                        throw Error(i(171))
                    }
                    if (1 === e.tag) {
                        var n = e.type;
                        if (Do(n)) return Lo(e, n, t)
                    }
                    return t
                }

                function zu(e, t, n, r, o, i, a, s, l) {
                    return (e = Vu(n, r, !0, e, 0, i, 0, s, l)).context = Bu(null), n = e.current, (i = Ni(r = eu(), o = tu(n))).callback = null != t ? t : null, Ii(n, i, o), e.current.lanes = o, gt(e, o, r), ru(e, r), e
                }

                function Uu(e, t, n, r) {
                    var o = t.current,
                        i = eu(),
                        a = tu(o);
                    return n = Bu(n), null === t.context ? t.context = n : t.pendingContext = n, (t = Ni(i, a)).payload = {
                        element: e
                    }, null !== (r = void 0 === r ? null : r) && (t.callback = r), null !== (e = Ii(o, t, a)) && (nu(e, o, a, i), Li(e, o, a)), a
                }

                function Wu(e) {
                    return (e = e.current).child ? (e.child.tag, e.child.stateNode) : null
                }

                function Hu(e, t) {
                    if (null !== (e = e.memoizedState) && null !== e.dehydrated) {
                        var n = e.retryLane;
                        e.retryLane = 0 !== n && n < t ? n : t
                    }
                }

                function Gu(e, t) {
                    Hu(e, t), (e = e.alternate) && Hu(e, t)
                }
                El = function(e, t, n) {
                    if (null !== e)
                        if (e.memoizedProps !== t.pendingProps || Po.current) ws = !0;
                        else {
                            if (0 == (e.lanes & n) && 0 == (128 & t.flags)) return ws = !1,
                                function(e, t, n) {
                                    switch (t.tag) {
                                        case 3:
                                            Ps(t), pi();
                                            break;
                                        case 5:
                                            aa(t);
                                            break;
                                        case 1:
                                            Do(t.type) && qo(t);
                                            break;
                                        case 4:
                                            oa(t, t.stateNode.containerInfo);
                                            break;
                                        case 10:
                                            var r = t.type._context,
                                                o = t.memoizedProps.value;
                                            Co(yi, r._currentValue), r._currentValue = o;
                                            break;
                                        case 13:
                                            if (null !== (r = t.memoizedState)) return null !== r.dehydrated ? (Co(la, 1 & la.current), t.flags |= 128, null) : 0 != (n & t.child.childLanes) ? qs(e, t, n) : (Co(la, 1 & la.current), null !== (e = Ws(e, t, n)) ? e.sibling : null);
                                            Co(la, 1 & la.current);
                                            break;
                                        case 19:
                                            if (r = 0 != (n & t.childLanes), 0 != (128 & e.flags)) {
                                                if (r) return zs(e, t, n);
                                                t.flags |= 128
                                            }
                                            if (null !== (o = t.memoizedState) && (o.rendering = null, o.tail = null, o.lastEffect = null), Co(la, la.current), r) break;
                                            return null;
                                        case 22:
                                        case 23:
                                            return t.lanes = 0, ks(e, t, n)
                                    }
                                    return Ws(e, t, n)
                                }(e, t, n);
                            ws = 0 != (131072 & e.flags)
                        }
                    else ws = !1, ii && 0 != (1048576 & t.flags) && ei(t, Qo, t.index);
                    switch (t.lanes = 0, t.tag) {
                        case 2:
                            var r = t.type;
                            Us(e, t), e = t.pendingProps;
                            var o = Mo(t, Ao.current);
                            ki(t, n), o = Sa(null, t, r, e, o, n);
                            var a = ka();
                            return t.flags |= 1, "object" == typeof o && null !== o && "function" == typeof o.render && void 0 === o.$$typeof ? (t.tag = 1, t.memoizedState = null, t.updateQueue = null, Do(r) ? (a = !0, qo(t)) : a = !1, t.memoizedState = null !== o.state && void 0 !== o.state ? o.state : null, Mi(t), o.updater = zi, t.stateNode = o, o._reactInternals = t, Gi(t, r, e, n), t = As(null, t, r, !0, a, n)) : (t.tag = 0, ii && a && ti(t), _s(null, t, o, n), t = t.child), t;
                        case 16:
                            r = t.elementType;
                            e: {
                                switch (Us(e, t), e = t.pendingProps, r = (o = r._init)(r._payload), t.type = r, o = t.tag = function(e) {
                                        if ("function" == typeof e) return Mu(e) ? 1 : 0;
                                        if (null != e) {
                                            if ((e = e.$$typeof) === O) return 11;
                                            if (e === R) return 14
                                        }
                                        return 2
                                    }(r), e = gi(r, e), o) {
                                    case 0:
                                        t = Cs(null, t, r, e, n);
                                        break e;
                                    case 1:
                                        t = Os(null, t, r, e, n);
                                        break e;
                                    case 11:
                                        t = xs(null, t, r, e, n);
                                        break e;
                                    case 14:
                                        t = Es(null, t, r, gi(r.type, e), n);
                                        break e
                                }
                                throw Error(i(306, r, ""))
                            }
                            return t;
                        case 0:
                            return r = t.type, o = t.pendingProps, Cs(e, t, r, o = t.elementType === r ? o : gi(r, o), n);
                        case 1:
                            return r = t.type, o = t.pendingProps, Os(e, t, r, o = t.elementType === r ? o : gi(r, o), n);
                        case 3:
                            e: {
                                if (Ps(t), null === e) throw Error(i(387));r = t.pendingProps,
                                o = (a = t.memoizedState).element,
                                Di(e, t),
                                ji(t, r, null, n);
                                var s = t.memoizedState;
                                if (r = s.element, a.isDehydrated) {
                                    if (a = {
                                            element: r,
                                            isDehydrated: !1,
                                            cache: s.cache,
                                            pendingSuspenseBoundaries: s.pendingSuspenseBoundaries,
                                            transitions: s.transitions
                                        }, t.updateQueue.baseState = a, t.memoizedState = a, 256 & t.flags) {
                                        t = Rs(e, t, r, n, o = cs(Error(i(423)), t));
                                        break e
                                    }
                                    if (r !== o) {
                                        t = Rs(e, t, r, n, o = cs(Error(i(424)), t));
                                        break e
                                    }
                                    for (oi = uo(t.stateNode.containerInfo.firstChild), ri = t, ii = !0, ai = null, n = Ki(t, null, r, n), t.child = n; n;) n.flags = -3 & n.flags | 4096, n = n.sibling
                                } else {
                                    if (pi(), r === o) {
                                        t = Ws(e, t, n);
                                        break e
                                    }
                                    _s(e, t, r, n)
                                }
                                t = t.child
                            }
                            return t;
                        case 5:
                            return aa(t), null === e && ci(t), r = t.type, o = t.pendingProps, a = null !== e ? e.memoizedProps : null, s = o.children, no(r, o) ? s = null : null !== a && no(r, a) && (t.flags |= 32), Ts(e, t), _s(e, t, s, n), t.child;
                        case 6:
                            return null === e && ci(t), null;
                        case 13:
                            return qs(e, t, n);
                        case 4:
                            return oa(t, t.stateNode.containerInfo), r = t.pendingProps, null === e ? t.child = Xi(t, null, r, n) : _s(e, t, r, n), t.child;
                        case 11:
                            return r = t.type, o = t.pendingProps, xs(e, t, r, o = t.elementType === r ? o : gi(r, o), n);
                        case 7:
                            return _s(e, t, t.pendingProps, n), t.child;
                        case 8:
                        case 12:
                            return _s(e, t, t.pendingProps.children, n), t.child;
                        case 10:
                            e: {
                                if (r = t.type._context, o = t.pendingProps, a = t.memoizedProps, s = o.value, Co(yi, r._currentValue), r._currentValue = s, null !== a)
                                    if (sr(a.value, s)) {
                                        if (a.children === o.children && !Po.current) {
                                            t = Ws(e, t, n);
                                            break e
                                        }
                                    } else
                                        for (null !== (a = t.child) && (a.return = t); null !== a;) {
                                            var l = a.dependencies;
                                            if (null !== l) {
                                                s = a.child;
                                                for (var u = l.firstContext; null !== u;) {
                                                    if (u.context === r) {
                                                        if (1 === a.tag) {
                                                            (u = Ni(-1, n & -n)).tag = 2;
                                                            var c = a.updateQueue;
                                                            if (null !== c) {
                                                                var h = (c = c.shared).pending;
                                                                null === h ? u.next = u : (u.next = h.next, h.next = u), c.pending = u
                                                            }
                                                        }
                                                        a.lanes |= n, null !== (u = a.alternate) && (u.lanes |= n), Si(a.return, n, t), l.lanes |= n;
                                                        break
                                                    }
                                                    u = u.next
                                                }
                                            } else if (10 === a.tag) s = a.type === t.type ? null : a.child;
                                            else if (18 === a.tag) {
                                                if (null === (s = a.return)) throw Error(i(341));
                                                s.lanes |= n, null !== (l = s.alternate) && (l.lanes |= n), Si(s, n, t), s = a.sibling
                                            } else s = a.child;
                                            if (null !== s) s.return = a;
                                            else
                                                for (s = a; null !== s;) {
                                                    if (s === t) {
                                                        s = null;
                                                        break
                                                    }
                                                    if (null !== (a = s.sibling)) {
                                                        a.return = s.return, s = a;
                                                        break
                                                    }
                                                    s = s.return
                                                }
                                            a = s
                                        }
                                _s(e, t, o.children, n),
                                t = t.child
                            }
                            return t;
                        case 9:
                            return o = t.type, r = t.pendingProps.children, ki(t, n), r = r(o = Ti(o)), t.flags |= 1, _s(e, t, r, n), t.child;
                        case 14:
                            return o = gi(r = t.type, t.pendingProps), Es(e, t, r, o = gi(r.type, o), n);
                        case 15:
                            return Ss(e, t, t.type, t.pendingProps, n);
                        case 17:
                            return r = t.type, o = t.pendingProps, o = t.elementType === r ? o : gi(r, o), Us(e, t), t.tag = 1, Do(r) ? (e = !0, qo(t)) : e = !1, ki(t, n), Wi(t, r, o), Gi(t, r, o, n), As(null, t, r, !0, e, n);
                        case 19:
                            return zs(e, t, n);
                        case 22:
                            return ks(e, t, n)
                    }
                    throw Error(i(156, t.tag))
                };
                var Qu = "function" == typeof reportError ? reportError : function(e) {
                    console.error(e)
                };

                function Yu(e) {
                    this._internalRoot = e
                }

                function $u(e) {
                    this._internalRoot = e
                }

                function Zu(e) {
                    return !(!e || 1 !== e.nodeType && 9 !== e.nodeType && 11 !== e.nodeType)
                }

                function Xu(e) {
                    return !(!e || 1 !== e.nodeType && 9 !== e.nodeType && 11 !== e.nodeType && (8 !== e.nodeType || " react-mount-point-unstable " !== e.nodeValue))
                }

                function Ku() {}

                function Ju(e, t, n, r, o) {
                    var i = n._reactRootContainer;
                    if (i) {
                        var a = i;
                        if ("function" == typeof o) {
                            var s = o;
                            o = function() {
                                var e = Wu(a);
                                s.call(e)
                            }
                        }
                        Uu(t, a, e, o)
                    } else a = function(e, t, n, r, o) {
                        if (o) {
                            if ("function" == typeof r) {
                                var i = r;
                                r = function() {
                                    var e = Wu(a);
                                    i.call(e)
                                }
                            }
                            var a = zu(t, r, e, 0, null, !1, 0, "", Ku);
                            return e._reactRootContainer = a, e[mo] = a.current, zr(8 === e.nodeType ? e.parentNode : e), cu(), a
                        }
                        for (; o = e.lastChild;) e.removeChild(o);
                        if ("function" == typeof r) {
                            var s = r;
                            r = function() {
                                var e = Wu(l);
                                s.call(e)
                            }
                        }
                        var l = Vu(e, 0, !1, null, 0, !1, 0, "", Ku);
                        return e._reactRootContainer = l, e[mo] = l.current, zr(8 === e.nodeType ? e.parentNode : e), cu((function() {
                            Uu(t, l, n, r)
                        })), l
                    }(n, t, e, o, r);
                    return Wu(a)
                }
                $u.prototype.render = Yu.prototype.render = function(e) {
                    var t = this._internalRoot;
                    if (null === t) throw Error(i(409));
                    Uu(e, t, null, null)
                }, $u.prototype.unmount = Yu.prototype.unmount = function() {
                    var e = this._internalRoot;
                    if (null !== e) {
                        this._internalRoot = null;
                        var t = e.containerInfo;
                        cu((function() {
                            Uu(null, e, null, null)
                        })), t[mo] = null
                    }
                }, $u.prototype.unstable_scheduleHydration = function(e) {
                    if (e) {
                        var t = St();
                        e = {
                            blockedOn: null,
                            target: e,
                            priority: t
                        };
                        for (var n = 0; n < Dt.length && 0 !== t && t < Dt[n].priority; n++);
                        Dt.splice(n, 0, e), 0 === n && qt(e)
                    }
                }, _t = function(e) {
                    switch (e.tag) {
                        case 3:
                            var t = e.stateNode;
                            if (t.current.memoizedState.isDehydrated) {
                                var n = ht(t.pendingLanes);
                                0 !== n && (yt(t, 1 | n), ru(t, Xe()), 0 == (6 & Ol) && (zl = Xe() + 500, Uo()))
                            }
                            break;
                        case 13:
                            cu((function() {
                                var t = Pi(e, 1);
                                if (null !== t) {
                                    var n = eu();
                                    nu(t, e, 1, n)
                                }
                            })), Gu(e, 1)
                    }
                }, xt = function(e) {
                    if (13 === e.tag) {
                        var t = Pi(e, 134217728);
                        null !== t && nu(t, e, 134217728, eu()), Gu(e, 134217728)
                    }
                }, Et = function(e) {
                    if (13 === e.tag) {
                        var t = tu(e),
                            n = Pi(e, t);
                        null !== n && nu(n, e, t, eu()), Gu(e, t)
                    }
                }, St = function() {
                    return bt
                }, kt = function(e, t) {
                    var n = bt;
                    try {
                        return bt = e, t()
                    } finally {
                        bt = n
                    }
                }, xe = function(e, t, n) {
                    switch (t) {
                        case "input":
                            if (K(e, n), t = n.name, "radio" === n.type && null != t) {
                                for (n = e; n.parentNode;) n = n.parentNode;
                                for (n = n.querySelectorAll("input[name=" + JSON.stringify("" + t) + '][type="radio"]'), t = 0; t < n.length; t++) {
                                    var r = n[t];
                                    if (r !== e && r.form === e.form) {
                                        var o = xo(r);
                                        if (!o) throw Error(i(90));
                                        Q(r), K(r, o)
                                    }
                                }
                            }
                            break;
                        case "textarea":
                            ie(e, n);
                            break;
                        case "select":
                            null != (t = n.value) && ne(e, !!n.multiple, t, !1)
                    }
                }, Oe = uu, Ae = cu;
                var ec = {
                        usingClientEntryPoint: !1,
                        Events: [wo, _o, xo, Te, Ce, uu]
                    },
                    tc = {
                        findFiberByHostInstance: bo,
                        bundleType: 0,
                        version: "18.2.0",
                        rendererPackageName: "react-dom"
                    },
                    nc = {
                        bundleType: tc.bundleType,
                        version: tc.version,
                        rendererPackageName: tc.rendererPackageName,
                        rendererConfig: tc.rendererConfig,
                        overrideHookState: null,
                        overrideHookStateDeletePath: null,
                        overrideHookStateRenamePath: null,
                        overrideProps: null,
                        overridePropsDeletePath: null,
                        overridePropsRenamePath: null,
                        setErrorHandler: null,
                        setSuspenseHandler: null,
                        scheduleUpdate: null,
                        currentDispatcherRef: w.ReactCurrentDispatcher,
                        findHostInstanceByFiber: function(e) {
                            return null === (e = He(e)) ? null : e.stateNode
                        },
                        findFiberByHostInstance: tc.findFiberByHostInstance || function() {
                            return null
                        },
                        findHostInstancesForRefresh: null,
                        scheduleRefresh: null,
                        scheduleRoot: null,
                        setRefreshHandler: null,
                        getCurrentFiber: null,
                        reconcilerVersion: "18.2.0-next-9e3b772b8-20220608"
                    };
                if ("undefined" != typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {
                    var rc = __REACT_DEVTOOLS_GLOBAL_HOOK__;
                    if (!rc.isDisabled && rc.supportsFiber) try {
                        ot = rc.inject(nc), it = rc
                    } catch (ce) {}
                }
                t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ec, t.createPortal = function(e, t) {
                    var n = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;
                    if (!Zu(t)) throw Error(i(200));
                    return function(e, t, n) {
                        var r = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;
                        return {
                            $$typeof: x,
                            key: null == r ? null : "" + r,
                            children: e,
                            containerInfo: t,
                            implementation: n
                        }
                    }(e, t, null, n)
                }, t.createRoot = function(e, t) {
                    if (!Zu(e)) throw Error(i(299));
                    var n = !1,
                        r = "",
                        o = Qu;
                    return null != t && (!0 === t.unstable_strictMode && (n = !0), void 0 !== t.identifierPrefix && (r = t.identifierPrefix), void 0 !== t.onRecoverableError && (o = t.onRecoverableError)), t = Vu(e, 1, !1, null, 0, n, 0, r, o), e[mo] = t.current, zr(8 === e.nodeType ? e.parentNode : e), new Yu(t)
                }, t.findDOMNode = function(e) {
                    if (null == e) return null;
                    if (1 === e.nodeType) return e;
                    var t = e._reactInternals;
                    if (void 0 === t) {
                        if ("function" == typeof e.render) throw Error(i(188));
                        throw e = Object.keys(e).join(","), Error(i(268, e))
                    }
                    return null === (e = He(t)) ? null : e.stateNode
                }, t.flushSync = function(e) {
                    return cu(e)
                }, t.hydrate = function(e, t, n) {
                    if (!Xu(t)) throw Error(i(200));
                    return Ju(null, e, t, !0, n)
                }, t.hydrateRoot = function(e, t, n) {
                    if (!Zu(e)) throw Error(i(405));
                    var r = null != n && n.hydratedSources || null,
                        o = !1,
                        a = "",
                        s = Qu;
                    if (null != n && (!0 === n.unstable_strictMode && (o = !0), void 0 !== n.identifierPrefix && (a = n.identifierPrefix), void 0 !== n.onRecoverableError && (s = n.onRecoverableError)), t = zu(t, null, e, 1, null != n ? n : null, o, 0, a, s), e[mo] = t.current, zr(e), r)
                        for (e = 0; e < r.length; e++) o = (o = (n = r[e])._getVersion)(n._source), null == t.mutableSourceEagerHydrationData ? t.mutableSourceEagerHydrationData = [n, o] : t.mutableSourceEagerHydrationData.push(n, o);
                    return new $u(t)
                }, t.render = function(e, t, n) {
                    if (!Xu(t)) throw Error(i(200));
                    return Ju(null, e, t, !1, n)
                }, t.unmountComponentAtNode = function(e) {
                    if (!Xu(e)) throw Error(i(40));
                    return !!e._reactRootContainer && (cu((function() {
                        Ju(null, null, e, !1, (function() {
                            e._reactRootContainer = null, e[mo] = null
                        }))
                    })), !0)
                }, t.unstable_batchedUpdates = uu, t.unstable_renderSubtreeIntoContainer = function(e, t, n, r) {
                    if (!Xu(n)) throw Error(i(200));
                    if (null == e || void 0 === e._reactInternals) throw Error(i(38));
                    return Ju(e, t, n, !1, r)
                }, t.version = "18.2.0-next-9e3b772b8-20220608"
            },
            897: (e, t, n) => {
                "use strict";
                var r = n(116);
                t.s = r.createRoot, r.hydrateRoot
            },
            116: (e, t, n) => {
                "use strict";
                ! function e() {
                    if ("undefined" != typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && "function" == typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE) try {
                        __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)
                    } catch (e) {
                        console.error(e)
                    }
                }(), e.exports = n(748)
            },
            126: e => {
                var t = "undefined" != typeof Element,
                    n = "function" == typeof Map,
                    r = "function" == typeof Set,
                    o = "function" == typeof ArrayBuffer && !!ArrayBuffer.isView;

                function i(e, a) {
                    if (e === a) return !0;
                    if (e && a && "object" == typeof e && "object" == typeof a) {
                        if (e.constructor !== a.constructor) return !1;
                        var s, l, u, c;
                        if (Array.isArray(e)) {
                            if ((s = e.length) != a.length) return !1;
                            for (l = s; 0 != l--;)
                                if (!i(e[l], a[l])) return !1;
                            return !0
                        }
                        if (n && e instanceof Map && a instanceof Map) {
                            if (e.size !== a.size) return !1;
                            for (c = e.entries(); !(l = c.next()).done;)
                                if (!a.has(l.value[0])) return !1;
                            for (c = e.entries(); !(l = c.next()).done;)
                                if (!i(l.value[1], a.get(l.value[0]))) return !1;
                            return !0
                        }
                        if (r && e instanceof Set && a instanceof Set) {
                            if (e.size !== a.size) return !1;
                            for (c = e.entries(); !(l = c.next()).done;)
                                if (!a.has(l.value[0])) return !1;
                            return !0
                        }
                        if (o && ArrayBuffer.isView(e) && ArrayBuffer.isView(a)) {
                            if ((s = e.length) != a.length) return !1;
                            for (l = s; 0 != l--;)
                                if (e[l] !== a[l]) return !1;
                            return !0
                        }
                        if (e.constructor === RegExp) return e.source === a.source && e.flags === a.flags;
                        if (e.valueOf !== Object.prototype.valueOf && "function" == typeof e.valueOf && "function" == typeof a.valueOf) return e.valueOf() === a.valueOf();
                        if (e.toString !== Object.prototype.toString && "function" == typeof e.toString && "function" == typeof a.toString) return e.toString() === a.toString();
                        if ((s = (u = Object.keys(e)).length) !== Object.keys(a).length) return !1;
                        for (l = s; 0 != l--;)
                            if (!Object.prototype.hasOwnProperty.call(a, u[l])) return !1;
                        if (t && e instanceof Element) return !1;
                        for (l = s; 0 != l--;)
                            if (("_owner" !== u[l] && "__v" !== u[l] && "__o" !== u[l] || !e.$$typeof) && !i(e[u[l]], a[u[l]])) return !1;
                        return !0
                    }
                    return e != e && a != a
                }
                e.exports = function(e, t) {
                    try {
                        return i(e, t)
                    } catch (e) {
                        if ((e.message || "").match(/stack|recursion/i)) return console.warn("react-fast-compare cannot handle circular refs"), !1;
                        throw e
                    }
                }
            },
            139: (e, t, n) => {
                "use strict";
                var r, o = n(466),
                    i = (r = o) && "object" == typeof r && "default" in r ? r.default : r;

                function a(e, t, n) {
                    return t in e ? Object.defineProperty(e, t, {
                        value: n,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : e[t] = n, e
                }
                var s = !("undefined" == typeof window || !window.document || !window.document.createElement);
                e.exports = function(e, t, n) {
                    if ("function" != typeof e) throw new Error("Expected reducePropsToState to be a function.");
                    if ("function" != typeof t) throw new Error("Expected handleStateChangeOnClient to be a function.");
                    if (void 0 !== n && "function" != typeof n) throw new Error("Expected mapStateOnServer to either be undefined or a function.");
                    return function(r) {
                        if ("function" != typeof r) throw new Error("Expected WrappedComponent to be a React component.");
                        var l, u = [];

                        function c() {
                            l = e(u.map((function(e) {
                                return e.props
                            }))), h.canUseDOM ? t(l) : n && (l = n(l))
                        }
                        var h = function(e) {
                            var t, n;

                            function o() {
                                return e.apply(this, arguments) || this
                            }
                            n = e, (t = o).prototype = Object.create(n.prototype), t.prototype.constructor = t, t.__proto__ = n, o.peek = function() {
                                return l
                            }, o.rewind = function() {
                                if (o.canUseDOM) throw new Error("You may only call rewind() on the server. Call peek() to read the current state.");
                                var e = l;
                                return l = void 0, u = [], e
                            };
                            var a = o.prototype;
                            return a.UNSAFE_componentWillMount = function() {
                                u.push(this), c()
                            }, a.componentDidUpdate = function() {
                                c()
                            }, a.componentWillUnmount = function() {
                                var e = u.indexOf(this);
                                u.splice(e, 1), c()
                            }, a.render = function() {
                                return i.createElement(r, this.props)
                            }, o
                        }(o.PureComponent);
                        return a(h, "displayName", "SideEffect(" + function(e) {
                            return e.displayName || e.name || "Component"
                        }(r) + ")"), a(h, "canUseDOM", s), h
                    }
                }
            },
            751: (e, t) => {
                "use strict";
                var n = Symbol.for("react.element"),
                    r = Symbol.for("react.portal"),
                    o = Symbol.for("react.fragment"),
                    i = Symbol.for("react.strict_mode"),
                    a = Symbol.for("react.profiler"),
                    s = Symbol.for("react.provider"),
                    l = Symbol.for("react.context"),
                    u = Symbol.for("react.forward_ref"),
                    c = Symbol.for("react.suspense"),
                    h = Symbol.for("react.memo"),
                    d = Symbol.for("react.lazy"),
                    f = Symbol.iterator,
                    p = {
                        isMounted: function() {
                            return !1
                        },
                        enqueueForceUpdate: function() {},
                        enqueueReplaceState: function() {},
                        enqueueSetState: function() {}
                    },
                    m = Object.assign,
                    v = {};

                function g(e, t, n) {
                    this.props = e, this.context = t, this.refs = v, this.updater = n || p
                }

                function y() {}

                function b(e, t, n) {
                    this.props = e, this.context = t, this.refs = v, this.updater = n || p
                }
                g.prototype.isReactComponent = {}, g.prototype.setState = function(e, t) {
                    if ("object" != typeof e && "function" != typeof e && null != e) throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
                    this.updater.enqueueSetState(this, e, t, "setState")
                }, g.prototype.forceUpdate = function(e) {
                    this.updater.enqueueForceUpdate(this, e, "forceUpdate")
                }, y.prototype = g.prototype;
                var w = b.prototype = new y;
                w.constructor = b, m(w, g.prototype), w.isPureReactComponent = !0;
                var _ = Array.isArray,
                    x = Object.prototype.hasOwnProperty,
                    E = {
                        current: null
                    },
                    S = {
                        key: !0,
                        ref: !0,
                        __self: !0,
                        __source: !0
                    };

                function k(e, t, r) {
                    var o, i = {},
                        a = null,
                        s = null;
                    if (null != t)
                        for (o in void 0 !== t.ref && (s = t.ref), void 0 !== t.key && (a = "" + t.key), t) x.call(t, o) && !S.hasOwnProperty(o) && (i[o] = t[o]);
                    var l = arguments.length - 2;
                    if (1 === l) i.children = r;
                    else if (1 < l) {
                        for (var u = Array(l), c = 0; c < l; c++) u[c] = arguments[c + 2];
                        i.children = u
                    }
                    if (e && e.defaultProps)
                        for (o in l = e.defaultProps) void 0 === i[o] && (i[o] = l[o]);
                    return {
                        $$typeof: n,
                        type: e,
                        key: a,
                        ref: s,
                        props: i,
                        _owner: E.current
                    }
                }

                function T(e) {
                    return "object" == typeof e && null !== e && e.$$typeof === n
                }
                var C = /\/+/g;

                function O(e, t) {
                    return "object" == typeof e && null !== e && null != e.key ? function(e) {
                        var t = {
                            "=": "=0",
                            ":": "=2"
                        };
                        return "$" + e.replace(/[=:]/g, (function(e) {
                            return t[e]
                        }))
                    }("" + e.key) : t.toString(36)
                }

                function A(e, t, o, i, a) {
                    var s = typeof e;
                    "undefined" !== s && "boolean" !== s || (e = null);
                    var l = !1;
                    if (null === e) l = !0;
                    else switch (s) {
                        case "string":
                        case "number":
                            l = !0;
                            break;
                        case "object":
                            switch (e.$$typeof) {
                                case n:
                                case r:
                                    l = !0
                            }
                    }
                    if (l) return a = a(l = e), e = "" === i ? "." + O(l, 0) : i, _(a) ? (o = "", null != e && (o = e.replace(C, "$&/") + "/"), A(a, t, o, "", (function(e) {
                        return e
                    }))) : null != a && (T(a) && (a = function(e, t) {
                        return {
                            $$typeof: n,
                            type: e.type,
                            key: t,
                            ref: e.ref,
                            props: e.props,
                            _owner: e._owner
                        }
                    }(a, o + (!a.key || l && l.key === a.key ? "" : ("" + a.key).replace(C, "$&/") + "/") + e)), t.push(a)), 1;
                    if (l = 0, i = "" === i ? "." : i + ":", _(e))
                        for (var u = 0; u < e.length; u++) {
                            var c = i + O(s = e[u], u);
                            l += A(s, t, o, c, a)
                        } else if (c = function(e) {
                                return null === e || "object" != typeof e ? null : "function" == typeof(e = f && e[f] || e["@@iterator"]) ? e : null
                            }(e), "function" == typeof c)
                            for (e = c.call(e), u = 0; !(s = e.next()).done;) l += A(s = s.value, t, o, c = i + O(s, u++), a);
                        else if ("object" === s) throw t = String(e), Error("Objects are not valid as a React child (found: " + ("[object Object]" === t ? "object with keys {" + Object.keys(e).join(", ") + "}" : t) + "). If you meant to render a collection of children, use an array instead.");
                    return l
                }

                function P(e, t, n) {
                    if (null == e) return e;
                    var r = [],
                        o = 0;
                    return A(e, r, "", "", (function(e) {
                        return t.call(n, e, o++)
                    })), r
                }

                function R(e) {
                    if (-1 === e._status) {
                        var t = e._result;
                        (t = t()).then((function(t) {
                            0 !== e._status && -1 !== e._status || (e._status = 1, e._result = t)
                        }), (function(t) {
                            0 !== e._status && -1 !== e._status || (e._status = 2, e._result = t)
                        })), -1 === e._status && (e._status = 0, e._result = t)
                    }
                    if (1 === e._status) return e._result.default;
                    throw e._result
                }
                var M = {
                        current: null
                    },
                    D = {
                        transition: null
                    },
                    N = {
                        ReactCurrentDispatcher: M,
                        ReactCurrentBatchConfig: D,
                        ReactCurrentOwner: E
                    };
                t.Children = {
                    map: P,
                    forEach: function(e, t, n) {
                        P(e, (function() {
                            t.apply(this, arguments)
                        }), n)
                    },
                    count: function(e) {
                        var t = 0;
                        return P(e, (function() {
                            t++
                        })), t
                    },
                    toArray: function(e) {
                        return P(e, (function(e) {
                            return e
                        })) || []
                    },
                    only: function(e) {
                        if (!T(e)) throw Error("React.Children.only expected to receive a single React element child.");
                        return e
                    }
                }, t.Component = g, t.Fragment = o, t.Profiler = a, t.PureComponent = b, t.StrictMode = i, t.Suspense = c, t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = N, t.cloneElement = function(e, t, r) {
                    if (null == e) throw Error("React.cloneElement(...): The argument must be a React element, but you passed " + e + ".");
                    var o = m({}, e.props),
                        i = e.key,
                        a = e.ref,
                        s = e._owner;
                    if (null != t) {
                        if (void 0 !== t.ref && (a = t.ref, s = E.current), void 0 !== t.key && (i = "" + t.key), e.type && e.type.defaultProps) var l = e.type.defaultProps;
                        for (u in t) x.call(t, u) && !S.hasOwnProperty(u) && (o[u] = void 0 === t[u] && void 0 !== l ? l[u] : t[u])
                    }
                    var u = arguments.length - 2;
                    if (1 === u) o.children = r;
                    else if (1 < u) {
                        l = Array(u);
                        for (var c = 0; c < u; c++) l[c] = arguments[c + 2];
                        o.children = l
                    }
                    return {
                        $$typeof: n,
                        type: e.type,
                        key: i,
                        ref: a,
                        props: o,
                        _owner: s
                    }
                }, t.createContext = function(e) {
                    return (e = {
                        $$typeof: l,
                        _currentValue: e,
                        _currentValue2: e,
                        _threadCount: 0,
                        Provider: null,
                        Consumer: null,
                        _defaultValue: null,
                        _globalName: null
                    }).Provider = {
                        $$typeof: s,
                        _context: e
                    }, e.Consumer = e
                }, t.createElement = k, t.createFactory = function(e) {
                    var t = k.bind(null, e);
                    return t.type = e, t
                }, t.createRef = function() {
                    return {
                        current: null
                    }
                }, t.forwardRef = function(e) {
                    return {
                        $$typeof: u,
                        render: e
                    }
                }, t.isValidElement = T, t.lazy = function(e) {
                    return {
                        $$typeof: d,
                        _payload: {
                            _status: -1,
                            _result: e
                        },
                        _init: R
                    }
                }, t.memo = function(e, t) {
                    return {
                        $$typeof: h,
                        type: e,
                        compare: void 0 === t ? null : t
                    }
                }, t.startTransition = function(e) {
                    var t = D.transition;
                    D.transition = {};
                    try {
                        e()
                    } finally {
                        D.transition = t
                    }
                }, t.unstable_act = function() {
                    throw Error("act(...) is not supported in production builds of React.")
                }, t.useCallback = function(e, t) {
                    return M.current.useCallback(e, t)
                }, t.useContext = function(e) {
                    return M.current.useContext(e)
                }, t.useDebugValue = function() {}, t.useDeferredValue = function(e) {
                    return M.current.useDeferredValue(e)
                }, t.useEffect = function(e, t) {
                    return M.current.useEffect(e, t)
                }, t.useId = function() {
                    return M.current.useId()
                }, t.useImperativeHandle = function(e, t, n) {
                    return M.current.useImperativeHandle(e, t, n)
                }, t.useInsertionEffect = function(e, t) {
                    return M.current.useInsertionEffect(e, t)
                }, t.useLayoutEffect = function(e, t) {
                    return M.current.useLayoutEffect(e, t)
                }, t.useMemo = function(e, t) {
                    return M.current.useMemo(e, t)
                }, t.useReducer = function(e, t, n) {
                    return M.current.useReducer(e, t, n)
                }, t.useRef = function(e) {
                    return M.current.useRef(e)
                }, t.useState = function(e) {
                    return M.current.useState(e)
                }, t.useSyncExternalStore = function(e, t, n) {
                    return M.current.useSyncExternalStore(e, t, n)
                }, t.useTransition = function() {
                    return M.current.useTransition()
                }, t.version = "18.2.0"
            },
            466: (e, t, n) => {
                "use strict";
                e.exports = n(751)
            },
            794: (e, t) => {
                "use strict";

                function n(e, t) {
                    var n = e.length;
                    e.push(t);
                    e: for (; 0 < n;) {
                        var r = n - 1 >>> 1,
                            o = e[r];
                        if (!(0 < i(o, t))) break e;
                        e[r] = t, e[n] = o, n = r
                    }
                }

                function r(e) {
                    return 0 === e.length ? null : e[0]
                }

                function o(e) {
                    if (0 === e.length) return null;
                    var t = e[0],
                        n = e.pop();
                    if (n !== t) {
                        e[0] = n;
                        e: for (var r = 0, o = e.length, a = o >>> 1; r < a;) {
                            var s = 2 * (r + 1) - 1,
                                l = e[s],
                                u = s + 1,
                                c = e[u];
                            if (0 > i(l, n)) u < o && 0 > i(c, l) ? (e[r] = c, e[u] = n, r = u) : (e[r] = l, e[s] = n, r = s);
                            else {
                                if (!(u < o && 0 > i(c, n))) break e;
                                e[r] = c, e[u] = n, r = u
                            }
                        }
                    }
                    return t
                }

                function i(e, t) {
                    var n = e.sortIndex - t.sortIndex;
                    return 0 !== n ? n : e.id - t.id
                }
                if ("object" == typeof performance && "function" == typeof performance.now) {
                    var a = performance;
                    t.unstable_now = function() {
                        return a.now()
                    }
                } else {
                    var s = Date,
                        l = s.now();
                    t.unstable_now = function() {
                        return s.now() - l
                    }
                }
                var u = [],
                    c = [],
                    h = 1,
                    d = null,
                    f = 3,
                    p = !1,
                    m = !1,
                    v = !1,
                    g = "function" == typeof setTimeout ? setTimeout : null,
                    y = "function" == typeof clearTimeout ? clearTimeout : null,
                    b = "undefined" != typeof setImmediate ? setImmediate : null;

                function w(e) {
                    for (var t = r(c); null !== t;) {
                        if (null === t.callback) o(c);
                        else {
                            if (!(t.startTime <= e)) break;
                            o(c), t.sortIndex = t.expirationTime, n(u, t)
                        }
                        t = r(c)
                    }
                }

                function _(e) {
                    if (v = !1, w(e), !m)
                        if (null !== r(u)) m = !0, D(x);
                        else {
                            var t = r(c);
                            null !== t && N(_, t.startTime - e)
                        }
                }

                function x(e, n) {
                    m = !1, v && (v = !1, y(T), T = -1), p = !0;
                    var i = f;
                    try {
                        for (w(n), d = r(u); null !== d && (!(d.expirationTime > n) || e && !A());) {
                            var a = d.callback;
                            if ("function" == typeof a) {
                                d.callback = null, f = d.priorityLevel;
                                var s = a(d.expirationTime <= n);
                                n = t.unstable_now(), "function" == typeof s ? d.callback = s : d === r(u) && o(u), w(n)
                            } else o(u);
                            d = r(u)
                        }
                        if (null !== d) var l = !0;
                        else {
                            var h = r(c);
                            null !== h && N(_, h.startTime - n), l = !1
                        }
                        return l
                    } finally {
                        d = null, f = i, p = !1
                    }
                }
                "undefined" != typeof navigator && void 0 !== navigator.scheduling && void 0 !== navigator.scheduling.isInputPending && navigator.scheduling.isInputPending.bind(navigator.scheduling);
                var E, S = !1,
                    k = null,
                    T = -1,
                    C = 5,
                    O = -1;

                function A() {
                    return !(t.unstable_now() - O < C)
                }

                function P() {
                    if (null !== k) {
                        var e = t.unstable_now();
                        O = e;
                        var n = !0;
                        try {
                            n = k(!0, e)
                        } finally {
                            n ? E() : (S = !1, k = null)
                        }
                    } else S = !1
                }
                if ("function" == typeof b) E = function() {
                    b(P)
                };
                else if ("undefined" != typeof MessageChannel) {
                    var R = new MessageChannel,
                        M = R.port2;
                    R.port1.onmessage = P, E = function() {
                        M.postMessage(null)
                    }
                } else E = function() {
                    g(P, 0)
                };

                function D(e) {
                    k = e, S || (S = !0, E())
                }

                function N(e, n) {
                    T = g((function() {
                        e(t.unstable_now())
                    }), n)
                }
                t.unstable_IdlePriority = 5, t.unstable_ImmediatePriority = 1, t.unstable_LowPriority = 4, t.unstable_NormalPriority = 3, t.unstable_Profiling = null, t.unstable_UserBlockingPriority = 2, t.unstable_cancelCallback = function(e) {
                    e.callback = null
                }, t.unstable_continueExecution = function() {
                    m || p || (m = !0, D(x))
                }, t.unstable_forceFrameRate = function(e) {
                    0 > e || 125 < e ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported") : C = 0 < e ? Math.floor(1e3 / e) : 5
                }, t.unstable_getCurrentPriorityLevel = function() {
                    return f
                }, t.unstable_getFirstCallbackNode = function() {
                    return r(u)
                }, t.unstable_next = function(e) {
                    switch (f) {
                        case 1:
                        case 2:
                        case 3:
                            var t = 3;
                            break;
                        default:
                            t = f
                    }
                    var n = f;
                    f = t;
                    try {
                        return e()
                    } finally {
                        f = n
                    }
                }, t.unstable_pauseExecution = function() {}, t.unstable_requestPaint = function() {}, t.unstable_runWithPriority = function(e, t) {
                    switch (e) {
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                            break;
                        default:
                            e = 3
                    }
                    var n = f;
                    f = e;
                    try {
                        return t()
                    } finally {
                        f = n
                    }
                }, t.unstable_scheduleCallback = function(e, o, i) {
                    var a = t.unstable_now();
                    switch (i = "object" == typeof i && null !== i && "number" == typeof(i = i.delay) && 0 < i ? a + i : a, e) {
                        case 1:
                            var s = -1;
                            break;
                        case 2:
                            s = 250;
                            break;
                        case 5:
                            s = 1073741823;
                            break;
                        case 4:
                            s = 1e4;
                            break;
                        default:
                            s = 5e3
                    }
                    return e = {
                        id: h++,
                        callback: o,
                        priorityLevel: e,
                        startTime: i,
                        expirationTime: s = i + s,
                        sortIndex: -1
                    }, i > a ? (e.sortIndex = i, n(c, e), null === r(u) && e === r(c) && (v ? (y(T), T = -1) : v = !0, N(_, i - a))) : (e.sortIndex = s, n(u, e), m || p || (m = !0, D(x))), e
                }, t.unstable_shouldYield = A, t.unstable_wrapCallback = function(e) {
                    var t = f;
                    return function() {
                        var n = f;
                        f = t;
                        try {
                            return e.apply(this, arguments)
                        } finally {
                            f = n
                        }
                    }
                }
            },
            767: (e, t, n) => {
                "use strict";
                e.exports = n(794)
            },
            635: e => {
                e.exports = function(e, t) {
                    (null == t || t > e.length) && (t = e.length);
                    for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
                    return r
                }, e.exports.__esModule = !0, e.exports.default = e.exports
            },
            206: e => {
                e.exports = function(e) {
                    if (Array.isArray(e)) return e
                }, e.exports.__esModule = !0, e.exports.default = e.exports
            },
            296: e => {
                e.exports = function(e, t) {
                    if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                }, e.exports.__esModule = !0, e.exports.default = e.exports
            },
            0: (e, t, n) => {
                var r = n(616);

                function o(e, t) {
                    for (var n = 0; n < t.length; n++) {
                        var o = t[n];
                        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, r(o.key), o)
                    }
                }
                e.exports = function(e, t, n) {
                    return t && o(e.prototype, t), n && o(e, n), Object.defineProperty(e, "prototype", {
                        writable: !1
                    }), e
                }, e.exports.__esModule = !0, e.exports.default = e.exports
            },
            735: e => {
                e.exports = function(e, t) {
                    var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                    if (null != n) {
                        var r, o, i, a, s = [],
                            l = !0,
                            u = !1;
                        try {
                            if (i = (n = n.call(e)).next, 0 === t) {
                                if (Object(n) !== n) return;
                                l = !1
                            } else
                                for (; !(l = (r = i.call(n)).done) && (s.push(r.value), s.length !== t); l = !0);
                        } catch (e) {
                            u = !0, o = e
                        } finally {
                            try {
                                if (!l && null != n.return && (a = n.return(), Object(a) !== a)) return
                            } finally {
                                if (u) throw o
                            }
                        }
                        return s
                    }
                }, e.exports.__esModule = !0, e.exports.default = e.exports
            },
            133: e => {
                e.exports = function() {
                    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                }, e.exports.__esModule = !0, e.exports.default = e.exports
            },
            253: (e, t, n) => {
                var r = n(206),
                    o = n(735),
                    i = n(248),
                    a = n(133);
                e.exports = function(e, t) {
                    return r(e) || o(e, t) || i(e, t) || a()
                }, e.exports.__esModule = !0, e.exports.default = e.exports
            },
            772: (e, t, n) => {
                var r = n(435).default;
                e.exports = function(e, t) {
                    if ("object" !== r(e) || null === e) return e;
                    var n = e[Symbol.toPrimitive];
                    if (void 0 !== n) {
                        var o = n.call(e, t || "default");
                        if ("object" !== r(o)) return o;
                        throw new TypeError("@@toPrimitive must return a primitive value.")
                    }
                    return ("string" === t ? String : Number)(e)
                }, e.exports.__esModule = !0, e.exports.default = e.exports
            },
            616: (e, t, n) => {
                var r = n(435).default,
                    o = n(772);
                e.exports = function(e) {
                    var t = o(e, "string");
                    return "symbol" === r(t) ? t : String(t)
                }, e.exports.__esModule = !0, e.exports.default = e.exports
            },
            435: e => {
                function t(n) {
                    return e.exports = t = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                        return typeof e
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
                    }, e.exports.__esModule = !0, e.exports.default = e.exports, t(n)
                }
                e.exports = t, e.exports.__esModule = !0, e.exports.default = e.exports
            },
            248: (e, t, n) => {
                var r = n(635);
                e.exports = function(e, t) {
                    if (e) {
                        if ("string" == typeof e) return r(e, t);
                        var n = Object.prototype.toString.call(e).slice(8, -1);
                        return "Object" === n && e.constructor && (n = e.constructor.name), "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? r(e, t) : void 0
                    }
                }, e.exports.__esModule = !0, e.exports.default = e.exports
            }
        },
        r = {};

    function o(e) {
        var t = r[e];
        if (void 0 !== t) return t.exports;
        var i = r[e] = {
            exports: {}
        };
        return n[e].call(i.exports, i, i.exports, o), i.exports
    }
    o.m = n, o.n = e => {
        var t = e && e.__esModule ? () => e.default : () => e;
        return o.d(t, {
            a: t
        }), t
    }, t = Object.getPrototypeOf ? e => Object.getPrototypeOf(e) : e => e.__proto__, o.t = function(n, r) {
        if (1 & r && (n = this(n)), 8 & r) return n;
        if ("object" == typeof n && n) {
            if (4 & r && n.__esModule) return n;
            if (16 & r && "function" == typeof n.then) return n
        }
        var i = Object.create(null);
        o.r(i);
        var a = {};
        e = e || [null, t({}), t([]), t(t)];
        for (var s = 2 & r && n;
            "object" == typeof s && !~e.indexOf(s); s = t(s)) Object.getOwnPropertyNames(s).forEach((e => a[e] = () => n[e]));
        return a.default = () => n, o.d(i, a), i
    }, o.d = (e, t) => {
        for (var n in t) o.o(t, n) && !o.o(e, n) && Object.defineProperty(e, n, {
            enumerable: !0,
            get: t[n]
        })
    }, o.u = e => e + "." + {
        3: "583b09f9b7cb76122e26",
        125: "7c0a8e90161b6e2823ca",
        538: "7ba5d56b24a2c90f1613",
        564: "af33c759effd6a2bf2a2"
    } [e] + ".js", o.g = function() {
        if ("object" == typeof globalThis) return globalThis;
        try {
            return this || new Function("return this")()
        } catch (e) {
            if ("object" == typeof window) return window
        }
    }(), o.o = (e, t) => Object.prototype.hasOwnProperty.call(e, t), o.r = e => {
        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
            value: "Module"
        }), Object.defineProperty(e, "__esModule", {
            value: !0
        })
    }, o.p = "/", o.b = document.baseURI || self.location.href, (() => {
        "use strict";
        var e = o(466),
            t = o.t(e, 2);
        const n = "14.7.77";
        var r = o(369);
        const i = new WeakSet,
            a = new WeakMap,
            s = new WeakMap,
            l = new WeakMap,
            u = new WeakMap,
            c = new WeakMap,
            h = new WeakMap,
            d = new WeakMap,
            f = new WeakMap,
            p = new WeakMap,
            m = {
                construct: () => m
            },
            v = /^import(?:(?:[\s]+[\w]+|(?:[\s]+[\w]+[\s]*,)?[\s]*\{[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?(?:[\s]*,[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?)*[\s]*}|(?:[\s]+[\w]+[\s]*,)?[\s]*\*[\s]+as[\s]+[\w]+)[\s]+from)?(?:[\s]*)("([^"\\]|\\.)+"|'([^'\\]|\\.)+')(?:[\s]*);?/,
            g = (e, t) => {
                const n = [];
                let r = e.replace(/^[\s]+/, ""),
                    o = r.match(v);
                for (; null !== o;) {
                    const e = o[1].slice(1, -1),
                        i = o[0].replace(/([\s]+)?;?$/, "").replace(e, new URL(e, t).toString());
                    n.push(i), r = r.slice(o[0].length).replace(/^[\s]+/, ""), o = r.match(v)
                }
                return [n.join(";"), r]
            },
            y = e => {
                if (void 0 !== e && !Array.isArray(e)) throw new TypeError("The parameterDescriptors property of given value for processorCtor is not an array.")
            },
            b = e => {
                if (!(e => {
                        try {
                            new new Proxy(e, m)
                        } catch {
                            return !1
                        }
                        return !0
                    })(e)) throw new TypeError("The given value for processorCtor should be a constructor.");
                if (null === e.prototype || "object" != typeof e.prototype) throw new TypeError("The given value for processorCtor should have a prototype.")
            },
            w = (e, t) => {
                const n = e.get(t);
                if (void 0 === n) throw new Error("A value with the given key could not be found.");
                return n
            },
            _ = (e, t) => {
                const n = Array.from(e).filter(t);
                if (n.length > 1) throw Error("More than one element was found.");
                if (0 === n.length) throw Error("No element was found.");
                const [r] = n;
                return e.delete(r), r
            },
            x = (e, t, n, r) => {
                const o = w(e, t),
                    i = _(o, (e => e[0] === n && e[1] === r));
                return 0 === o.size && e.delete(t), i
            },
            E = e => w(h, e),
            S = e => {
                if (i.has(e)) throw new Error("The AudioNode is already stored.");
                i.add(e), E(e).forEach((e => e(!0)))
            },
            k = e => "port" in e,
            T = e => {
                if (!i.has(e)) throw new Error("The AudioNode is not stored.");
                i.delete(e), E(e).forEach((e => e(!1)))
            },
            C = (e, t) => {
                !k(e) && t.every((e => 0 === e.size)) && T(e)
            },
            O = {
                channelCount: 2,
                channelCountMode: "max",
                channelInterpretation: "speakers",
                fftSize: 2048,
                maxDecibels: -30,
                minDecibels: -100,
                smoothingTimeConstant: .8
            },
            A = (e, t) => e.context === t,
            P = e => {
                try {
                    e.copyToChannel(new Float32Array(1), 0, -1)
                } catch {
                    return !1
                }
                return !0
            },
            R = () => new DOMException("", "IndexSizeError"),
            M = e => {
                var t;
                e.getChannelData = (t = e.getChannelData, n => {
                    try {
                        return t.call(e, n)
                    } catch (e) {
                        if (12 === e.code) throw R();
                        throw e
                    }
                })
            },
            D = {
                numberOfChannels: 1
            },
            N = -34028234663852886e22,
            I = -N,
            L = e => i.has(e),
            q = {
                buffer: null,
                channelCount: 2,
                channelCountMode: "max",
                channelInterpretation: "speakers",
                loop: !1,
                loopEnd: 0,
                loopStart: 0,
                playbackRate: 1
            },
            j = e => w(a, e),
            F = e => w(l, e),
            V = (e, t) => {
                const {
                    activeInputs: n
                } = j(e);
                n.forEach((n => n.forEach((([n]) => {
                    t.includes(e) || V(n, [...t, e])
                }))));
                const r = (e => "playbackRate" in e)(e) ? [e.playbackRate] : k(e) ? Array.from(e.parameters.values()) : (e => "frequency" in e && "gain" in e)(e) ? [e.Q, e.detune, e.frequency, e.gain] : (e => "offset" in e)(e) ? [e.offset] : (e => !("frequency" in e) && "gain" in e)(e) ? [e.gain] : (e => "detune" in e && "frequency" in e)(e) ? [e.detune, e.frequency] : (e => "pan" in e)(e) ? [e.pan] : [];
                for (const e of r) {
                    const n = F(e);
                    void 0 !== n && n.activeInputs.forEach((([e]) => V(e, t)))
                }
                L(e) && T(e)
            },
            B = e => {
                V(e.destination, [])
            },
            z = e => "context" in e,
            U = e => z(e[0]),
            W = (e, t, n, r) => {
                for (const t of e)
                    if (n(t)) {
                        if (r) return !1;
                        throw Error("The set contains at least one similar element.")
                    } return e.add(t), !0
            },
            H = (e, t, [n, r], o) => {
                W(e, [t, n, r], (e => e[0] === t && e[1] === n), o)
            },
            G = (e, [t, n, r], o) => {
                const i = e.get(t);
                void 0 === i ? e.set(t, new Set([
                    [n, r]
                ])) : W(i, [n, r], (e => e[0] === n), o)
            },
            Q = e => "inputs" in e,
            Y = (e, t, n, r) => {
                if (Q(t)) {
                    const o = t.inputs[r];
                    return e.connect(o, n, 0), [o, n, 0]
                }
                return e.connect(t, n, r), [t, n, r]
            },
            $ = (e, t, n) => {
                for (const r of e)
                    if (r[0] === t && r[1] === n) return e.delete(r), r;
                return null
            },
            Z = (e, t) => {
                if (!E(e).delete(t)) throw new Error("Missing the expected event listener.")
            },
            X = (e, t, n) => {
                const r = w(e, t),
                    o = _(r, (e => e[0] === n));
                return 0 === r.size && e.delete(t), o
            },
            K = (e, t, n, r) => {
                Q(t) ? e.disconnect(t.inputs[r], n, 0) : e.disconnect(t, n, r)
            },
            J = e => w(s, e),
            ee = e => w(u, e),
            te = e => d.has(e),
            ne = e => !i.has(e),
            re = (e, t) => new Promise((n => {
                if (null !== t) n(!0);
                else {
                    const t = e.createScriptProcessor(256, 1, 1),
                        r = e.createGain(),
                        o = e.createBuffer(1, 2, 44100),
                        i = o.getChannelData(0);
                    i[0] = 1, i[1] = 1;
                    const a = e.createBufferSource();
                    a.buffer = o, a.loop = !0, a.connect(t).connect(e.destination), a.connect(r), a.disconnect(r), t.onaudioprocess = r => {
                        const o = r.inputBuffer.getChannelData(0);
                        Array.prototype.some.call(o, (e => 1 === e)) ? n(!0) : n(!1), a.stop(), t.onaudioprocess = null, a.disconnect(t), t.disconnect(e.destination)
                    }, a.start()
                }
            })),
            oe = (e, t) => {
                const n = new Map;
                for (const t of e)
                    for (const e of t) {
                        const t = n.get(e);
                        n.set(e, void 0 === t ? 1 : t + 1)
                    }
                n.forEach(((e, n) => t(n, e)))
            },
            ie = e => "context" in e,
            ae = (e, t, n, r, o) => {
                const [i, a] = ((e, t, n, r) => {
                    const {
                        activeInputs: o,
                        passiveInputs: i
                    } = j(t), a = $(o[r], e, n);
                    return null === a ? [x(i, e, n, r)[2], !1] : [a[2], !0]
                })(e, n, r, o);
                if (null !== i && (Z(e, i), !a || t || te(e) || K(J(e), J(n), r, o)), L(n)) {
                    const {
                        activeInputs: e
                    } = j(n);
                    C(n, e)
                }
            },
            se = (e, t, n, r) => {
                const [o, i] = ((e, t, n) => {
                    const {
                        activeInputs: r,
                        passiveInputs: o
                    } = F(t), i = $(r, e, n);
                    return null === i ? [X(o, e, n)[1], !1] : [i[2], !0]
                })(e, n, r);
                null !== o && (Z(e, o), !i || t || te(e) || J(e).disconnect(ee(n), r))
            };
        class le {
            constructor(e) {
                this._map = new Map(e)
            }
            get size() {
                return this._map.size
            }
            entries() {
                return this._map.entries()
            }
            forEach(e, t = null) {
                return this._map.forEach(((n, r) => e.call(t, n, r, this)))
            }
            get(e) {
                return this._map.get(e)
            }
            has(e) {
                return this._map.has(e)
            }
            keys() {
                return this._map.keys()
            }
            values() {
                return this._map.values()
            }
        }
        const ue = {
            channelCount: 2,
            channelCountMode: "explicit",
            channelInterpretation: "speakers",
            numberOfInputs: 1,
            numberOfOutputs: 1,
            parameterData: {},
            processorOptions: {}
        };

        function ce(e, t, n, r, o) {
            if ("function" == typeof e.copyFromChannel) 0 === t[n].byteLength && (t[n] = new Float32Array(128)), e.copyFromChannel(t[n], r, o);
            else {
                const i = e.getChannelData(r);
                if (0 === t[n].byteLength) t[n] = i.slice(o, o + 128);
                else {
                    const e = new Float32Array(i.buffer, o * Float32Array.BYTES_PER_ELEMENT, 128);
                    t[n].set(e)
                }
            }
        }
        const he = (e, t, n, r, o) => {
                "function" == typeof e.copyToChannel ? 0 !== t[n].byteLength && e.copyToChannel(t[n], r, o) : 0 !== t[n].byteLength && e.getChannelData(r).set(t[n], o)
            },
            de = (e, t) => {
                const n = [];
                for (let r = 0; r < e; r += 1) {
                    const e = [],
                        o = "number" == typeof t ? t : t[r];
                    for (let t = 0; t < o; t += 1) e.push(new Float32Array(128));
                    n.push(e)
                }
                return n
            },
            fe = async (e, t, n, r, o, i, a) => {
                const s = null === t ? 128 * Math.ceil(e.context.length / 128) : t.length,
                    l = r.channelCount * r.numberOfInputs,
                    u = o.reduce(((e, t) => e + t), 0),
                    c = 0 === u ? null : n.createBuffer(u, s, n.sampleRate);
                if (void 0 === i) throw new Error("Missing the processor constructor.");
                const h = j(e),
                    d = await ((e, t) => {
                        const n = w(p, e),
                            r = J(t);
                        return w(n, r)
                    })(n, e),
                    f = de(r.numberOfInputs, r.channelCount),
                    m = de(r.numberOfOutputs, o),
                    v = Array.from(e.parameters.keys()).reduce(((e, t) => ({
                        ...e,
                        [t]: new Float32Array(128)
                    })), {});
                for (let u = 0; u < s; u += 128) {
                    if (r.numberOfInputs > 0 && null !== t)
                        for (let e = 0; e < r.numberOfInputs; e += 1)
                            for (let n = 0; n < r.channelCount; n += 1) ce(t, f[e], n, n, u);
                    void 0 !== i.parameterDescriptors && null !== t && i.parameterDescriptors.forEach((({
                        name: e
                    }, n) => {
                        ce(t, v, e, l + n, u)
                    }));
                    for (let e = 0; e < r.numberOfInputs; e += 1)
                        for (let t = 0; t < o[e]; t += 1) 0 === m[e][t].byteLength && (m[e][t] = new Float32Array(128));
                    try {
                        const e = f.map(((e, t) => 0 === h.activeInputs[t].size ? [] : e)),
                            t = a(u / n.sampleRate, n.sampleRate, (() => d.process(e, m, v)));
                        if (null !== c)
                            for (let e = 0, t = 0; e < r.numberOfOutputs; e += 1) {
                                for (let n = 0; n < o[e]; n += 1) he(c, m[e], n, t + n, u);
                                t += o[e]
                            }
                        if (!t) break
                    } catch (t) {
                        e.dispatchEvent(new ErrorEvent("processorerror", {
                            colno: t.colno,
                            filename: t.filename,
                            lineno: t.lineno,
                            message: t.message
                        }));
                        break
                    }
                }
                return c
            }, pe = {
                Q: 1,
                channelCount: 2,
                channelCountMode: "max",
                channelInterpretation: "speakers",
                detune: 0,
                frequency: 350,
                gain: 0,
                type: "lowpass"
            }, me = {
                channelCount: 1,
                channelCountMode: "explicit",
                channelInterpretation: "speakers",
                numberOfInputs: 6
            }, ve = {
                channelCount: 6,
                channelCountMode: "explicit",
                channelInterpretation: "discrete",
                numberOfOutputs: 6
            }, ge = {
                channelCount: 2,
                channelCountMode: "max",
                channelInterpretation: "speakers",
                offset: 1
            }, ye = {
                buffer: null,
                channelCount: 2,
                channelCountMode: "clamped-max",
                channelInterpretation: "speakers",
                disableNormalization: !1
            }, be = e => {
                const {
                    port1: t,
                    port2: n
                } = new MessageChannel;
                return new Promise((r => {
                    const o = () => {
                        n.onmessage = null, t.close(), n.close(), r()
                    };
                    n.onmessage = () => o();
                    try {
                        t.postMessage(e, [e])
                    } finally {
                        o()
                    }
                }))
            }, we = {
                channelCount: 2,
                channelCountMode: "max",
                channelInterpretation: "speakers",
                delayTime: 0,
                maxDelayTime: 1
            }, _e = (e, t, n) => {
                const r = t[n];
                if (void 0 === r) throw e();
                return r
            }, xe = {
                attack: .003,
                channelCount: 2,
                channelCountMode: "clamped-max",
                channelInterpretation: "speakers",
                knee: 30,
                ratio: 12,
                release: .25,
                threshold: -24
            }, Ee = {
                channelCount: 2,
                channelCountMode: "max",
                channelInterpretation: "speakers",
                gain: 1
            }, Se = () => new DOMException("", "InvalidStateError"), ke = () => new DOMException("", "InvalidAccessError"), Te = {
                channelCount: 2,
                channelCountMode: "max",
                channelInterpretation: "speakers"
            }, Ce = (e, t, n, r, o, i, a, s, l, u, c) => {
                const h = u.length;
                let d = s;
                for (let s = 0; s < h; s += 1) {
                    let h = n[0] * u[s];
                    for (let t = 1; t < o; t += 1) {
                        const r = d - t & l - 1;
                        h += n[t] * i[r], h -= e[t] * a[r]
                    }
                    for (let e = o; e < r; e += 1) h += n[e] * i[d - e & l - 1];
                    for (let n = o; n < t; n += 1) h -= e[n] * a[d - n & l - 1];
                    i[d] = u[s], a[d] = h, d = d + 1 & l - 1, c[s] = h
                }
                return d
            }, Oe = {
                channelCount: 2,
                channelCountMode: "explicit",
                channelInterpretation: "speakers"
            }, Ae = e => {
                const t = new Uint32Array([1179011410, 40, 1163280727, 544501094, 16, 131073, 44100, 176400, 1048580, 1635017060, 4, 0]);
                try {
                    const n = e.decodeAudioData(t.buffer, (() => {}));
                    return void 0 !== n && (n.catch((() => {})), !0)
                } catch {}
                return !1
            }, Pe = (e, t, n) => {
                const r = t[n];
                void 0 !== r && r !== e[n] && (e[n] = r)
            }, Re = (e, t) => {
                Pe(e, t, "channelCount"), Pe(e, t, "channelCountMode"), Pe(e, t, "channelInterpretation")
            }, Me = e => "function" == typeof e.getFloatTimeDomainData, De = (e, t, n) => {
                const r = t[n];
                void 0 !== r && r !== e[n].value && (e[n].value = r)
            }, Ne = e => {
                var t;
                e.start = (t = e.start, (n = 0, r = 0, o) => {
                    if ("number" == typeof o && o < 0 || r < 0 || n < 0) throw new RangeError("The parameters can't be negative.");
                    t.call(e, n, r, o)
                })
            }, Ie = e => {
                var t;
                e.stop = (t = e.stop, (n = 0) => {
                    if (n < 0) throw new RangeError("The parameter can't be negative.");
                    t.call(e, n)
                })
            }, Le = (e, t) => null === e ? 512 : Math.max(512, Math.min(16384, Math.pow(2, Math.round(Math.log2(e * t))))), qe = (e, t) => {
                const n = e.createBiquadFilter();
                return Re(n, t), De(n, t, "Q"), De(n, t, "detune"), De(n, t, "frequency"), De(n, t, "gain"), Pe(n, t, "type"), n
            }, je = (e, t) => {
                const n = e.createChannelSplitter(t.numberOfOutputs);
                return Re(n, t), (e => {
                    const t = e.numberOfOutputs;
                    Object.defineProperty(e, "channelCount", {
                        get: () => t,
                        set: e => {
                            if (e !== t) throw Se()
                        }
                    }), Object.defineProperty(e, "channelCountMode", {
                        get: () => "explicit",
                        set: e => {
                            if ("explicit" !== e) throw Se()
                        }
                    }), Object.defineProperty(e, "channelInterpretation", {
                        get: () => "discrete",
                        set: e => {
                            if ("discrete" !== e) throw Se()
                        }
                    })
                })(n), n
            }, Fe = (e, t) => (e.connect = t.connect.bind(t), e.disconnect = t.disconnect.bind(t), e), Ve = (e, t) => {
                const n = e.createDelay(t.maxDelayTime);
                return Re(n, t), De(n, t, "delayTime"), n
            }, Be = (e, t) => {
                const n = e.createGain();
                return Re(n, t), De(n, t, "gain"), n
            };

        function ze(e, t) {
            const n = t[0] * t[0] + t[1] * t[1];
            return [(e[0] * t[0] + e[1] * t[1]) / n, (e[1] * t[0] - e[0] * t[1]) / n]
        }

        function Ue(e, t) {
            let n = [0, 0];
            for (let i = e.length - 1; i >= 0; i -= 1) o = t, n = [(r = n)[0] * o[0] - r[1] * o[1], r[0] * o[1] + r[1] * o[0]], n[0] += e[i];
            var r, o;
            return n
        }
        const We = (e, t, n, r) => e.createScriptProcessor(t, n, r),
            He = () => new DOMException("", "NotSupportedError"),
            Ge = {
                numberOfChannels: 1
            },
            Qe = {
                channelCount: 2,
                channelCountMode: "max",
                channelInterpretation: "speakers",
                detune: 0,
                frequency: 440,
                periodicWave: void 0,
                type: "sine"
            },
            Ye = {
                channelCount: 2,
                channelCountMode: "clamped-max",
                channelInterpretation: "speakers",
                coneInnerAngle: 360,
                coneOuterAngle: 360,
                coneOuterGain: 0,
                distanceModel: "inverse",
                maxDistance: 1e4,
                orientationX: 1,
                orientationY: 0,
                orientationZ: 0,
                panningModel: "equalpower",
                positionX: 0,
                positionY: 0,
                positionZ: 0,
                refDistance: 1,
                rolloffFactor: 1
            },
            $e = {
                disableNormalization: !1
            },
            Ze = {
                channelCount: 2,
                channelCountMode: "explicit",
                channelInterpretation: "speakers",
                pan: 0
            },
            Xe = {
                channelCount: 2,
                channelCountMode: "max",
                channelInterpretation: "speakers",
                curve: null,
                oversample: "none"
            },
            Ke = (e, t, n) => void 0 === e.copyFromChannel ? e.getChannelData(n)[0] : (e.copyFromChannel(t, n), t[0]),
            Je = e => {
                if (null === e) return !1;
                const t = e.length;
                return t % 2 != 0 ? 0 !== e[Math.floor(t / 2)] : e[t / 2 - 1] + e[t / 2] !== 0
            },
            et = (e, t, n, r) => {
                let o = e;
                for (; !o.hasOwnProperty(t);) o = Object.getPrototypeOf(o);
                const {
                    get: i,
                    set: a
                } = Object.getOwnPropertyDescriptor(o, t);
                Object.defineProperty(e, t, {
                    get: n(i),
                    set: r(a)
                })
            },
            tt = (e, t, n) => {
                try {
                    e.setValueAtTime(t, n)
                } catch (r) {
                    if (9 !== r.code) throw r;
                    tt(e, t, n + 1e-7)
                }
            },
            nt = e => {
                const t = e.createOscillator();
                try {
                    t.start(-1)
                } catch (e) {
                    return e instanceof RangeError
                }
                return !1
            },
            rt = e => {
                const t = e.createBuffer(1, 1, 44100),
                    n = e.createBufferSource();
                n.buffer = t, n.start(), n.stop();
                try {
                    return n.stop(), !0
                } catch {
                    return !1
                }
            },
            ot = e => {
                const t = e.createOscillator();
                try {
                    t.stop(-1)
                } catch (e) {
                    return e instanceof RangeError
                }
                return !1
            },
            it = (e, t) => {
                const n = t.createGain();
                e.connect(n);
                const r = (t => () => {
                    t.call(e, n), e.removeEventListener("ended", r)
                })(e.disconnect);
                e.addEventListener("ended", r), Fe(e, n), e.stop = (t => {
                    let r = !1;
                    return (o = 0) => {
                        if (r) try {
                            t.call(e, o)
                        } catch {
                            n.gain.setValueAtTime(0, o)
                        } else t.call(e, o), r = !0
                    }
                })(e.stop)
            },
            at = (e, t) => n => {
                const r = {
                    value: e
                };
                return Object.defineProperties(n, {
                    currentTarget: r,
                    target: r
                }), "function" == typeof t ? t.call(e, n) : t.handleEvent.call(e, n)
            },
            st = (e => (t, n, [r, o, i], a) => {
                e(t[o], [n, r, i], (e => e[0] === n && e[1] === r), a)
            })(W),
            lt = (e => (t, n, [r, o, i], a) => {
                const s = t.get(r);
                void 0 === s ? t.set(r, new Set([
                    [o, n, i]
                ])) : e(s, [o, n, i], (e => e[0] === o && e[1] === n), a)
            })(W),
            ut = (e => (t, n, r, o) => e(t[o], (e => e[0] === n && e[1] === r)))(_),
            ct = new WeakMap,
            ht = (e => t => {
                var n;
                return null !== (n = e.get(t)) && void 0 !== n ? n : 0
            })(ct),
            dt = (ft = new Map, pt = new WeakMap, (e, t) => {
                const n = pt.get(e);
                if (void 0 !== n) return n;
                const r = ft.get(e);
                if (void 0 !== r) return r;
                try {
                    const n = t();
                    return n instanceof Promise ? (ft.set(e, n), n.catch((() => !1)).then((t => (ft.delete(e), pt.set(e, t), t)))) : (pt.set(e, n), n)
                } catch {
                    return pt.set(e, !1), !1
                }
            });
        var ft, pt;
        const mt = "undefined" == typeof window ? null : window,
            vt = ((e, t) => (n, r) => {
                const o = n.createAnalyser();
                if (Re(o, r), !(r.maxDecibels > r.minDecibels)) throw t();
                return Pe(o, r, "fftSize"), Pe(o, r, "maxDecibels"), Pe(o, r, "minDecibels"), Pe(o, r, "smoothingTimeConstant"), e(Me, (() => Me(o))) || (e => {
                    e.getFloatTimeDomainData = t => {
                        const n = new Uint8Array(t.length);
                        e.getByteTimeDomainData(n);
                        const r = Math.max(n.length, e.fftSize);
                        for (let e = 0; e < r; e += 1) t[e] = .0078125 * (n[e] - 128);
                        return t
                    }
                })(o), o
            })(dt, R),
            gt = (e => t => {
                const n = e(t);
                if (null === n.renderer) throw new Error("Missing the renderer of the given AudioNode in the audio graph.");
                return n.renderer
            })(j),
            yt = ((e, t, n) => async (r, o, i) => {
                const a = e(r);
                await Promise.all(a.activeInputs.map(((e, a) => Array.from(e).map((async ([e, s]) => {
                    const l = t(e),
                        u = await l.render(e, o),
                        c = r.context.destination;
                    n(e) || r === c && n(r) || u.connect(i, s, a)
                })))).reduce(((e, t) => [...e, ...t]), []))
            })(j, gt, te),
            bt = ((e, t, n) => () => {
                const r = new WeakMap;
                return {
                    render(o, i) {
                        const a = r.get(i);
                        return void 0 !== a ? Promise.resolve(a) : (async (o, i) => {
                            let a = t(o);
                            if (!A(a, i)) {
                                const t = {
                                    channelCount: a.channelCount,
                                    channelCountMode: a.channelCountMode,
                                    channelInterpretation: a.channelInterpretation,
                                    fftSize: a.fftSize,
                                    maxDecibels: a.maxDecibels,
                                    minDecibels: a.minDecibels,
                                    smoothingTimeConstant: a.smoothingTimeConstant
                                };
                                a = e(i, t)
                            }
                            return r.set(i, a), await n(o, i, a), a
                        })(o, i)
                    }
                }
            })(vt, J, yt),
            wt = (_t = c, e => {
                const t = _t.get(e);
                if (void 0 === t) throw Se();
                return t
            });
        var _t;
        const xt = (e => null === e ? null : e.hasOwnProperty("OfflineAudioContext") ? e.OfflineAudioContext : e.hasOwnProperty("webkitOfflineAudioContext") ? e.webkitOfflineAudioContext : null)(mt),
            Et = (e => t => null !== e && t instanceof e)(xt),
            St = new WeakMap,
            kt = (e => class {
                constructor(e) {
                    this._nativeEventTarget = e, this._listeners = new WeakMap
                }
                addEventListener(t, n, r) {
                    if (null !== n) {
                        let o = this._listeners.get(n);
                        void 0 === o && (o = e(this, n), "function" == typeof n && this._listeners.set(n, o)), this._nativeEventTarget.addEventListener(t, o, r)
                    }
                }
                dispatchEvent(e) {
                    return this._nativeEventTarget.dispatchEvent(e)
                }
                removeEventListener(e, t, n) {
                    const r = null === t ? void 0 : this._listeners.get(t);
                    this._nativeEventTarget.removeEventListener(e, void 0 === r ? null : r, n)
                }
            })(at),
            Tt = (e => null === e ? null : e.hasOwnProperty("AudioContext") ? e.AudioContext : e.hasOwnProperty("webkitAudioContext") ? e.webkitAudioContext : null)(mt),
            Ct = (e => t => null !== e && t instanceof e)(Tt),
            Ot = (e => t => null !== e && "function" == typeof e.AudioNode && t instanceof e.AudioNode)(mt),
            At = (e => t => null !== e && "function" == typeof e.AudioParam && t instanceof e.AudioParam)(mt),
            Pt = (e => null === e ? null : e.hasOwnProperty("AudioWorkletNode") ? e.AudioWorkletNode : null)(mt),
            Rt = ((e, t, n, r, o, i, a, l, u, c, d, f, p, m, v, g) => class extends c {
                constructor(t, r, o, i) {
                    super(o), this._context = t, this._nativeAudioNode = o;
                    const a = d(t);
                    f(a) && !0 !== n(re, (() => re(a, g))) && (e => {
                        const t = new Map;
                        var n;
                        e.connect = (n = e.connect.bind(e), (e, r = 0, o = 0) => {
                            const i = ie(e) ? n(e, r, o) : n(e, r),
                                a = t.get(e);
                            return void 0 === a ? t.set(e, [{
                                input: o,
                                output: r
                            }]) : a.every((e => e.input !== o || e.output !== r)) && a.push({
                                input: o,
                                output: r
                            }), i
                        }), e.disconnect = (n => (r, o, i) => {
                            if (n.apply(e), void 0 === r) t.clear();
                            else if ("number" == typeof r)
                                for (const [e, n] of t) {
                                    const o = n.filter((e => e.output !== r));
                                    0 === o.length ? t.delete(e) : t.set(e, o)
                                } else if (t.has(r))
                                    if (void 0 === o) t.delete(r);
                                    else {
                                        const e = t.get(r);
                                        if (void 0 !== e) {
                                            const n = e.filter((e => e.output !== o && (e.input !== i || void 0 === i)));
                                            0 === n.length ? t.delete(r) : t.set(r, n)
                                        }
                                    } for (const [n, r] of t) r.forEach((t => {
                                ie(n) ? e.connect(n, t.output, t.input) : e.connect(n, t.output)
                            }))
                        })(e.disconnect)
                    })(o), s.set(this, o), h.set(this, new Set), "closed" !== t.state && r && S(this), e(this, i, o)
                }
                get channelCount() {
                    return this._nativeAudioNode.channelCount
                }
                set channelCount(e) {
                    this._nativeAudioNode.channelCount = e
                }
                get channelCountMode() {
                    return this._nativeAudioNode.channelCountMode
                }
                set channelCountMode(e) {
                    this._nativeAudioNode.channelCountMode = e
                }
                get channelInterpretation() {
                    return this._nativeAudioNode.channelInterpretation
                }
                set channelInterpretation(e) {
                    this._nativeAudioNode.channelInterpretation = e
                }
                get context() {
                    return this._context
                }
                get numberOfInputs() {
                    return this._nativeAudioNode.numberOfInputs
                }
                get numberOfOutputs() {
                    return this._nativeAudioNode.numberOfOutputs
                }
                connect(e, n = 0, s = 0) {
                    if (n < 0 || n >= this._nativeAudioNode.numberOfOutputs) throw o();
                    const l = d(this._context),
                        c = v(l);
                    if (p(e) || m(e)) throw i();
                    if (z(e)) {
                        const o = J(e);
                        try {
                            const t = Y(this._nativeAudioNode, o, n, s),
                                r = ne(this);
                            (c || r) && this._nativeAudioNode.disconnect(...t), "closed" !== this.context.state && !r && ne(e) && S(e)
                        } catch (e) {
                            if (12 === e.code) throw i();
                            throw e
                        }
                        if (t(this, e, n, s, c)) {
                            const t = u([this], e);
                            oe(t, r(c))
                        }
                        return e
                    }
                    const h = ee(e);
                    if ("playbackRate" === h.name && 1024 === h.maxValue) throw a();
                    try {
                        this._nativeAudioNode.connect(h, n), (c || ne(this)) && this._nativeAudioNode.disconnect(h, n)
                    } catch (e) {
                        if (12 === e.code) throw i();
                        throw e
                    }
                    if (((e, t, n, r) => {
                            const {
                                activeInputs: o,
                                passiveInputs: i
                            } = F(t), {
                                outputs: a
                            } = j(e), s = E(e), l = a => {
                                const s = J(e),
                                    l = ee(t);
                                if (a) {
                                    const t = X(i, e, n);
                                    H(o, e, t, !1), r || te(e) || s.connect(l, n)
                                } else {
                                    const t = ((e, t, n) => _(e, (e => e[0] === t && e[1] === n)))(o, e, n);
                                    G(i, t, !1), r || te(e) || s.disconnect(l, n)
                                }
                            };
                            return !!W(a, [t, n], (e => e[0] === t && e[1] === n), !0) && (s.add(l), L(e) ? H(o, e, [n, l], !0) : G(i, [e, n, l], !0), !0)
                        })(this, e, n, c)) {
                        const t = u([this], e);
                        oe(t, r(c))
                    }
                }
                disconnect(e, t, n) {
                    let r;
                    const a = d(this._context),
                        s = v(a);
                    if (void 0 === e) r = ((e, t) => {
                        const n = j(e),
                            r = [];
                        for (const o of n.outputs) U(o) ? ae(e, t, ...o) : se(e, t, ...o), r.push(o[0]);
                        return n.outputs.clear(), r
                    })(this, s);
                    else if ("number" == typeof e) {
                        if (e < 0 || e >= this.numberOfOutputs) throw o();
                        r = ((e, t, n) => {
                            const r = j(e),
                                o = [];
                            for (const i of r.outputs) i[1] === n && (U(i) ? ae(e, t, ...i) : se(e, t, ...i), o.push(i[0]), r.outputs.delete(i));
                            return o
                        })(this, s, e)
                    } else {
                        if (void 0 !== t && (t < 0 || t >= this.numberOfOutputs)) throw o();
                        if (z(e) && void 0 !== n && (n < 0 || n >= e.numberOfInputs)) throw o();
                        if (r = ((e, t, n, r, o) => {
                                const i = j(e);
                                return Array.from(i.outputs).filter((e => !(e[0] !== n || void 0 !== r && e[1] !== r || void 0 !== o && e[2] !== o))).map((n => (U(n) ? ae(e, t, ...n) : se(e, t, ...n), i.outputs.delete(n), n[0])))
                            })(this, s, e, t, n), 0 === r.length) throw i()
                    }
                    for (const e of r) {
                        const t = u([this], e);
                        oe(t, l)
                    }
                }
            })((Mt = a, (e, t, n) => {
                const r = [];
                for (let e = 0; e < n.numberOfInputs; e += 1) r.push(new Set);
                Mt.set(e, {
                    activeInputs: r,
                    outputs: new Set,
                    passiveInputs: new WeakMap,
                    renderer: t
                })
            }), ((e, t, n, r, o, i, a, s, l, u, c, h, d) => {
                const f = new WeakMap;
                return (p, m, v, g, y) => {
                    const {
                        activeInputs: b,
                        passiveInputs: w
                    } = i(m), {
                        outputs: _
                    } = i(p), E = s(p), k = i => {
                        const s = l(m),
                            u = l(p);
                        if (i) {
                            const t = x(w, p, v, g);
                            e(b, p, t, !1), y || h(p) || n(u, s, v, g), d(m) && S(m)
                        } else {
                            const e = r(b, p, v, g);
                            t(w, g, e, !1), y || h(p) || o(u, s, v, g);
                            const n = a(m);
                            if (0 === n) c(m) && C(m, b);
                            else {
                                const e = f.get(m);
                                void 0 !== e && clearTimeout(e), f.set(m, setTimeout((() => {
                                    c(m) && C(m, b)
                                }), 1e3 * n))
                            }
                        }
                    };
                    return !!u(_, [m, v, g], (e => e[0] === m && e[1] === v && e[2] === g), !0) && (E.add(k), c(p) ? e(b, p, [v, g, k], !0) : t(w, g, [p, v, k], !0), !0)
                }
            })(st, lt, Y, ut, K, j, ht, E, J, W, L, te, ne), dt, ((e, t, n, r, o, i) => a => (s, l) => {
                const u = e.get(s);
                if (void 0 === u) {
                    if (!a && i(s)) {
                        const e = r(s),
                            {
                                outputs: i
                            } = n(s);
                        for (const n of i)
                            if (U(n)) {
                                const o = r(n[0]);
                                t(e, o, n[1], n[2])
                            } else {
                                const t = o(n[0]);
                                e.disconnect(t, n[1])
                            }
                    }
                    e.set(s, l)
                } else e.set(s, u + l)
            })(d, K, j, J, ee, L), R, ke, He, ((e, t, n, r, o, i, a, s) => (l, u) => {
                const c = t.get(l);
                if (void 0 === c) throw new Error("Missing the expected cycle count.");
                const h = i(l.context),
                    d = s(h);
                if (c === u) {
                    if (t.delete(l), !d && a(l)) {
                        const t = r(l),
                            {
                                outputs: i
                            } = n(l);
                        for (const n of i)
                            if (U(n)) {
                                const o = r(n[0]);
                                e(t, o, n[1], n[2])
                            } else {
                                const e = o(n[0]);
                                t.connect(e, n[1])
                            }
                    }
                } else t.set(l, c - u)
            })(Y, d, j, J, ee, wt, L, Et), ((e, t, n) => function r(o, i) {
                const a = z(i) ? i : n(e, i);
                if ((e => "delayTime" in e)(a)) return [];
                if (o[0] === a) return [o];
                if (o.includes(a)) return [];
                const {
                    outputs: s
                } = t(a);
                return Array.from(s).map((e => r([...o, a], e[0]))).reduce(((e, t) => e.concat(t)), [])
            })(St, j, w), kt, wt, Ct, Ot, At, Et, Pt);
        var Mt;
        const Dt = ((e, t, n, r, o, i) => class extends e {
                constructor(e, n) {
                    const a = o(e),
                        s = {
                            ...O,
                            ...n
                        },
                        l = r(a, s);
                    super(e, !1, l, i(a) ? t() : null), this._nativeAnalyserNode = l
                }
                get fftSize() {
                    return this._nativeAnalyserNode.fftSize
                }
                set fftSize(e) {
                    this._nativeAnalyserNode.fftSize = e
                }
                get frequencyBinCount() {
                    return this._nativeAnalyserNode.frequencyBinCount
                }
                get maxDecibels() {
                    return this._nativeAnalyserNode.maxDecibels
                }
                set maxDecibels(e) {
                    const t = this._nativeAnalyserNode.maxDecibels;
                    if (this._nativeAnalyserNode.maxDecibels = e, !(e > this._nativeAnalyserNode.minDecibels)) throw this._nativeAnalyserNode.maxDecibels = t, n()
                }
                get minDecibels() {
                    return this._nativeAnalyserNode.minDecibels
                }
                set minDecibels(e) {
                    const t = this._nativeAnalyserNode.minDecibels;
                    if (this._nativeAnalyserNode.minDecibels = e, !(this._nativeAnalyserNode.maxDecibels > e)) throw this._nativeAnalyserNode.minDecibels = t, n()
                }
                get smoothingTimeConstant() {
                    return this._nativeAnalyserNode.smoothingTimeConstant
                }
                set smoothingTimeConstant(e) {
                    this._nativeAnalyserNode.smoothingTimeConstant = e
                }
                getByteFrequencyData(e) {
                    this._nativeAnalyserNode.getByteFrequencyData(e)
                }
                getByteTimeDomainData(e) {
                    this._nativeAnalyserNode.getByteTimeDomainData(e)
                }
                getFloatFrequencyData(e) {
                    this._nativeAnalyserNode.getFloatFrequencyData(e)
                }
                getFloatTimeDomainData(e) {
                    this._nativeAnalyserNode.getFloatTimeDomainData(e)
                }
            })(Rt, bt, R, vt, wt, Et),
            Nt = new WeakSet,
            It = (e => null === e ? null : e.hasOwnProperty("AudioBuffer") ? e.AudioBuffer : null)(mt),
            Lt = (qt = new Uint32Array(1), e => (qt[0] = e, qt[0]));
        var qt;
        const jt = ((e, t) => n => {
                n.copyFromChannel = (r, o, i = 0) => {
                    const a = e(i),
                        s = e(o);
                    if (s >= n.numberOfChannels) throw t();
                    const l = n.length,
                        u = n.getChannelData(s),
                        c = r.length;
                    for (let e = a < 0 ? -a : 0; e + a < l && e < c; e += 1) r[e] = u[e + a]
                }, n.copyToChannel = (r, o, i = 0) => {
                    const a = e(i),
                        s = e(o);
                    if (s >= n.numberOfChannels) throw t();
                    const l = n.length,
                        u = n.getChannelData(s),
                        c = r.length;
                    for (let e = a < 0 ? -a : 0; e + a < l && e < c; e += 1) u[e + a] = r[e]
                }
            })(Lt, R),
            Ft = (e => t => {
                t.copyFromChannel = (n => (r, o, i = 0) => {
                    const a = e(i),
                        s = e(o);
                    if (a < t.length) return n.call(t, r, s, a)
                })(t.copyFromChannel), t.copyToChannel = (n => (r, o, i = 0) => {
                    const a = e(i),
                        s = e(o);
                    if (a < t.length) return n.call(t, r, s, a)
                })(t.copyToChannel)
            })(Lt),
            Vt = ((e, t, n, r, o, i, a, s) => {
                let l = null;
                return class u {
                    constructor(u) {
                        if (null === o) throw new Error("Missing the native OfflineAudioContext constructor.");
                        const {
                            length: c,
                            numberOfChannels: h,
                            sampleRate: d
                        } = {
                            ...D,
                            ...u
                        };
                        null === l && (l = new o(1, 1, 44100));
                        const f = null !== r && t(i, i) ? new r({
                            length: c,
                            numberOfChannels: h,
                            sampleRate: d
                        }) : l.createBuffer(h, c, d);
                        if (0 === f.numberOfChannels) throw n();
                        return "function" != typeof f.copyFromChannel ? (a(f), M(f)) : t(P, (() => P(f))) || s(f), e.add(f), f
                    }
                    static[Symbol.hasInstance](t) {
                        return null !== t && "object" == typeof t && Object.getPrototypeOf(t) === u.prototype || e.has(t)
                    }
                }
            })(Nt, dt, He, It, xt, (e => () => {
                if (null === e) return !1;
                try {
                    new e({
                        length: 1,
                        sampleRate: 44100
                    })
                } catch {
                    return !1
                }
                return !0
            })(It), jt, Ft),
            Bt = (e => (t, n) => {
                const r = e(t, {
                    channelCount: 1,
                    channelCountMode: "explicit",
                    channelInterpretation: "discrete",
                    gain: 0
                });
                n.connect(r).connect(t.destination);
                const o = () => {
                    n.removeEventListener("ended", o), n.disconnect(r), r.disconnect()
                };
                n.addEventListener("ended", o)
            })(Be),
            zt = ((e, t, n) => async (r, o, i) => {
                const a = t(r);
                await Promise.all(Array.from(a.activeInputs).map((async ([t, r]) => {
                    const a = e(t),
                        s = await a.render(t, o);
                    n(t) || s.connect(i, r)
                })))
            })(gt, F, te),
            Ut = (e => (t, n, r) => e(n, t, r))(zt),
            Wt = ((e, t, n, r, o, i, a, s, l, u, c) => (l, h) => {
                const d = l.createBufferSource();
                return Re(d, h), De(d, h, "playbackRate"), Pe(d, h, "buffer"), Pe(d, h, "loop"), Pe(d, h, "loopEnd"), Pe(d, h, "loopStart"), t(n, (() => n(l))) || (e => {
                    e.start = (t => {
                        let n = !1;
                        return (r = 0, o = 0, i) => {
                            if (n) throw Se();
                            t.call(e, r, o, i), n = !0
                        }
                    })(e.start)
                })(d), t(r, (() => r(l))) || (e => {
                    var t;
                    e.start = (t = e.start, (n = 0, r = 0, o) => {
                        const i = e.buffer,
                            a = null === i ? r : Math.min(i.duration, r);
                        null !== i && a > i.duration - .5 / e.context.sampleRate ? t.call(e, n, 0, 0) : t.call(e, n, a, o)
                    })
                })(d), t(o, (() => o(l))) || u(d, l), t(i, (() => i(l))) || Ne(d), t(a, (() => a(l))) || c(d, l), t(s, (() => s(l))) || Ie(d), e(l, d), d
            })(Bt, dt, (e => {
                const t = e.createBufferSource();
                t.start();
                try {
                    t.start()
                } catch {
                    return !0
                }
                return !1
            }), (e => {
                const t = e.createBufferSource(),
                    n = e.createBuffer(1, 1, 44100);
                t.buffer = n;
                try {
                    t.start(0, 1)
                } catch {
                    return !1
                }
                return !0
            }), (e => {
                const t = e.createBufferSource();
                t.start();
                try {
                    t.stop()
                } catch {
                    return !1
                }
                return !0
            }), nt, rt, ot, 0, (e => (t, n) => {
                const r = n.createBuffer(1, 1, 44100);
                null === t.buffer && (t.buffer = r), e(t, "buffer", (e => () => {
                    const n = e.call(t);
                    return n === r ? null : n
                }), (e => n => e.call(t, null === n ? r : n)))
            })(et), it),
            Ht = ((e, t) => (n, r, o) => (e(r).replay(o), t(r, n, o)))((e => t => {
                const n = e(t);
                if (null === n.renderer) throw new Error("Missing the renderer of the given AudioParam in the audio graph.");
                return n.renderer
            })(F), zt),
            Gt = ((e, t, n, r, o) => () => {
                const i = new WeakMap;
                let a = null,
                    s = null;
                return {
                    set start(e) {
                        a = e
                    },
                    set stop(e) {
                        s = e
                    },
                    render(l, u) {
                        const c = i.get(u);
                        return void 0 !== c ? Promise.resolve(c) : (async (l, u) => {
                            let c = n(l);
                            const h = A(c, u);
                            if (!h) {
                                const e = {
                                    buffer: c.buffer,
                                    channelCount: c.channelCount,
                                    channelCountMode: c.channelCountMode,
                                    channelInterpretation: c.channelInterpretation,
                                    loop: c.loop,
                                    loopEnd: c.loopEnd,
                                    loopStart: c.loopStart,
                                    playbackRate: c.playbackRate.value
                                };
                                c = t(u, e), null !== a && c.start(...a), null !== s && c.stop(s)
                            }
                            return i.set(u, c), h ? await e(u, l.playbackRate, c.playbackRate) : await r(u, l.playbackRate, c.playbackRate), await o(l, u, c), c
                        })(l, u)
                    }
                }
            })(Ut, Wt, J, Ht, yt),
            Qt = ((e, t, n, o, i, a, s, l, u, c, h, d, f) => (o, p, m, v = null, g = null) => {
                const y = new r.AutomationEventList(m.defaultValue),
                    b = p ? (e => ({
                        replay(t) {
                            for (const n of e)
                                if ("exponentialRampToValue" === n.type) {
                                    const {
                                        endTime: e,
                                        value: r
                                    } = n;
                                    t.exponentialRampToValueAtTime(r, e)
                                } else if ("linearRampToValue" === n.type) {
                                const {
                                    endTime: e,
                                    value: r
                                } = n;
                                t.linearRampToValueAtTime(r, e)
                            } else if ("setTarget" === n.type) {
                                const {
                                    startTime: e,
                                    target: r,
                                    timeConstant: o
                                } = n;
                                t.setTargetAtTime(r, e, o)
                            } else if ("setValue" === n.type) {
                                const {
                                    startTime: e,
                                    value: r
                                } = n;
                                t.setValueAtTime(r, e)
                            } else {
                                if ("setValueCurve" !== n.type) throw new Error("Can't apply an unknown automation.");
                                {
                                    const {
                                        duration: e,
                                        startTime: r,
                                        values: o
                                    } = n;
                                    t.setValueCurveAtTime(o, r, e)
                                }
                            }
                        }
                    }))(y) : null,
                    w = {
                        get defaultValue() {
                            return m.defaultValue
                        },
                        get maxValue() {
                            return null === v ? m.maxValue : v
                        },
                        get minValue() {
                            return null === g ? m.minValue : g
                        },
                        get value() {
                            return m.value
                        },
                        set value(e) {
                            m.value = e, w.setValueAtTime(e, o.context.currentTime)
                        },
                        cancelAndHoldAtTime(e) {
                            if ("function" == typeof m.cancelAndHoldAtTime) null === b && y.flush(o.context.currentTime), y.add(i(e)), m.cancelAndHoldAtTime(e);
                            else {
                                const t = Array.from(y).pop();
                                null === b && y.flush(o.context.currentTime), y.add(i(e));
                                const n = Array.from(y).pop();
                                m.cancelScheduledValues(e), t !== n && void 0 !== n && ("exponentialRampToValue" === n.type ? m.exponentialRampToValueAtTime(n.value, n.endTime) : "linearRampToValue" === n.type ? m.linearRampToValueAtTime(n.value, n.endTime) : "setValue" === n.type ? m.setValueAtTime(n.value, n.startTime) : "setValueCurve" === n.type && m.setValueCurveAtTime(n.values, n.startTime, n.duration))
                            }
                            return w
                        },
                        cancelScheduledValues: e => (null === b && y.flush(o.context.currentTime), y.add(a(e)), m.cancelScheduledValues(e), w),
                        exponentialRampToValueAtTime(e, t) {
                            if (0 === e) throw new RangeError;
                            if (!Number.isFinite(t) || t < 0) throw new RangeError;
                            return null === b && y.flush(o.context.currentTime), y.add(s(e, t)), m.exponentialRampToValueAtTime(e, t), w
                        },
                        linearRampToValueAtTime: (e, t) => (null === b && y.flush(o.context.currentTime), y.add(l(e, t)), m.linearRampToValueAtTime(e, t), w),
                        setTargetAtTime: (e, t, n) => (null === b && y.flush(o.context.currentTime), y.add(u(e, t, n)), m.setTargetAtTime(e, t, n), w),
                        setValueAtTime: (e, t) => (null === b && y.flush(o.context.currentTime), y.add(c(e, t)), m.setValueAtTime(e, t), w),
                        setValueCurveAtTime(e, t, n) {
                            const r = e instanceof Float32Array ? e : new Float32Array(e);
                            if (null !== d && "webkitAudioContext" === d.name) {
                                const e = t + n,
                                    i = o.context.sampleRate,
                                    a = Math.ceil(t * i),
                                    s = Math.floor(e * i),
                                    l = s - a,
                                    u = new Float32Array(l);
                                for (let e = 0; e < l; e += 1) {
                                    const o = (r.length - 1) / n * ((a + e) / i - t),
                                        s = Math.floor(o),
                                        l = Math.ceil(o);
                                    u[e] = s === l ? r[s] : (1 - (o - s)) * r[s] + (1 - (l - o)) * r[l]
                                }
                                null === b && y.flush(o.context.currentTime), y.add(h(u, t, n)), m.setValueCurveAtTime(u, t, n);
                                const c = s / i;
                                c < e && f(w, u[u.length - 1], c), f(w, r[r.length - 1], e)
                            } else null === b && y.flush(o.context.currentTime), y.add(h(r, t, n)), m.setValueCurveAtTime(r, t, n);
                            return w
                        }
                    };
                return n.set(w, m), t.set(w, o), e(w, b), w
            })((Yt = l, (e, t) => {
                Yt.set(e, {
                    activeInputs: new Set,
                    passiveInputs: new WeakMap,
                    renderer: t
                })
            }), St, u, 0, r.createCancelAndHoldAutomationEvent, r.createCancelScheduledValuesAutomationEvent, r.createExponentialRampToValueAutomationEvent, r.createLinearRampToValueAutomationEvent, r.createSetTargetAutomationEvent, r.createSetValueAutomationEvent, r.createSetValueCurveAutomationEvent, Tt, tt);
        var Yt;
        const $t = ((e, t, n, r, o, i, a, s) => class extends e {
                constructor(e, r) {
                    const s = i(e),
                        l = {
                            ...q,
                            ...r
                        },
                        u = o(s, l),
                        c = a(s),
                        h = c ? t() : null;
                    super(e, !1, u, h), this._audioBufferSourceNodeRenderer = h, this._isBufferNullified = !1, this._isBufferSet = null !== l.buffer, this._nativeAudioBufferSourceNode = u, this._onended = null, this._playbackRate = n(this, c, u.playbackRate, I, N)
                }
                get buffer() {
                    return this._isBufferNullified ? null : this._nativeAudioBufferSourceNode.buffer
                }
                set buffer(e) {
                    if (this._nativeAudioBufferSourceNode.buffer = e, null !== e) {
                        if (this._isBufferSet) throw r();
                        this._isBufferSet = !0
                    }
                }
                get loop() {
                    return this._nativeAudioBufferSourceNode.loop
                }
                set loop(e) {
                    this._nativeAudioBufferSourceNode.loop = e
                }
                get loopEnd() {
                    return this._nativeAudioBufferSourceNode.loopEnd
                }
                set loopEnd(e) {
                    this._nativeAudioBufferSourceNode.loopEnd = e
                }
                get loopStart() {
                    return this._nativeAudioBufferSourceNode.loopStart
                }
                set loopStart(e) {
                    this._nativeAudioBufferSourceNode.loopStart = e
                }
                get onended() {
                    return this._onended
                }
                set onended(e) {
                    const t = "function" == typeof e ? s(this, e) : null;
                    this._nativeAudioBufferSourceNode.onended = t;
                    const n = this._nativeAudioBufferSourceNode.onended;
                    this._onended = null !== n && n === t ? e : n
                }
                get playbackRate() {
                    return this._playbackRate
                }
                start(e = 0, t = 0, n) {
                    if (this._nativeAudioBufferSourceNode.start(e, t, n), null !== this._audioBufferSourceNodeRenderer && (this._audioBufferSourceNodeRenderer.start = void 0 === n ? [e, t] : [e, t, n]), "closed" !== this.context.state) {
                        S(this);
                        const e = () => {
                            this._nativeAudioBufferSourceNode.removeEventListener("ended", e), L(this) && T(this)
                        };
                        this._nativeAudioBufferSourceNode.addEventListener("ended", e)
                    }
                }
                stop(e = 0) {
                    this._nativeAudioBufferSourceNode.stop(e), null !== this._audioBufferSourceNodeRenderer && (this._audioBufferSourceNodeRenderer.stop = e)
                }
            })(Rt, Gt, Qt, Se, Wt, wt, Et, at),
            Zt = ((e, t, n, r, o, i, a, s) => class extends e {
                constructor(e, t) {
                    const n = i(e),
                        r = a(n),
                        l = o(n, t, r);
                    super(e, !1, l, r ? (e => {
                        const t = new WeakMap;
                        return {
                            render(n, r) {
                                const o = t.get(r);
                                return void 0 !== o ? Promise.resolve(o) : (async (n, r) => {
                                    const o = r.destination;
                                    return t.set(r, o), await e(n, r, o), o
                                })(n, r)
                            }
                        }
                    })(s) : null), this._isNodeOfNativeOfflineAudioContext = r, this._nativeAudioDestinationNode = l
                }
                get channelCount() {
                    return this._nativeAudioDestinationNode.channelCount
                }
                set channelCount(e) {
                    if (this._isNodeOfNativeOfflineAudioContext) throw r();
                    if (e > this._nativeAudioDestinationNode.maxChannelCount) throw n();
                    this._nativeAudioDestinationNode.channelCount = e
                }
                get channelCountMode() {
                    return this._nativeAudioDestinationNode.channelCountMode
                }
                set channelCountMode(e) {
                    if (this._isNodeOfNativeOfflineAudioContext) throw r();
                    this._nativeAudioDestinationNode.channelCountMode = e
                }
                get maxChannelCount() {
                    return this._nativeAudioDestinationNode.maxChannelCount
                }
            })(Rt, 0, R, Se, ((e, t) => (n, r, o) => {
                const i = n.destination;
                if (i.channelCount !== r) try {
                    i.channelCount = r
                } catch {}
                o && "explicit" !== i.channelCountMode && (i.channelCountMode = "explicit"), 0 === i.maxChannelCount && Object.defineProperty(i, "maxChannelCount", {
                    value: r
                });
                const a = e(n, {
                    channelCount: r,
                    channelCountMode: i.channelCountMode,
                    channelInterpretation: i.channelInterpretation,
                    gain: 1
                });
                return t(a, "channelCount", (e => () => e.call(a)), (e => t => {
                    e.call(a, t);
                    try {
                        i.channelCount = t
                    } catch (e) {
                        if (t > i.maxChannelCount) throw e
                    }
                })), t(a, "channelCountMode", (e => () => e.call(a)), (e => t => {
                    e.call(a, t), i.channelCountMode = t
                })), t(a, "channelInterpretation", (e => () => e.call(a)), (e => t => {
                    e.call(a, t), i.channelInterpretation = t
                })), Object.defineProperty(a, "maxChannelCount", {
                    get: () => i.maxChannelCount
                }), a.connect(i), a
            })(Be, et), wt, Et, yt),
            Xt = ((e, t, n, r, o) => () => {
                const i = new WeakMap;
                return {
                    render(a, s) {
                        const l = i.get(s);
                        return void 0 !== l ? Promise.resolve(l) : (async (a, s) => {
                            let l = n(a);
                            const u = A(l, s);
                            if (!u) {
                                const e = {
                                    Q: l.Q.value,
                                    channelCount: l.channelCount,
                                    channelCountMode: l.channelCountMode,
                                    channelInterpretation: l.channelInterpretation,
                                    detune: l.detune.value,
                                    frequency: l.frequency.value,
                                    gain: l.gain.value,
                                    type: l.type
                                };
                                l = t(s, e)
                            }
                            return i.set(s, l), u ? (await e(s, a.Q, l.Q), await e(s, a.detune, l.detune), await e(s, a.frequency, l.frequency), await e(s, a.gain, l.gain)) : (await r(s, a.Q, l.Q), await r(s, a.detune, l.detune), await r(s, a.frequency, l.frequency), await r(s, a.gain, l.gain)), await o(a, s, l), l
                        })(a, s)
                    }
                }
            })(Ut, qe, J, Ht, yt),
            Kt = (e => (t, n) => e.set(t, n))(ct),
            Jt = ((e, t, n, r, o, i, a, s) => class extends e {
                constructor(e, r) {
                    const l = i(e),
                        u = {
                            ...pe,
                            ...r
                        },
                        c = o(l, u),
                        h = a(l);
                    super(e, !1, c, h ? n() : null), this._Q = t(this, h, c.Q, I, N), this._detune = t(this, h, c.detune, 1200 * Math.log2(I), -1200 * Math.log2(I)), this._frequency = t(this, h, c.frequency, e.sampleRate / 2, 0), this._gain = t(this, h, c.gain, 40 * Math.log10(I), N), this._nativeBiquadFilterNode = c, s(this, 1)
                }
                get detune() {
                    return this._detune
                }
                get frequency() {
                    return this._frequency
                }
                get gain() {
                    return this._gain
                }
                get Q() {
                    return this._Q
                }
                get type() {
                    return this._nativeBiquadFilterNode.type
                }
                set type(e) {
                    this._nativeBiquadFilterNode.type = e
                }
                getFrequencyResponse(e, t, n) {
                    try {
                        this._nativeBiquadFilterNode.getFrequencyResponse(e, t, n)
                    } catch (e) {
                        if (11 === e.code) throw r();
                        throw e
                    }
                    if (e.length !== t.length || t.length !== n.length) throw r()
                }
            })(Rt, Qt, Xt, ke, qe, wt, Et, Kt),
            en = ((e, t) => (n, r, o) => {
                const i = new Set;
                return n.connect = (a = n.connect, (o, s = 0, l = 0) => {
                    const u = 0 === i.size;
                    if (t(o)) return a.call(n, o, s, l), e(i, [o, s, l], (e => e[0] === o && e[1] === s && e[2] === l), !0), u && r(), o;
                    a.call(n, o, s), e(i, [o, s], (e => e[0] === o && e[1] === s), !0), u && r()
                }), n.disconnect = (e => (r, a, s) => {
                    const l = i.size > 0;
                    if (void 0 === r) e.apply(n), i.clear();
                    else if ("number" == typeof r) {
                        e.call(n, r);
                        for (const e of i) e[1] === r && i.delete(e)
                    } else {
                        t(r) ? e.call(n, r, a, s) : e.call(n, r, a);
                        for (const e of i) e[0] !== r || void 0 !== a && e[1] !== a || void 0 !== s && e[2] !== s || i.delete(e)
                    }
                    const u = 0 === i.size;
                    l && u && o()
                })(n.disconnect), n;
                var a
            })(W, Ot),
            tn = ((e, t) => (n, r) => {
                r.channelCount = 1, r.channelCountMode = "explicit", Object.defineProperty(r, "channelCount", {
                    get: () => 1,
                    set: () => {
                        throw e()
                    }
                }), Object.defineProperty(r, "channelCountMode", {
                    get: () => "explicit",
                    set: () => {
                        throw e()
                    }
                });
                const o = n.createBufferSource();
                t(r, (() => {
                    const e = r.numberOfInputs;
                    for (let t = 0; t < e; t += 1) o.connect(r, 0, t)
                }), (() => o.disconnect(r)))
            })(Se, en),
            nn = ((e, t) => (n, r) => {
                const o = n.createChannelMerger(r.numberOfInputs);
                return null !== e && "webkitAudioContext" === e.name && t(n, o), Re(o, r), o
            })(Tt, tn),
            rn = ((e, t, n) => () => {
                const r = new WeakMap;
                return {
                    render(o, i) {
                        const a = r.get(i);
                        return void 0 !== a ? Promise.resolve(a) : (async (o, i) => {
                            let a = t(o);
                            if (!A(a, i)) {
                                const t = {
                                    channelCount: a.channelCount,
                                    channelCountMode: a.channelCountMode,
                                    channelInterpretation: a.channelInterpretation,
                                    numberOfInputs: a.numberOfInputs
                                };
                                a = e(i, t)
                            }
                            return r.set(i, a), await n(o, i, a), a
                        })(o, i)
                    }
                }
            })(nn, J, yt),
            on = ((e, t, n, r, o) => class extends e {
                constructor(e, i) {
                    const a = r(e),
                        s = {
                            ...me,
                            ...i
                        };
                    super(e, !1, n(a, s), o(a) ? t() : null)
                }
            })(Rt, rn, nn, wt, Et),
            an = ((e, t, n) => () => {
                const r = new WeakMap;
                return {
                    render(o, i) {
                        const a = r.get(i);
                        return void 0 !== a ? Promise.resolve(a) : (async (o, i) => {
                            let a = t(o);
                            if (!A(a, i)) {
                                const t = {
                                    channelCount: a.channelCount,
                                    channelCountMode: a.channelCountMode,
                                    channelInterpretation: a.channelInterpretation,
                                    numberOfOutputs: a.numberOfOutputs
                                };
                                a = e(i, t)
                            }
                            return r.set(i, a), await n(o, i, a), a
                        })(o, i)
                    }
                }
            })(je, J, yt),
            sn = ((e, t, n, r, o, i) => class extends e {
                constructor(e, i) {
                    const a = r(e),
                        s = (e => ({
                            ...e,
                            channelCount: e.numberOfOutputs
                        }))({
                            ...ve,
                            ...i
                        });
                    super(e, !1, n(a, s), o(a) ? t() : null)
                }
            })(Rt, an, je, wt, Et),
            ln = ((e, t, n, r) => (o, {
                offset: i,
                ...a
            }) => {
                const s = o.createBuffer(1, 2, 44100),
                    l = t(o, {
                        buffer: null,
                        channelCount: 2,
                        channelCountMode: "max",
                        channelInterpretation: "speakers",
                        loop: !1,
                        loopEnd: 0,
                        loopStart: 0,
                        playbackRate: 1
                    }),
                    u = n(o, {
                        ...a,
                        gain: i
                    }),
                    c = s.getChannelData(0);
                c[0] = 1, c[1] = 1, l.buffer = s, l.loop = !0;
                const h = {
                    get bufferSize() {},
                    get channelCount() {
                        return u.channelCount
                    },
                    set channelCount(e) {
                        u.channelCount = e
                    },
                    get channelCountMode() {
                        return u.channelCountMode
                    },
                    set channelCountMode(e) {
                        u.channelCountMode = e
                    },
                    get channelInterpretation() {
                        return u.channelInterpretation
                    },
                    set channelInterpretation(e) {
                        u.channelInterpretation = e
                    },
                    get context() {
                        return u.context
                    },
                    get inputs() {
                        return []
                    },
                    get numberOfInputs() {
                        return l.numberOfInputs
                    },
                    get numberOfOutputs() {
                        return u.numberOfOutputs
                    },
                    get offset() {
                        return u.gain
                    },
                    get onended() {
                        return l.onended
                    },
                    set onended(e) {
                        l.onended = e
                    },
                    addEventListener: (...e) => l.addEventListener(e[0], e[1], e[2]),
                    dispatchEvent: (...e) => l.dispatchEvent(e[0]),
                    removeEventListener: (...e) => l.removeEventListener(e[0], e[1], e[2]),
                    start(e = 0) {
                        l.start.call(l, e)
                    },
                    stop(e = 0) {
                        l.stop.call(l, e)
                    }
                };
                return e(o, l), r(Fe(h, u), (() => l.connect(u)), (() => l.disconnect(u)))
            })(Bt, Wt, Be, en),
            un = ((e, t, n, r, o) => (i, a) => {
                if (void 0 === i.createConstantSource) return n(i, a);
                const s = i.createConstantSource();
                return Re(s, a), De(s, a, "offset"), t(r, (() => r(i))) || Ne(s), t(o, (() => o(i))) || Ie(s), e(i, s), s
            })(Bt, dt, ln, nt, ot),
            cn = ((e, t, n, r, o) => () => {
                const i = new WeakMap;
                let a = null,
                    s = null;
                return {
                    set start(e) {
                        a = e
                    },
                    set stop(e) {
                        s = e
                    },
                    render(l, u) {
                        const c = i.get(u);
                        return void 0 !== c ? Promise.resolve(c) : (async (l, u) => {
                            let c = n(l);
                            const h = A(c, u);
                            if (!h) {
                                const e = {
                                    channelCount: c.channelCount,
                                    channelCountMode: c.channelCountMode,
                                    channelInterpretation: c.channelInterpretation,
                                    offset: c.offset.value
                                };
                                c = t(u, e), null !== a && c.start(a), null !== s && c.stop(s)
                            }
                            return i.set(u, c), h ? await e(u, l.offset, c.offset) : await r(u, l.offset, c.offset), await o(l, u, c), c
                        })(l, u)
                    }
                }
            })(Ut, un, J, Ht, yt),
            hn = ((e, t, n, r, o, i, a) => class extends e {
                constructor(e, a) {
                    const s = o(e),
                        l = {
                            ...ge,
                            ...a
                        },
                        u = r(s, l),
                        c = i(s),
                        h = c ? n() : null;
                    super(e, !1, u, h), this._constantSourceNodeRenderer = h, this._nativeConstantSourceNode = u, this._offset = t(this, c, u.offset, I, N), this._onended = null
                }
                get offset() {
                    return this._offset
                }
                get onended() {
                    return this._onended
                }
                set onended(e) {
                    const t = "function" == typeof e ? a(this, e) : null;
                    this._nativeConstantSourceNode.onended = t;
                    const n = this._nativeConstantSourceNode.onended;
                    this._onended = null !== n && n === t ? e : n
                }
                start(e = 0) {
                    if (this._nativeConstantSourceNode.start(e), null !== this._constantSourceNodeRenderer && (this._constantSourceNodeRenderer.start = e), "closed" !== this.context.state) {
                        S(this);
                        const e = () => {
                            this._nativeConstantSourceNode.removeEventListener("ended", e), L(this) && T(this)
                        };
                        this._nativeConstantSourceNode.addEventListener("ended", e)
                    }
                }
                stop(e = 0) {
                    this._nativeConstantSourceNode.stop(e), null !== this._constantSourceNodeRenderer && (this._constantSourceNodeRenderer.stop = e)
                }
            })(Rt, Qt, cn, un, wt, Et, at),
            dn = ((e, t) => (n, r) => {
                const o = n.createConvolver();
                if (Re(o, r), r.disableNormalization === o.normalize && (o.normalize = !r.disableNormalization), Pe(o, r, "buffer"), r.channelCount > 2) throw e();
                if (t(o, "channelCount", (e => () => e.call(o)), (t => n => {
                        if (n > 2) throw e();
                        return t.call(o, n)
                    })), "max" === r.channelCountMode) throw e();
                return t(o, "channelCountMode", (e => () => e.call(o)), (t => n => {
                    if ("max" === n) throw e();
                    return t.call(o, n)
                })), o
            })(He, et),
            fn = ((e, t, n) => () => {
                const r = new WeakMap;
                return {
                    render(o, i) {
                        const a = r.get(i);
                        return void 0 !== a ? Promise.resolve(a) : (async (o, i) => {
                            let a = t(o);
                            if (!A(a, i)) {
                                const t = {
                                    buffer: a.buffer,
                                    channelCount: a.channelCount,
                                    channelCountMode: a.channelCountMode,
                                    channelInterpretation: a.channelInterpretation,
                                    disableNormalization: !a.normalize
                                };
                                a = e(i, t)
                            }
                            return r.set(i, a), Q(a) ? await n(o, i, a.inputs[0]) : await n(o, i, a), a
                        })(o, i)
                    }
                }
            })(dn, J, yt),
            pn = ((e, t, n, r, o, i) => class extends e {
                constructor(e, a) {
                    const s = r(e),
                        l = {
                            ...ye,
                            ...a
                        },
                        u = n(s, l);
                    super(e, !1, u, o(s) ? t() : null), this._isBufferNullified = !1, this._nativeConvolverNode = u, null !== l.buffer && i(this, l.buffer.duration)
                }
                get buffer() {
                    return this._isBufferNullified ? null : this._nativeConvolverNode.buffer
                }
                set buffer(e) {
                    if (this._nativeConvolverNode.buffer = e, null === e && null !== this._nativeConvolverNode.buffer) {
                        const e = this._nativeConvolverNode.context;
                        this._nativeConvolverNode.buffer = e.createBuffer(1, 1, e.sampleRate), this._isBufferNullified = !0, i(this, 0)
                    } else this._isBufferNullified = !1, i(this, null === this._nativeConvolverNode.buffer ? 0 : this._nativeConvolverNode.buffer.duration)
                }
                get normalize() {
                    return this._nativeConvolverNode.normalize
                }
                set normalize(e) {
                    this._nativeConvolverNode.normalize = e
                }
            })(Rt, fn, dn, wt, Et, Kt),
            mn = ((e, t, n, r, o) => i => {
                const a = new WeakMap;
                return {
                    render(s, l) {
                        const u = a.get(l);
                        return void 0 !== u ? Promise.resolve(u) : (async (s, l) => {
                            let u = n(s);
                            const c = A(u, l);
                            if (!c) {
                                const e = {
                                    channelCount: u.channelCount,
                                    channelCountMode: u.channelCountMode,
                                    channelInterpretation: u.channelInterpretation,
                                    delayTime: u.delayTime.value,
                                    maxDelayTime: i
                                };
                                u = t(l, e)
                            }
                            return a.set(l, u), c ? await e(l, s.delayTime, u.delayTime) : await r(l, s.delayTime, u.delayTime), await o(s, l, u), u
                        })(s, l)
                    }
                }
            })(Ut, Ve, J, Ht, yt),
            vn = ((e, t, n, r, o, i, a) => class extends e {
                constructor(e, s) {
                    const l = o(e),
                        u = {
                            ...we,
                            ...s
                        },
                        c = r(l, u),
                        h = i(l);
                    super(e, !1, c, h ? n(u.maxDelayTime) : null), this._delayTime = t(this, h, c.delayTime), a(this, u.maxDelayTime)
                }
                get delayTime() {
                    return this._delayTime
                }
            })(Rt, Qt, mn, Ve, wt, Et, Kt),
            gn = (e => (t, n) => {
                const r = t.createDynamicsCompressor();
                if (Re(r, n), n.channelCount > 2) throw e();
                if ("max" === n.channelCountMode) throw e();
                return De(r, n, "attack"), De(r, n, "knee"), De(r, n, "ratio"), De(r, n, "release"), De(r, n, "threshold"), r
            })(He),
            yn = ((e, t, n, r, o) => () => {
                const i = new WeakMap;
                return {
                    render(a, s) {
                        const l = i.get(s);
                        return void 0 !== l ? Promise.resolve(l) : (async (a, s) => {
                            let l = n(a);
                            const u = A(l, s);
                            if (!u) {
                                const e = {
                                    attack: l.attack.value,
                                    channelCount: l.channelCount,
                                    channelCountMode: l.channelCountMode,
                                    channelInterpretation: l.channelInterpretation,
                                    knee: l.knee.value,
                                    ratio: l.ratio.value,
                                    release: l.release.value,
                                    threshold: l.threshold.value
                                };
                                l = t(s, e)
                            }
                            return i.set(s, l), u ? (await e(s, a.attack, l.attack), await e(s, a.knee, l.knee), await e(s, a.ratio, l.ratio), await e(s, a.release, l.release), await e(s, a.threshold, l.threshold)) : (await r(s, a.attack, l.attack), await r(s, a.knee, l.knee), await r(s, a.ratio, l.ratio), await r(s, a.release, l.release), await r(s, a.threshold, l.threshold)), await o(a, s, l), l
                        })(a, s)
                    }
                }
            })(Ut, gn, J, Ht, yt),
            bn = ((e, t, n, r, o, i, a, s) => class extends e {
                constructor(e, o) {
                    const l = i(e),
                        u = {
                            ...xe,
                            ...o
                        },
                        c = r(l, u),
                        h = a(l);
                    super(e, !1, c, h ? n() : null), this._attack = t(this, h, c.attack), this._knee = t(this, h, c.knee), this._nativeDynamicsCompressorNode = c, this._ratio = t(this, h, c.ratio), this._release = t(this, h, c.release), this._threshold = t(this, h, c.threshold), s(this, .006)
                }
                get attack() {
                    return this._attack
                }
                get channelCount() {
                    return this._nativeDynamicsCompressorNode.channelCount
                }
                set channelCount(e) {
                    const t = this._nativeDynamicsCompressorNode.channelCount;
                    if (this._nativeDynamicsCompressorNode.channelCount = e, e > 2) throw this._nativeDynamicsCompressorNode.channelCount = t, o()
                }
                get channelCountMode() {
                    return this._nativeDynamicsCompressorNode.channelCountMode
                }
                set channelCountMode(e) {
                    const t = this._nativeDynamicsCompressorNode.channelCountMode;
                    if (this._nativeDynamicsCompressorNode.channelCountMode = e, "max" === e) throw this._nativeDynamicsCompressorNode.channelCountMode = t, o()
                }
                get knee() {
                    return this._knee
                }
                get ratio() {
                    return this._ratio
                }
                get reduction() {
                    return "number" == typeof this._nativeDynamicsCompressorNode.reduction.value ? this._nativeDynamicsCompressorNode.reduction.value : this._nativeDynamicsCompressorNode.reduction
                }
                get release() {
                    return this._release
                }
                get threshold() {
                    return this._threshold
                }
            })(Rt, Qt, yn, gn, He, wt, Et, Kt),
            wn = ((e, t, n, r, o) => () => {
                const i = new WeakMap;
                return {
                    render(a, s) {
                        const l = i.get(s);
                        return void 0 !== l ? Promise.resolve(l) : (async (a, s) => {
                            let l = n(a);
                            const u = A(l, s);
                            if (!u) {
                                const e = {
                                    channelCount: l.channelCount,
                                    channelCountMode: l.channelCountMode,
                                    channelInterpretation: l.channelInterpretation,
                                    gain: l.gain.value
                                };
                                l = t(s, e)
                            }
                            return i.set(s, l), u ? await e(s, a.gain, l.gain) : await r(s, a.gain, l.gain), await o(a, s, l), l
                        })(a, s)
                    }
                }
            })(Ut, Be, J, Ht, yt),
            _n = ((e, t, n, r, o, i) => class extends e {
                constructor(e, a) {
                    const s = o(e),
                        l = {
                            ...Ee,
                            ...a
                        },
                        u = r(s, l),
                        c = i(s);
                    super(e, !1, u, c ? n() : null), this._gain = t(this, c, u.gain, I, N)
                }
                get gain() {
                    return this._gain
                }
            })(Rt, Qt, wn, Be, wt, Et),
            xn = ((e, t, n, r) => (o, i, {
                channelCount: a,
                channelCountMode: s,
                channelInterpretation: l,
                feedback: u,
                feedforward: c
            }) => {
                const h = Le(i, o.sampleRate),
                    d = u instanceof Float64Array ? u : new Float64Array(u),
                    f = c instanceof Float64Array ? c : new Float64Array(c),
                    p = d.length,
                    m = f.length,
                    v = Math.min(p, m);
                if (0 === p || p > 20) throw r();
                if (0 === d[0]) throw t();
                if (0 === m || m > 20) throw r();
                if (0 === f[0]) throw t();
                if (1 !== d[0]) {
                    for (let e = 0; e < m; e += 1) f[e] /= d[0];
                    for (let e = 1; e < p; e += 1) d[e] /= d[0]
                }
                const g = n(o, h, a, a);
                g.channelCount = a, g.channelCountMode = s, g.channelInterpretation = l;
                const y = [],
                    b = [],
                    w = [];
                for (let e = 0; e < a; e += 1) {
                    y.push(0);
                    const e = new Float32Array(32),
                        t = new Float32Array(32);
                    e.fill(0), t.fill(0), b.push(e), w.push(t)
                }
                g.onaudioprocess = e => {
                    const t = e.inputBuffer,
                        n = e.outputBuffer,
                        r = t.numberOfChannels;
                    for (let e = 0; e < r; e += 1) {
                        const r = t.getChannelData(e),
                            o = n.getChannelData(e);
                        y[e] = Ce(d, p, f, m, v, b[e], w[e], y[e], 32, r, o)
                    }
                };
                const _ = o.sampleRate / 2,
                    x = {
                        get bufferSize() {
                            return h
                        },
                        get channelCount() {
                            return g.channelCount
                        },
                        set channelCount(e) {
                            g.channelCount = e
                        },
                        get channelCountMode() {
                            return g.channelCountMode
                        },
                        set channelCountMode(e) {
                            g.channelCountMode = e
                        },
                        get channelInterpretation() {
                            return g.channelInterpretation
                        },
                        set channelInterpretation(e) {
                            g.channelInterpretation = e
                        },
                        get context() {
                            return g.context
                        },
                        get inputs() {
                            return [g]
                        },
                        get numberOfInputs() {
                            return g.numberOfInputs
                        },
                        get numberOfOutputs() {
                            return g.numberOfOutputs
                        },
                        addEventListener: (...e) => g.addEventListener(e[0], e[1], e[2]),
                        dispatchEvent: (...e) => g.dispatchEvent(e[0]),
                        getFrequencyResponse(t, n, r) {
                            if (t.length !== n.length || n.length !== r.length) throw e();
                            const o = t.length;
                            for (let e = 0; e < o; e += 1) {
                                const o = -Math.PI * (t[e] / _),
                                    i = [Math.cos(o), Math.sin(o)],
                                    a = ze(Ue(f, i), Ue(d, i));
                                n[e] = Math.sqrt(a[0] * a[0] + a[1] * a[1]), r[e] = Math.atan2(a[1], a[0])
                            }
                        },
                        removeEventListener: (...e) => g.removeEventListener(e[0], e[1], e[2])
                    };
                return Fe(x, g)
            })(ke, Se, We, He),
            En = ((e, t, n, r) => o => e(Ae, (() => Ae(o))) ? Promise.resolve(e(r, r)).then((e => {
                if (!e) {
                    const e = n(o, 512, 0, 1);
                    o.oncomplete = () => {
                        e.onaudioprocess = null, e.disconnect()
                    }, e.onaudioprocess = () => o.currentTime, e.connect(o.destination)
                }
                return o.startRendering()
            })) : new Promise((e => {
                const n = t(o, {
                    channelCount: 1,
                    channelCountMode: "explicit",
                    channelInterpretation: "discrete",
                    gain: 0
                });
                o.oncomplete = t => {
                    n.disconnect(), e(t.renderedBuffer)
                }, n.connect(o.destination), o.startRendering()
            })))(dt, Be, We, ((e, t) => () => {
                if (null === t) return Promise.resolve(!1);
                const n = new t(1, 1, 44100),
                    r = e(n, {
                        channelCount: 1,
                        channelCountMode: "explicit",
                        channelInterpretation: "discrete",
                        gain: 0
                    });
                return new Promise((e => {
                    n.oncomplete = () => {
                        r.disconnect(), e(0 !== n.currentTime)
                    }, n.startRendering()
                }))
            })(Be, xt)),
            Sn = ((e, t, n, r, o) => (i, a) => {
                const s = new WeakMap;
                let l = null;
                return {
                    render(u, c) {
                        const h = s.get(c);
                        return void 0 !== h ? Promise.resolve(h) : (async (u, c) => {
                            let h = null,
                                d = t(u);
                            const f = A(d, c);
                            if (void 0 === c.createIIRFilter ? h = e(c, {
                                    buffer: null,
                                    channelCount: 2,
                                    channelCountMode: "max",
                                    channelInterpretation: "speakers",
                                    loop: !1,
                                    loopEnd: 0,
                                    loopStart: 0,
                                    playbackRate: 1
                                }) : f || (d = c.createIIRFilter(a, i)), s.set(c, null === h ? d : h), null !== h) {
                                if (null === l) {
                                    if (null === n) throw new Error("Missing the native OfflineAudioContext constructor.");
                                    const e = new n(u.context.destination.channelCount, u.context.length, c.sampleRate);
                                    l = (async () => (await r(u, e, e.destination), ((e, t, n, r) => {
                                        const o = n instanceof Float64Array ? n : new Float64Array(n),
                                            i = r instanceof Float64Array ? r : new Float64Array(r),
                                            a = o.length,
                                            s = i.length,
                                            l = Math.min(a, s);
                                        if (1 !== o[0]) {
                                            for (let e = 0; e < a; e += 1) i[e] /= o[0];
                                            for (let e = 1; e < s; e += 1) o[e] /= o[0]
                                        }
                                        const u = new Float32Array(32),
                                            c = new Float32Array(32),
                                            h = t.createBuffer(e.numberOfChannels, e.length, e.sampleRate),
                                            d = e.numberOfChannels;
                                        for (let t = 0; t < d; t += 1) {
                                            const n = e.getChannelData(t),
                                                r = h.getChannelData(t);
                                            u.fill(0), c.fill(0), Ce(o, a, i, s, l, u, c, 0, 32, n, r)
                                        }
                                        return h
                                    })(await o(e), c, i, a)))()
                                }
                                const e = await l;
                                return h.buffer = e, h.start(0), h
                            }
                            return await r(u, c, d), d
                        })(u, c)
                    }
                }
            })(Wt, J, xt, yt, En),
            kn = (e => (t, n, r) => {
                if (void 0 === t.createIIRFilter) return e(t, n, r);
                const o = t.createIIRFilter(r.feedforward, r.feedback);
                return Re(o, r), o
            })(xn),
            Tn = ((e, t, n, r, o, i) => class extends e {
                constructor(e, a) {
                    const s = r(e),
                        l = o(s),
                        u = {
                            ...Te,
                            ...a
                        },
                        c = t(s, l ? null : e.baseLatency, u);
                    super(e, !1, c, l ? n(u.feedback, u.feedforward) : null), (e => {
                        var t;
                        e.getFrequencyResponse = (t = e.getFrequencyResponse, (n, r, o) => {
                            if (n.length !== r.length || r.length !== o.length) throw ke();
                            return t.call(e, n, r, o)
                        })
                    })(c), this._nativeIIRFilterNode = c, i(this, 1)
                }
                getFrequencyResponse(e, t, n) {
                    return this._nativeIIRFilterNode.getFrequencyResponse(e, t, n)
                }
            })(Rt, kn, Sn, wt, Et, Kt),
            Cn = ((e, t, n, r, o, i, a, s) => (l, u) => {
                const c = u.listener,
                    {
                        forwardX: h,
                        forwardY: d,
                        forwardZ: f,
                        positionX: p,
                        positionY: m,
                        positionZ: v,
                        upX: g,
                        upY: y,
                        upZ: b
                    } = void 0 === c.forwardX ? (() => {
                        const h = new Float32Array(1),
                            d = t(u, {
                                channelCount: 1,
                                channelCountMode: "explicit",
                                channelInterpretation: "speakers",
                                numberOfInputs: 9
                            }),
                            f = a(u);
                        let p = !1,
                            m = [0, 0, -1, 0, 1, 0],
                            v = [0, 0, 0];
                        const g = () => {
                                if (p) return;
                                p = !0;
                                const e = r(u, 256, 9, 0);
                                e.onaudioprocess = ({
                                    inputBuffer: e
                                }) => {
                                    const t = [i(e, h, 0), i(e, h, 1), i(e, h, 2), i(e, h, 3), i(e, h, 4), i(e, h, 5)];
                                    t.some(((e, t) => e !== m[t])) && (c.setOrientation(...t), m = t);
                                    const n = [i(e, h, 6), i(e, h, 7), i(e, h, 8)];
                                    n.some(((e, t) => e !== v[t])) && (c.setPosition(...n), v = n)
                                }, d.connect(e)
                            },
                            y = e => t => {
                                t !== m[e] && (m[e] = t, c.setOrientation(...m))
                            },
                            b = e => t => {
                                t !== v[e] && (v[e] = t, c.setPosition(...v))
                            },
                            w = (t, r, i) => {
                                const a = n(u, {
                                    channelCount: 1,
                                    channelCountMode: "explicit",
                                    channelInterpretation: "discrete",
                                    offset: r
                                });
                                a.connect(d, 0, t), a.start(), Object.defineProperty(a.offset, "defaultValue", {
                                    get: () => r
                                });
                                const c = e({
                                    context: l
                                }, f, a.offset, I, N);
                                var h, p, m, v, y, b, w;
                                return s(c, "value", (e => () => e.call(c)), (e => t => {
                                    try {
                                        e.call(c, t)
                                    } catch (e) {
                                        if (9 !== e.code) throw e
                                    }
                                    g(), f && i(t)
                                })), c.cancelAndHoldAtTime = (h = c.cancelAndHoldAtTime, f ? () => {
                                    throw o()
                                } : (...e) => {
                                    const t = h.apply(c, e);
                                    return g(), t
                                }), c.cancelScheduledValues = (p = c.cancelScheduledValues, f ? () => {
                                    throw o()
                                } : (...e) => {
                                    const t = p.apply(c, e);
                                    return g(), t
                                }), c.exponentialRampToValueAtTime = (m = c.exponentialRampToValueAtTime, f ? () => {
                                    throw o()
                                } : (...e) => {
                                    const t = m.apply(c, e);
                                    return g(), t
                                }), c.linearRampToValueAtTime = (v = c.linearRampToValueAtTime, f ? () => {
                                    throw o()
                                } : (...e) => {
                                    const t = v.apply(c, e);
                                    return g(), t
                                }), c.setTargetAtTime = (y = c.setTargetAtTime, f ? () => {
                                    throw o()
                                } : (...e) => {
                                    const t = y.apply(c, e);
                                    return g(), t
                                }), c.setValueAtTime = (b = c.setValueAtTime, f ? () => {
                                    throw o()
                                } : (...e) => {
                                    const t = b.apply(c, e);
                                    return g(), t
                                }), c.setValueCurveAtTime = (w = c.setValueCurveAtTime, f ? () => {
                                    throw o()
                                } : (...e) => {
                                    const t = w.apply(c, e);
                                    return g(), t
                                }), c
                            };
                        return {
                            forwardX: w(0, 0, y(0)),
                            forwardY: w(1, 0, y(1)),
                            forwardZ: w(2, -1, y(2)),
                            positionX: w(6, 0, b(0)),
                            positionY: w(7, 0, b(1)),
                            positionZ: w(8, 0, b(2)),
                            upX: w(3, 0, y(3)),
                            upY: w(4, 1, y(4)),
                            upZ: w(5, 0, y(5))
                        }
                    })() : c;
                return {
                    get forwardX() {
                        return h
                    },
                    get forwardY() {
                        return d
                    },
                    get forwardZ() {
                        return f
                    },
                    get positionX() {
                        return p
                    },
                    get positionY() {
                        return m
                    },
                    get positionZ() {
                        return v
                    },
                    get upX() {
                        return g
                    },
                    get upY() {
                        return y
                    },
                    get upZ() {
                        return b
                    }
                }
            })(Qt, nn, un, We, He, Ke, Et, et),
            On = new WeakMap,
            An = ((e, t, n, r, o, i) => class extends n {
                constructor(n, i) {
                    super(n), this._nativeContext = n, c.set(this, n), r(n) && o.set(n, new Set), this._destination = new e(this, i), this._listener = t(this, n), this._onstatechange = null
                }
                get currentTime() {
                    return this._nativeContext.currentTime
                }
                get destination() {
                    return this._destination
                }
                get listener() {
                    return this._listener
                }
                get onstatechange() {
                    return this._onstatechange
                }
                set onstatechange(e) {
                    const t = "function" == typeof e ? i(this, e) : null;
                    this._nativeContext.onstatechange = t;
                    const n = this._nativeContext.onstatechange;
                    this._onstatechange = null !== n && n === t ? e : n
                }
                get sampleRate() {
                    return this._nativeContext.sampleRate
                }
                get state() {
                    return this._nativeContext.state
                }
            })(Zt, Cn, kt, Et, On, at),
            Pn = ((e, t, n, r, o, i) => (a, s) => {
                const l = a.createOscillator();
                return Re(l, s), De(l, s, "detune"), De(l, s, "frequency"), void 0 !== s.periodicWave ? l.setPeriodicWave(s.periodicWave) : Pe(l, s, "type"), t(n, (() => n(a))) || Ne(l), t(r, (() => r(a))) || i(l, a), t(o, (() => o(a))) || Ie(l), e(a, l), l
            })(Bt, dt, nt, rt, ot, it),
            Rn = ((e, t, n, r, o) => () => {
                const i = new WeakMap;
                let a = null,
                    s = null,
                    l = null;
                return {
                    set periodicWave(e) {
                        a = e
                    },
                    set start(e) {
                        s = e
                    },
                    set stop(e) {
                        l = e
                    },
                    render(u, c) {
                        const h = i.get(c);
                        return void 0 !== h ? Promise.resolve(h) : (async (u, c) => {
                            let h = n(u);
                            const d = A(h, c);
                            if (!d) {
                                const e = {
                                    channelCount: h.channelCount,
                                    channelCountMode: h.channelCountMode,
                                    channelInterpretation: h.channelInterpretation,
                                    detune: h.detune.value,
                                    frequency: h.frequency.value,
                                    periodicWave: null === a ? void 0 : a,
                                    type: h.type
                                };
                                h = t(c, e), null !== s && h.start(s), null !== l && h.stop(l)
                            }
                            return i.set(c, h), d ? (await e(c, u.detune, h.detune), await e(c, u.frequency, h.frequency)) : (await r(c, u.detune, h.detune), await r(c, u.frequency, h.frequency)), await o(u, c, h), h
                        })(u, c)
                    }
                }
            })(Ut, Pn, J, Ht, yt),
            Mn = ((e, t, n, r, o, i, a) => class extends e {
                constructor(e, a) {
                    const s = o(e),
                        l = {
                            ...Qe,
                            ...a
                        },
                        u = n(s, l),
                        c = i(s),
                        h = c ? r() : null,
                        d = e.sampleRate / 2;
                    super(e, !1, u, h), this._detune = t(this, c, u.detune, 153600, -153600), this._frequency = t(this, c, u.frequency, d, -d), this._nativeOscillatorNode = u, this._onended = null, this._oscillatorNodeRenderer = h, null !== this._oscillatorNodeRenderer && void 0 !== l.periodicWave && (this._oscillatorNodeRenderer.periodicWave = l.periodicWave)
                }
                get detune() {
                    return this._detune
                }
                get frequency() {
                    return this._frequency
                }
                get onended() {
                    return this._onended
                }
                set onended(e) {
                    const t = "function" == typeof e ? a(this, e) : null;
                    this._nativeOscillatorNode.onended = t;
                    const n = this._nativeOscillatorNode.onended;
                    this._onended = null !== n && n === t ? e : n
                }
                get type() {
                    return this._nativeOscillatorNode.type
                }
                set type(e) {
                    this._nativeOscillatorNode.type = e, null !== this._oscillatorNodeRenderer && (this._oscillatorNodeRenderer.periodicWave = null)
                }
                setPeriodicWave(e) {
                    this._nativeOscillatorNode.setPeriodicWave(e), null !== this._oscillatorNodeRenderer && (this._oscillatorNodeRenderer.periodicWave = e)
                }
                start(e = 0) {
                    if (this._nativeOscillatorNode.start(e), null !== this._oscillatorNodeRenderer && (this._oscillatorNodeRenderer.start = e), "closed" !== this.context.state) {
                        S(this);
                        const e = () => {
                            this._nativeOscillatorNode.removeEventListener("ended", e), L(this) && T(this)
                        };
                        this._nativeOscillatorNode.addEventListener("ended", e)
                    }
                }
                stop(e = 0) {
                    this._nativeOscillatorNode.stop(e), null !== this._oscillatorNodeRenderer && (this._oscillatorNodeRenderer.stop = e)
                }
            })(Rt, Qt, Pn, Rn, wt, Et, at),
            Dn = (e => (t, n) => {
                const r = e(t, {
                        buffer: null,
                        channelCount: 2,
                        channelCountMode: "max",
                        channelInterpretation: "speakers",
                        loop: !1,
                        loopEnd: 0,
                        loopStart: 0,
                        playbackRate: 1
                    }),
                    o = t.createBuffer(1, 2, 44100);
                return r.buffer = o, r.loop = !0, r.connect(n), r.start(), () => {
                    r.stop(), r.disconnect(n)
                }
            })(Wt),
            Nn = ((e, t, n, r, o) => (i, {
                curve: a,
                oversample: s,
                ...l
            }) => {
                const u = i.createWaveShaper(),
                    c = i.createWaveShaper();
                Re(u, l), Re(c, l);
                const h = n(i, {
                        ...l,
                        gain: 1
                    }),
                    d = n(i, {
                        ...l,
                        gain: -1
                    }),
                    f = n(i, {
                        ...l,
                        gain: 1
                    }),
                    p = n(i, {
                        ...l,
                        gain: -1
                    });
                let m = null,
                    v = !1,
                    g = null;
                const y = {
                    get bufferSize() {},
                    get channelCount() {
                        return u.channelCount
                    },
                    set channelCount(e) {
                        h.channelCount = e, d.channelCount = e, u.channelCount = e, f.channelCount = e, c.channelCount = e, p.channelCount = e
                    },
                    get channelCountMode() {
                        return u.channelCountMode
                    },
                    set channelCountMode(e) {
                        h.channelCountMode = e, d.channelCountMode = e, u.channelCountMode = e, f.channelCountMode = e, c.channelCountMode = e, p.channelCountMode = e
                    },
                    get channelInterpretation() {
                        return u.channelInterpretation
                    },
                    set channelInterpretation(e) {
                        h.channelInterpretation = e, d.channelInterpretation = e, u.channelInterpretation = e, f.channelInterpretation = e, c.channelInterpretation = e, p.channelInterpretation = e
                    },
                    get context() {
                        return u.context
                    },
                    get curve() {
                        return g
                    },
                    set curve(n) {
                        if (null !== n && n.length < 2) throw t();
                        if (null === n) u.curve = n, c.curve = n;
                        else {
                            const e = n.length,
                                t = new Float32Array(e + 2 - e % 2),
                                r = new Float32Array(e + 2 - e % 2);
                            t[0] = n[0], r[0] = -n[e - 1];
                            const o = Math.ceil((e + 1) / 2),
                                i = (e + 1) / 2 - 1;
                            for (let a = 1; a < o; a += 1) {
                                const s = a / o * i,
                                    l = Math.floor(s),
                                    u = Math.ceil(s);
                                t[a] = l === u ? n[l] : (1 - (s - l)) * n[l] + (1 - (u - s)) * n[u], r[a] = l === u ? -n[e - 1 - l] : -(1 - (s - l)) * n[e - 1 - l] - (1 - (u - s)) * n[e - 1 - u]
                            }
                            t[o] = e % 2 == 1 ? n[o - 1] : (n[o - 2] + n[o - 1]) / 2, u.curve = t, c.curve = r
                        }
                        g = n, v && (r(g) && null === m ? m = e(i, h) : null !== m && (m(), m = null))
                    },
                    get inputs() {
                        return [h]
                    },
                    get numberOfInputs() {
                        return u.numberOfInputs
                    },
                    get numberOfOutputs() {
                        return u.numberOfOutputs
                    },
                    get oversample() {
                        return u.oversample
                    },
                    set oversample(e) {
                        u.oversample = e, c.oversample = e
                    },
                    addEventListener: (...e) => h.addEventListener(e[0], e[1], e[2]),
                    dispatchEvent: (...e) => h.dispatchEvent(e[0]),
                    removeEventListener: (...e) => h.removeEventListener(e[0], e[1], e[2])
                };
                return null !== a && (y.curve = a instanceof Float32Array ? a : new Float32Array(a)), s !== y.oversample && (y.oversample = s), o(Fe(y, f), (() => {
                    h.connect(u).connect(f), h.connect(d).connect(c).connect(p).connect(f), v = !0, r(g) && (m = e(i, h))
                }), (() => {
                    h.disconnect(u), u.disconnect(f), h.disconnect(d), d.disconnect(c), c.disconnect(p), p.disconnect(f), v = !1, null !== m && (m(), m = null)
                }))
            })(Dn, Se, Be, Je, en),
            In = ((e, t, n, r, o, i, a) => (s, l) => {
                const u = s.createWaveShaper();
                if (null !== i && "webkitAudioContext" === i.name && void 0 === s.createGain().gain.automationRate) return n(s, l);
                Re(u, l);
                const c = null === l.curve || l.curve instanceof Float32Array ? l.curve : new Float32Array(l.curve);
                if (null !== c && c.length < 2) throw t();
                Pe(u, {
                    curve: c
                }, "curve"), Pe(u, l, "oversample");
                let h = null,
                    d = !1;
                return a(u, "curve", (e => () => e.call(u)), (t => n => (t.call(u, n), d && (r(n) && null === h ? h = e(s, u) : r(n) || null === h || (h(), h = null)), n))), o(u, (() => {
                    d = !0, r(u.curve) && (h = e(s, u))
                }), (() => {
                    d = !1, null !== h && (h(), h = null)
                }))
            })(Dn, Se, Nn, Je, en, Tt, et),
            Ln = ((e, t, n, r, o, i, a, s, l, u) => (c, {
                coneInnerAngle: h,
                coneOuterAngle: d,
                coneOuterGain: f,
                distanceModel: p,
                maxDistance: m,
                orientationX: v,
                orientationY: g,
                orientationZ: y,
                panningModel: b,
                positionX: w,
                positionY: _,
                positionZ: x,
                refDistance: E,
                rolloffFactor: S,
                ...k
            }) => {
                const T = c.createPanner();
                if (k.channelCount > 2) throw a();
                if ("max" === k.channelCountMode) throw a();
                Re(T, k);
                const C = {
                        channelCount: 1,
                        channelCountMode: "explicit",
                        channelInterpretation: "discrete"
                    },
                    O = n(c, {
                        ...C,
                        channelInterpretation: "speakers",
                        numberOfInputs: 6
                    }),
                    A = r(c, {
                        ...k,
                        gain: 1
                    }),
                    P = r(c, {
                        ...C,
                        gain: 1
                    }),
                    R = r(c, {
                        ...C,
                        gain: 0
                    }),
                    M = r(c, {
                        ...C,
                        gain: 0
                    }),
                    D = r(c, {
                        ...C,
                        gain: 0
                    }),
                    N = r(c, {
                        ...C,
                        gain: 0
                    }),
                    I = r(c, {
                        ...C,
                        gain: 0
                    }),
                    L = o(c, 256, 6, 1),
                    q = i(c, {
                        ...C,
                        curve: new Float32Array([1, 1]),
                        oversample: "none"
                    });
                let j = [v, g, y],
                    F = [w, _, x];
                const V = new Float32Array(1);
                L.onaudioprocess = ({
                    inputBuffer: e
                }) => {
                    const t = [l(e, V, 0), l(e, V, 1), l(e, V, 2)];
                    t.some(((e, t) => e !== j[t])) && (T.setOrientation(...t), j = t);
                    const n = [l(e, V, 3), l(e, V, 4), l(e, V, 5)];
                    n.some(((e, t) => e !== F[t])) && (T.setPosition(...n), F = n)
                }, Object.defineProperty(R.gain, "defaultValue", {
                    get: () => 0
                }), Object.defineProperty(M.gain, "defaultValue", {
                    get: () => 0
                }), Object.defineProperty(D.gain, "defaultValue", {
                    get: () => 0
                }), Object.defineProperty(N.gain, "defaultValue", {
                    get: () => 0
                }), Object.defineProperty(I.gain, "defaultValue", {
                    get: () => 0
                });
                const B = {
                    get bufferSize() {},
                    get channelCount() {
                        return T.channelCount
                    },
                    set channelCount(e) {
                        if (e > 2) throw a();
                        A.channelCount = e, T.channelCount = e
                    },
                    get channelCountMode() {
                        return T.channelCountMode
                    },
                    set channelCountMode(e) {
                        if ("max" === e) throw a();
                        A.channelCountMode = e, T.channelCountMode = e
                    },
                    get channelInterpretation() {
                        return T.channelInterpretation
                    },
                    set channelInterpretation(e) {
                        A.channelInterpretation = e, T.channelInterpretation = e
                    },
                    get coneInnerAngle() {
                        return T.coneInnerAngle
                    },
                    set coneInnerAngle(e) {
                        T.coneInnerAngle = e
                    },
                    get coneOuterAngle() {
                        return T.coneOuterAngle
                    },
                    set coneOuterAngle(e) {
                        T.coneOuterAngle = e
                    },
                    get coneOuterGain() {
                        return T.coneOuterGain
                    },
                    set coneOuterGain(e) {
                        if (e < 0 || e > 1) throw t();
                        T.coneOuterGain = e
                    },
                    get context() {
                        return T.context
                    },
                    get distanceModel() {
                        return T.distanceModel
                    },
                    set distanceModel(e) {
                        T.distanceModel = e
                    },
                    get inputs() {
                        return [A]
                    },
                    get maxDistance() {
                        return T.maxDistance
                    },
                    set maxDistance(e) {
                        if (e < 0) throw new RangeError;
                        T.maxDistance = e
                    },
                    get numberOfInputs() {
                        return T.numberOfInputs
                    },
                    get numberOfOutputs() {
                        return T.numberOfOutputs
                    },
                    get orientationX() {
                        return P.gain
                    },
                    get orientationY() {
                        return R.gain
                    },
                    get orientationZ() {
                        return M.gain
                    },
                    get panningModel() {
                        return T.panningModel
                    },
                    set panningModel(e) {
                        T.panningModel = e
                    },
                    get positionX() {
                        return D.gain
                    },
                    get positionY() {
                        return N.gain
                    },
                    get positionZ() {
                        return I.gain
                    },
                    get refDistance() {
                        return T.refDistance
                    },
                    set refDistance(e) {
                        if (e < 0) throw new RangeError;
                        T.refDistance = e
                    },
                    get rolloffFactor() {
                        return T.rolloffFactor
                    },
                    set rolloffFactor(e) {
                        if (e < 0) throw new RangeError;
                        T.rolloffFactor = e
                    },
                    addEventListener: (...e) => A.addEventListener(e[0], e[1], e[2]),
                    dispatchEvent: (...e) => A.dispatchEvent(e[0]),
                    removeEventListener: (...e) => A.removeEventListener(e[0], e[1], e[2])
                };
                return h !== B.coneInnerAngle && (B.coneInnerAngle = h), d !== B.coneOuterAngle && (B.coneOuterAngle = d), f !== B.coneOuterGain && (B.coneOuterGain = f), p !== B.distanceModel && (B.distanceModel = p), m !== B.maxDistance && (B.maxDistance = m), v !== B.orientationX.value && (B.orientationX.value = v), g !== B.orientationY.value && (B.orientationY.value = g), y !== B.orientationZ.value && (B.orientationZ.value = y), b !== B.panningModel && (B.panningModel = b), w !== B.positionX.value && (B.positionX.value = w), _ !== B.positionY.value && (B.positionY.value = _), x !== B.positionZ.value && (B.positionZ.value = x), E !== B.refDistance && (B.refDistance = E), S !== B.rolloffFactor && (B.rolloffFactor = S), 1 === j[0] && 0 === j[1] && 0 === j[2] || T.setOrientation(...j), 0 === F[0] && 0 === F[1] && 0 === F[2] || T.setPosition(...F), u(Fe(B, T), (() => {
                    A.connect(T), e(A, q, 0, 0), q.connect(P).connect(O, 0, 0), q.connect(R).connect(O, 0, 1), q.connect(M).connect(O, 0, 2), q.connect(D).connect(O, 0, 3), q.connect(N).connect(O, 0, 4), q.connect(I).connect(O, 0, 5), O.connect(L).connect(c.destination)
                }), (() => {
                    A.disconnect(T), s(A, q, 0, 0), q.disconnect(P), P.disconnect(O), q.disconnect(R), R.disconnect(O), q.disconnect(M), M.disconnect(O), q.disconnect(D), D.disconnect(O), q.disconnect(N), N.disconnect(O), q.disconnect(I), I.disconnect(O), O.disconnect(L), L.disconnect(c.destination)
                }))
            })(Y, Se, nn, Be, We, In, He, K, Ke, en),
            qn = (e => (t, n) => {
                const r = t.createPanner();
                return void 0 === r.orientationX ? e(t, n) : (Re(r, n), De(r, n, "orientationX"), De(r, n, "orientationY"), De(r, n, "orientationZ"), De(r, n, "positionX"), De(r, n, "positionY"), De(r, n, "positionZ"), Pe(r, n, "coneInnerAngle"), Pe(r, n, "coneOuterAngle"), Pe(r, n, "coneOuterGain"), Pe(r, n, "distanceModel"), Pe(r, n, "maxDistance"), Pe(r, n, "panningModel"), Pe(r, n, "refDistance"), Pe(r, n, "rolloffFactor"), r)
            })(Ln),
            jn = ((e, t, n, r, o, i, a, s, l, u) => () => {
                const c = new WeakMap;
                let h = null;
                return {
                    render(d, f) {
                        const p = c.get(f);
                        return void 0 !== p ? Promise.resolve(p) : (async (d, f) => {
                            let p = null,
                                m = i(d);
                            const v = {
                                    channelCount: m.channelCount,
                                    channelCountMode: m.channelCountMode,
                                    channelInterpretation: m.channelInterpretation
                                },
                                g = {
                                    ...v,
                                    coneInnerAngle: m.coneInnerAngle,
                                    coneOuterAngle: m.coneOuterAngle,
                                    coneOuterGain: m.coneOuterGain,
                                    distanceModel: m.distanceModel,
                                    maxDistance: m.maxDistance,
                                    panningModel: m.panningModel,
                                    refDistance: m.refDistance,
                                    rolloffFactor: m.rolloffFactor
                                },
                                y = A(m, f);
                            if ("bufferSize" in m) p = r(f, {
                                ...v,
                                gain: 1
                            });
                            else if (!y) {
                                const e = {
                                    ...g,
                                    orientationX: m.orientationX.value,
                                    orientationY: m.orientationY.value,
                                    orientationZ: m.orientationZ.value,
                                    positionX: m.positionX.value,
                                    positionY: m.positionY.value,
                                    positionZ: m.positionZ.value
                                };
                                m = o(f, e)
                            }
                            if (c.set(f, null === p ? m : p), null !== p) {
                                if (null === h) {
                                    if (null === a) throw new Error("Missing the native OfflineAudioContext constructor.");
                                    const e = new a(6, d.context.length, f.sampleRate),
                                        r = t(e, {
                                            channelCount: 1,
                                            channelCountMode: "explicit",
                                            channelInterpretation: "speakers",
                                            numberOfInputs: 6
                                        });
                                    r.connect(e.destination), h = (async () => {
                                        const t = await Promise.all([d.orientationX, d.orientationY, d.orientationZ, d.positionX, d.positionY, d.positionZ].map((async (t, r) => {
                                            const o = n(e, {
                                                channelCount: 1,
                                                channelCountMode: "explicit",
                                                channelInterpretation: "discrete",
                                                offset: 0 === r ? 1 : 0
                                            });
                                            return await s(e, t, o.offset), o
                                        })));
                                        for (let e = 0; e < 6; e += 1) t[e].connect(r, 0, e), t[e].start(0);
                                        return u(e)
                                    })()
                                }
                                const e = await h,
                                    i = r(f, {
                                        ...v,
                                        gain: 1
                                    });
                                await l(d, f, i);
                                const c = [];
                                for (let t = 0; t < e.numberOfChannels; t += 1) c.push(e.getChannelData(t));
                                let m = [c[0][0], c[1][0], c[2][0]],
                                    y = [c[3][0], c[4][0], c[5][0]],
                                    b = r(f, {
                                        ...v,
                                        gain: 1
                                    }),
                                    w = o(f, {
                                        ...g,
                                        orientationX: m[0],
                                        orientationY: m[1],
                                        orientationZ: m[2],
                                        positionX: y[0],
                                        positionY: y[1],
                                        positionZ: y[2]
                                    });
                                i.connect(b).connect(w.inputs[0]), w.connect(p);
                                for (let t = 128; t < e.length; t += 128) {
                                    const e = [c[0][t], c[1][t], c[2][t]],
                                        n = [c[3][t], c[4][t], c[5][t]];
                                    if (e.some(((e, t) => e !== m[t])) || n.some(((e, t) => e !== y[t]))) {
                                        m = e, y = n;
                                        const a = t / f.sampleRate;
                                        b.gain.setValueAtTime(0, a), b = r(f, {
                                            ...v,
                                            gain: 0
                                        }), w = o(f, {
                                            ...g,
                                            orientationX: m[0],
                                            orientationY: m[1],
                                            orientationZ: m[2],
                                            positionX: y[0],
                                            positionY: y[1],
                                            positionZ: y[2]
                                        }), b.gain.setValueAtTime(1, a), i.connect(b).connect(w.inputs[0]), w.connect(p)
                                    }
                                }
                                return p
                            }
                            return y ? (await e(f, d.orientationX, m.orientationX), await e(f, d.orientationY, m.orientationY), await e(f, d.orientationZ, m.orientationZ), await e(f, d.positionX, m.positionX), await e(f, d.positionY, m.positionY), await e(f, d.positionZ, m.positionZ)) : (await s(f, d.orientationX, m.orientationX), await s(f, d.orientationY, m.orientationY), await s(f, d.orientationZ, m.orientationZ), await s(f, d.positionX, m.positionX), await s(f, d.positionY, m.positionY), await s(f, d.positionZ, m.positionZ)), Q(m) ? await l(d, f, m.inputs[0]) : await l(d, f, m), m
                        })(d, f)
                    }
                }
            })(Ut, nn, un, Be, qn, J, xt, Ht, yt, En),
            Fn = ((e, t, n, r, o, i, a) => class extends e {
                constructor(e, s) {
                    const l = o(e),
                        u = {
                            ...Ye,
                            ...s
                        },
                        c = n(l, u),
                        h = i(l);
                    super(e, !1, c, h ? r() : null), this._nativePannerNode = c, this._orientationX = t(this, h, c.orientationX, I, N), this._orientationY = t(this, h, c.orientationY, I, N), this._orientationZ = t(this, h, c.orientationZ, I, N), this._positionX = t(this, h, c.positionX, I, N), this._positionY = t(this, h, c.positionY, I, N), this._positionZ = t(this, h, c.positionZ, I, N), a(this, 1)
                }
                get coneInnerAngle() {
                    return this._nativePannerNode.coneInnerAngle
                }
                set coneInnerAngle(e) {
                    this._nativePannerNode.coneInnerAngle = e
                }
                get coneOuterAngle() {
                    return this._nativePannerNode.coneOuterAngle
                }
                set coneOuterAngle(e) {
                    this._nativePannerNode.coneOuterAngle = e
                }
                get coneOuterGain() {
                    return this._nativePannerNode.coneOuterGain
                }
                set coneOuterGain(e) {
                    this._nativePannerNode.coneOuterGain = e
                }
                get distanceModel() {
                    return this._nativePannerNode.distanceModel
                }
                set distanceModel(e) {
                    this._nativePannerNode.distanceModel = e
                }
                get maxDistance() {
                    return this._nativePannerNode.maxDistance
                }
                set maxDistance(e) {
                    this._nativePannerNode.maxDistance = e
                }
                get orientationX() {
                    return this._orientationX
                }
                get orientationY() {
                    return this._orientationY
                }
                get orientationZ() {
                    return this._orientationZ
                }
                get panningModel() {
                    return this._nativePannerNode.panningModel
                }
                set panningModel(e) {
                    this._nativePannerNode.panningModel = e
                }
                get positionX() {
                    return this._positionX
                }
                get positionY() {
                    return this._positionY
                }
                get positionZ() {
                    return this._positionZ
                }
                get refDistance() {
                    return this._nativePannerNode.refDistance
                }
                set refDistance(e) {
                    this._nativePannerNode.refDistance = e
                }
                get rolloffFactor() {
                    return this._nativePannerNode.rolloffFactor
                }
                set rolloffFactor(e) {
                    this._nativePannerNode.rolloffFactor = e
                }
            })(Rt, Qt, qn, jn, wt, Et, Kt),
            Vn = (e => (t, {
                disableNormalization: n,
                imag: r,
                real: o
            }) => {
                const i = r instanceof Float32Array ? r : new Float32Array(r),
                    a = o instanceof Float32Array ? o : new Float32Array(o),
                    s = t.createPeriodicWave(a, i, {
                        disableNormalization: n
                    });
                if (Array.from(r).length < 2) throw e();
                return s
            })(R),
            Bn = ((e, t, n, r) => class r {
                constructor(r, o) {
                    const i = t(r),
                        a = (e => {
                            const {
                                imag: t,
                                real: n
                            } = e;
                            return void 0 === t ? void 0 === n ? {
                                ...e,
                                imag: [0, 0],
                                real: [0, 0]
                            } : {
                                ...e,
                                imag: Array.from(n, (() => 0)),
                                real: n
                            } : void 0 === n ? {
                                ...e,
                                imag: t,
                                real: Array.from(t, (() => 0))
                            } : {
                                ...e,
                                imag: t,
                                real: n
                            }
                        })({
                            ...$e,
                            ...o
                        }),
                        s = e(i, a);
                    return n.add(s), s
                }
                static[Symbol.hasInstance](e) {
                    return null !== e && "object" == typeof e && Object.getPrototypeOf(e) === r.prototype || n.has(e)
                }
            })(Vn, wt, new WeakSet),
            zn = ((e, t, n, r, o, i) => {
                const a = 16385,
                    s = new Float32Array([1, 1]),
                    l = Math.PI / 2,
                    u = {
                        channelCount: 1,
                        channelCountMode: "explicit",
                        channelInterpretation: "discrete"
                    },
                    c = {
                        ...u,
                        oversample: "none"
                    },
                    h = (e, i, h, d, f) => {
                        if (1 === i) return ((e, t, o, i) => {
                            const h = new Float32Array(a),
                                d = new Float32Array(a);
                            for (let e = 0; e < a; e += 1) {
                                const t = e / 16384 * l;
                                h[e] = Math.cos(t), d[e] = Math.sin(t)
                            }
                            const f = n(e, {
                                    ...u,
                                    gain: 0
                                }),
                                p = r(e, {
                                    ...c,
                                    curve: h
                                }),
                                m = r(e, {
                                    ...c,
                                    curve: s
                                }),
                                v = n(e, {
                                    ...u,
                                    gain: 0
                                }),
                                g = r(e, {
                                    ...c,
                                    curve: d
                                });
                            return {
                                connectGraph() {
                                    t.connect(f), t.connect(void 0 === m.inputs ? m : m.inputs[0]), t.connect(v), m.connect(o), o.connect(void 0 === p.inputs ? p : p.inputs[0]), o.connect(void 0 === g.inputs ? g : g.inputs[0]), p.connect(f.gain), g.connect(v.gain), f.connect(i, 0, 0), v.connect(i, 0, 1)
                                },
                                disconnectGraph() {
                                    t.disconnect(f), t.disconnect(void 0 === m.inputs ? m : m.inputs[0]), t.disconnect(v), m.disconnect(o), o.disconnect(void 0 === p.inputs ? p : p.inputs[0]), o.disconnect(void 0 === g.inputs ? g : g.inputs[0]), p.disconnect(f.gain), g.disconnect(v.gain), f.disconnect(i, 0, 0), v.disconnect(i, 0, 1)
                                }
                            }
                        })(e, h, d, f);
                        if (2 === i) return ((e, o, i, h) => {
                            const d = new Float32Array(a),
                                f = new Float32Array(a),
                                p = new Float32Array(a),
                                m = new Float32Array(a),
                                v = Math.floor(8192.5);
                            for (let e = 0; e < a; e += 1)
                                if (e > v) {
                                    const t = (e - v) / (16384 - v) * l;
                                    d[e] = Math.cos(t), f[e] = Math.sin(t), p[e] = 0, m[e] = 1
                                } else {
                                    const t = e / (16384 - v) * l;
                                    d[e] = 1, f[e] = 0, p[e] = Math.cos(t), m[e] = Math.sin(t)
                                } const g = t(e, {
                                    channelCount: 2,
                                    channelCountMode: "explicit",
                                    channelInterpretation: "discrete",
                                    numberOfOutputs: 2
                                }),
                                y = n(e, {
                                    ...u,
                                    gain: 0
                                }),
                                b = r(e, {
                                    ...c,
                                    curve: d
                                }),
                                w = n(e, {
                                    ...u,
                                    gain: 0
                                }),
                                _ = r(e, {
                                    ...c,
                                    curve: f
                                }),
                                x = r(e, {
                                    ...c,
                                    curve: s
                                }),
                                E = n(e, {
                                    ...u,
                                    gain: 0
                                }),
                                S = r(e, {
                                    ...c,
                                    curve: p
                                }),
                                k = n(e, {
                                    ...u,
                                    gain: 0
                                }),
                                T = r(e, {
                                    ...c,
                                    curve: m
                                });
                            return {
                                connectGraph() {
                                    o.connect(g), o.connect(void 0 === x.inputs ? x : x.inputs[0]), g.connect(y, 0), g.connect(w, 0), g.connect(E, 1), g.connect(k, 1), x.connect(i), i.connect(void 0 === b.inputs ? b : b.inputs[0]), i.connect(void 0 === _.inputs ? _ : _.inputs[0]), i.connect(void 0 === S.inputs ? S : S.inputs[0]), i.connect(void 0 === T.inputs ? T : T.inputs[0]), b.connect(y.gain), _.connect(w.gain), S.connect(E.gain), T.connect(k.gain), y.connect(h, 0, 0), E.connect(h, 0, 0), w.connect(h, 0, 1), k.connect(h, 0, 1)
                                },
                                disconnectGraph() {
                                    o.disconnect(g), o.disconnect(void 0 === x.inputs ? x : x.inputs[0]), g.disconnect(y, 0), g.disconnect(w, 0), g.disconnect(E, 1), g.disconnect(k, 1), x.disconnect(i), i.disconnect(void 0 === b.inputs ? b : b.inputs[0]), i.disconnect(void 0 === _.inputs ? _ : _.inputs[0]), i.disconnect(void 0 === S.inputs ? S : S.inputs[0]), i.disconnect(void 0 === T.inputs ? T : T.inputs[0]), b.disconnect(y.gain), _.disconnect(w.gain), S.disconnect(E.gain), T.disconnect(k.gain), y.disconnect(h, 0, 0), E.disconnect(h, 0, 0), w.disconnect(h, 0, 1), k.disconnect(h, 0, 1)
                                }
                            }
                        })(e, h, d, f);
                        throw o()
                    };
                return (t, {
                    channelCount: r,
                    channelCountMode: a,
                    pan: s,
                    ...l
                }) => {
                    if ("max" === a) throw o();
                    const u = e(t, {
                            ...l,
                            channelCount: 1,
                            channelCountMode: a,
                            numberOfInputs: 2
                        }),
                        c = n(t, {
                            ...l,
                            channelCount: r,
                            channelCountMode: a,
                            gain: 1
                        }),
                        d = n(t, {
                            channelCount: 1,
                            channelCountMode: "explicit",
                            channelInterpretation: "discrete",
                            gain: s
                        });
                    let {
                        connectGraph: f,
                        disconnectGraph: p
                    } = h(t, r, c, d, u);
                    Object.defineProperty(d.gain, "defaultValue", {
                        get: () => 0
                    }), Object.defineProperty(d.gain, "maxValue", {
                        get: () => 1
                    }), Object.defineProperty(d.gain, "minValue", {
                        get: () => -1
                    });
                    const m = {
                        get bufferSize() {},
                        get channelCount() {
                            return c.channelCount
                        },
                        set channelCount(e) {
                            c.channelCount !== e && (v && p(), ({
                                connectGraph: f,
                                disconnectGraph: p
                            } = h(t, e, c, d, u)), v && f()), c.channelCount = e
                        },
                        get channelCountMode() {
                            return c.channelCountMode
                        },
                        set channelCountMode(e) {
                            if ("clamped-max" === e || "max" === e) throw o();
                            c.channelCountMode = e
                        },
                        get channelInterpretation() {
                            return c.channelInterpretation
                        },
                        set channelInterpretation(e) {
                            c.channelInterpretation = e
                        },
                        get context() {
                            return c.context
                        },
                        get inputs() {
                            return [c]
                        },
                        get numberOfInputs() {
                            return c.numberOfInputs
                        },
                        get numberOfOutputs() {
                            return c.numberOfOutputs
                        },
                        get pan() {
                            return d.gain
                        },
                        addEventListener: (...e) => c.addEventListener(e[0], e[1], e[2]),
                        dispatchEvent: (...e) => c.dispatchEvent(e[0]),
                        removeEventListener: (...e) => c.removeEventListener(e[0], e[1], e[2])
                    };
                    let v = !1;
                    return i(Fe(m, u), (() => {
                        f(), v = !0
                    }), (() => {
                        p(), v = !1
                    }))
                }
            })(nn, je, Be, In, He, en),
            Un = ((e, t) => (n, r) => {
                const o = r.channelCountMode;
                if ("clamped-max" === o) throw t();
                if (void 0 === n.createStereoPanner) return e(n, r);
                const i = n.createStereoPanner();
                return Re(i, r), De(i, r, "pan"), Object.defineProperty(i, "channelCountMode", {
                    get: () => o,
                    set: e => {
                        if (e !== o) throw t()
                    }
                }), i
            })(zn, He),
            Wn = ((e, t, n, r, o) => () => {
                const i = new WeakMap;
                return {
                    render(a, s) {
                        const l = i.get(s);
                        return void 0 !== l ? Promise.resolve(l) : (async (a, s) => {
                            let l = n(a);
                            const u = A(l, s);
                            if (!u) {
                                const e = {
                                    channelCount: l.channelCount,
                                    channelCountMode: l.channelCountMode,
                                    channelInterpretation: l.channelInterpretation,
                                    pan: l.pan.value
                                };
                                l = t(s, e)
                            }
                            return i.set(s, l), u ? await e(s, a.pan, l.pan) : await r(s, a.pan, l.pan), Q(l) ? await o(a, s, l.inputs[0]) : await o(a, s, l), l
                        })(a, s)
                    }
                }
            })(Ut, Un, J, Ht, yt),
            Hn = ((e, t, n, r, o, i) => class extends e {
                constructor(e, a) {
                    const s = o(e),
                        l = {
                            ...Ze,
                            ...a
                        },
                        u = n(s, l),
                        c = i(s);
                    super(e, !1, u, c ? r() : null), this._pan = t(this, c, u.pan)
                }
                get pan() {
                    return this._pan
                }
            })(Rt, Qt, Un, Wn, wt, Et),
            Gn = ((e, t, n) => () => {
                const r = new WeakMap;
                return {
                    render(o, i) {
                        const a = r.get(i);
                        return void 0 !== a ? Promise.resolve(a) : (async (o, i) => {
                            let a = t(o);
                            if (!A(a, i)) {
                                const t = {
                                    channelCount: a.channelCount,
                                    channelCountMode: a.channelCountMode,
                                    channelInterpretation: a.channelInterpretation,
                                    curve: a.curve,
                                    oversample: a.oversample
                                };
                                a = e(i, t)
                            }
                            return r.set(i, a), Q(a) ? await n(o, i, a.inputs[0]) : await n(o, i, a), a
                        })(o, i)
                    }
                }
            })(In, J, yt),
            Qn = ((e, t, n, r, o, i, a) => class extends e {
                constructor(e, t) {
                    const s = o(e),
                        l = {
                            ...Xe,
                            ...t
                        },
                        u = n(s, l);
                    super(e, !0, u, i(s) ? r() : null), this._isCurveNullified = !1, this._nativeWaveShaperNode = u, a(this, 1)
                }
                get curve() {
                    return this._isCurveNullified ? null : this._nativeWaveShaperNode.curve
                }
                set curve(e) {
                    if (null === e) this._isCurveNullified = !0, this._nativeWaveShaperNode.curve = new Float32Array([0, 0]);
                    else {
                        if (e.length < 2) throw t();
                        this._isCurveNullified = !1, this._nativeWaveShaperNode.curve = e
                    }
                }
                get oversample() {
                    return this._nativeWaveShaperNode.oversample
                }
                set oversample(e) {
                    this._nativeWaveShaperNode.oversample = e
                }
            })(Rt, Se, In, Gn, wt, Et, Kt),
            Yn = (e => null !== e && e.isSecureContext)(mt),
            $n = (e => (t, n, r) => {
                Object.defineProperties(e, {
                    currentFrame: {
                        configurable: !0,
                        get: () => Math.round(t * n)
                    },
                    currentTime: {
                        configurable: !0,
                        get: () => t
                    }
                });
                try {
                    return r()
                } finally {
                    null !== e && (delete e.currentFrame, delete e.currentTime)
                }
            })(mt),
            Zn = new WeakMap,
            Xn = ((e, t) => n => {
                let r = e.get(n);
                if (void 0 !== r) return r;
                if (null === t) throw new Error("Missing the native OfflineAudioContext constructor.");
                return r = new t(1, 1, 44100), e.set(n, r), r
            })(Zn, xt),
            Kn = Yn ? ((e, t, n, r, o, i, a, s, l, u, c, h, d) => {
                let p = 0;
                return (m, v, w = {
                    credentials: "omit"
                }) => {
                    const _ = c.get(m);
                    if (void 0 !== _ && _.has(v)) return Promise.resolve();
                    const x = u.get(m);
                    if (void 0 !== x) {
                        const e = x.get(v);
                        if (void 0 !== e) return e
                    }
                    const E = i(m),
                        S = void 0 === E.audioWorklet ? o(v).then((([e, t]) => {
                            const [r, o] = g(e, t);
                            return n(`${r};((a,b)=>{(a[b]=a[b]||[]).push((AudioWorkletProcessor,global,registerProcessor,sampleRate,self,window)=>{${o}\n})})(window,'_AWGS')`)
                        })).then((() => {
                            const e = d._AWGS.pop();
                            if (void 0 === e) throw new SyntaxError;
                            r(E.currentTime, E.sampleRate, (() => e(class {}, void 0, ((e, n) => {
                                if ("" === e.trim()) throw t();
                                const r = f.get(E);
                                if (void 0 !== r) {
                                    if (r.has(e)) throw t();
                                    b(n), y(n.parameterDescriptors), r.set(e, n)
                                } else b(n), y(n.parameterDescriptors), f.set(E, new Map([
                                    [e, n]
                                ]))
                            }), E.sampleRate, void 0, void 0)))
                        })) : Promise.all([o(v), Promise.resolve(e(h, h))]).then((([
                            [e, t], n
                        ]) => {
                            const r = p + 1;
                            p = r;
                            const [o, i] = g(e, t), u = new Blob([`${o};((AudioWorkletProcessor,registerProcessor)=>{${i}\n})(${n?"AudioWorkletProcessor":"class extends AudioWorkletProcessor {__b=new WeakSet();constructor(){super();(p=>p.postMessage=(q=>(m,t)=>q.call(p,m,t?t.filter(u=>!this.__b.has(u)):t))(p.postMessage))(this.port)}}"},(n,p)=>registerProcessor(n,class extends p{${n?"":"__c = (a) => a.forEach(e=>this.__b.add(e.buffer));"}process(i,o,p){${n?"":"i.forEach(this.__c);o.forEach(this.__c);this.__c(Object.values(p));"}return super.process(i.map(j=>j.some(k=>k.length===0)?[]:j),o,p)}}));registerProcessor('__sac${r}',class extends AudioWorkletProcessor{process(){return !1}})`], {
                                type: "application/javascript; charset=utf-8"
                            }), c = URL.createObjectURL(u);
                            return E.audioWorklet.addModule(c, w).then((() => {
                                if (s(E)) return E;
                                const e = a(E);
                                return e.audioWorklet.addModule(c, w).then((() => e))
                            })).then((e => {
                                if (null === l) throw new SyntaxError;
                                try {
                                    new l(e, `__sac${r}`)
                                } catch {
                                    throw new SyntaxError
                                }
                            })).finally((() => URL.revokeObjectURL(c)))
                        }));
                    return void 0 === x ? u.set(m, new Map([
                        [v, S]
                    ])) : x.set(v, S), S.then((() => {
                        const e = c.get(m);
                        void 0 === e ? c.set(m, new Set([v])) : e.add(v)
                    })).finally((() => {
                        const e = u.get(m);
                        void 0 !== e && e.delete(v)
                    })), S
                }
            })(dt, He, (e => t => new Promise(((n, r) => {
                if (null === e) return void r(new SyntaxError);
                const o = e.document.head;
                if (null === o) r(new SyntaxError);
                else {
                    const i = e.document.createElement("script"),
                        a = new Blob([t], {
                            type: "application/javascript"
                        }),
                        s = URL.createObjectURL(a),
                        l = e.onerror,
                        u = () => {
                            e.onerror = l, URL.revokeObjectURL(s)
                        };
                    e.onerror = (t, n, o, i, a) => n === s || n === e.location.href && 1 === o && 1 === i ? (u(), r(a), !1) : null !== l ? l(t, n, o, i, a) : void 0, i.onerror = () => {
                        u(), r(new SyntaxError)
                    }, i.onload = () => {
                        u(), n()
                    }, i.src = s, i.type = "module", o.appendChild(i)
                }
            })))(mt), $n, (async e => {
                try {
                    const t = await fetch(e);
                    if (t.ok) return [await t.text(), t.url]
                } catch {}
                throw new DOMException("", "AbortError")
            }), wt, Xn, Et, Pt, new WeakMap, new WeakMap, ((e, t) => async () => {
                if (null === e) return !0;
                if (null === t) return !1;
                const n = new Blob(['class A extends AudioWorkletProcessor{process(i){this.port.postMessage(i,[i[0][0].buffer])}}registerProcessor("a",A)'], {
                        type: "application/javascript; charset=utf-8"
                    }),
                    r = new t(1, 128, 44100),
                    o = URL.createObjectURL(n);
                let i = !1,
                    a = !1;
                try {
                    await r.audioWorklet.addModule(o);
                    const t = new e(r, "a", {
                            numberOfOutputs: 0
                        }),
                        n = r.createOscillator();
                    t.port.onmessage = () => i = !0, t.onprocessorerror = () => a = !0, n.connect(t), n.start(0), await r.startRendering()
                } catch {} finally {
                    URL.revokeObjectURL(o)
                }
                return i && !a
            })(Pt, xt), mt) : void 0,
            Jn = ((e, t) => n => e(n) || t(n))(Ct, Et),
            er = ((e, t, n, r, o, i, a, s, l, u, c) => (n, r) => {
                const h = a(n) ? n : i(n);
                if (o.has(r)) {
                    const e = new DOMException("", "DataCloneError");
                    return Promise.reject(e)
                }
                try {
                    o.add(r)
                } catch {}
                return t(l, (() => l(h))) ? h.decodeAudioData(r).then((n => (be(r).catch((() => {})), t(s, (() => s(n))) || c(n), e.add(n), n))) : new Promise(((t, n) => {
                    const o = async () => {
                        try {
                            await be(r)
                        } catch {}
                    }, i = e => {
                        n(e), o()
                    };
                    try {
                        h.decodeAudioData(r, (n => {
                            "function" != typeof n.copyFromChannel && (u(n), M(n)), e.add(n), o().then((() => t(n)))
                        }), (e => {
                            i(null === e ? new DOMException("", "EncodingError") : e)
                        }))
                    } catch (e) {
                        i(e)
                    }
                }))
            })(Nt, dt, 0, 0, new WeakSet, wt, Jn, P, Ae, jt, Ft),
            tr = ((e, t, n, r, o, i, a, s, l, u, c, h, d, f, p, m, v, g, y, b) => class extends p {
                constructor(t, n) {
                    super(t, n), this._nativeContext = t, this._audioWorklet = void 0 === e ? void 0 : {
                        addModule: (t, n) => e(this, t, n)
                    }
                }
                get audioWorklet() {
                    return this._audioWorklet
                }
                createAnalyser() {
                    return new t(this)
                }
                createBiquadFilter() {
                    return new o(this)
                }
                createBuffer(e, t, r) {
                    return new n({
                        length: t,
                        numberOfChannels: e,
                        sampleRate: r
                    })
                }
                createBufferSource() {
                    return new r(this)
                }
                createChannelMerger(e = 6) {
                    return new i(this, {
                        numberOfInputs: e
                    })
                }
                createChannelSplitter(e = 6) {
                    return new a(this, {
                        numberOfOutputs: e
                    })
                }
                createConstantSource() {
                    return new s(this)
                }
                createConvolver() {
                    return new l(this)
                }
                createDelay(e = 1) {
                    return new c(this, {
                        maxDelayTime: e
                    })
                }
                createDynamicsCompressor() {
                    return new h(this)
                }
                createGain() {
                    return new d(this)
                }
                createIIRFilter(e, t) {
                    return new f(this, {
                        feedback: t,
                        feedforward: e
                    })
                }
                createOscillator() {
                    return new m(this)
                }
                createPanner() {
                    return new v(this)
                }
                createPeriodicWave(e, t, n = {
                    disableNormalization: !1
                }) {
                    return new g(this, {
                        ...n,
                        imag: t,
                        real: e
                    })
                }
                createStereoPanner() {
                    return new y(this)
                }
                createWaveShaper() {
                    return new b(this)
                }
                decodeAudioData(e, t, n) {
                    return u(this._nativeContext, e).then((e => ("function" == typeof t && t(e), e)), (e => {
                        throw "function" == typeof n && n(e), e
                    }))
                }
            })(Kn, Dt, Vt, $t, Jt, on, sn, hn, pn, er, vn, bn, _n, Tn, An, Mn, Fn, Bn, Hn, Qn),
            nr = ((e, t, n, r) => class extends e {
                constructor(e, t) {
                    const o = n(e),
                        i = ((e, t) => e.createMediaElementSource(t.mediaElement))(o, t);
                    if (r(o)) throw TypeError();
                    super(e, !0, i, null), this._nativeMediaElementAudioSourceNode = i
                }
                get mediaElement() {
                    return this._nativeMediaElementAudioSourceNode.mediaElement
                }
            })(Rt, 0, wt, Et),
            rr = ((e, t, n, r) => class extends e {
                constructor(e, t) {
                    const o = n(e);
                    if (r(o)) throw new TypeError;
                    const i = ((e, t) => {
                        const n = e.createMediaStreamDestination();
                        return Re(n, t), 1 === n.numberOfOutputs && Object.defineProperty(n, "numberOfOutputs", {
                            get: () => 0
                        }), n
                    })(o, {
                        ...Oe,
                        ...t
                    });
                    super(e, !1, i, null), this._nativeMediaStreamAudioDestinationNode = i
                }
                get stream() {
                    return this._nativeMediaStreamAudioDestinationNode.stream
                }
            })(Rt, 0, wt, Et),
            or = ((e, t, n, r) => class extends e {
                constructor(e, t) {
                    const o = n(e),
                        i = ((e, {
                            mediaStream: t
                        }) => {
                            const n = t.getAudioTracks();
                            n.sort(((e, t) => e.id < t.id ? -1 : e.id > t.id ? 1 : 0));
                            const r = n.slice(0, 1),
                                o = e.createMediaStreamSource(new MediaStream(r));
                            return Object.defineProperty(o, "mediaStream", {
                                value: t
                            }), o
                        })(o, t);
                    if (r(o)) throw new TypeError;
                    super(e, !0, i, null), this._nativeMediaStreamAudioSourceNode = i
                }
                get mediaStream() {
                    return this._nativeMediaStreamAudioSourceNode.mediaStream
                }
            })(Rt, 0, wt, Et),
            ir = ((e, t) => (n, {
                mediaStreamTrack: r
            }) => {
                if ("function" == typeof n.createMediaStreamTrackSource) return n.createMediaStreamTrackSource(r);
                const o = new MediaStream([r]),
                    i = n.createMediaStreamSource(o);
                if ("audio" !== r.kind) throw e();
                if (t(n)) throw new TypeError;
                return i
            })(Se, Et),
            ar = ((e, t, n) => class extends e {
                constructor(e, r) {
                    const o = n(e);
                    super(e, !0, t(o, r), null)
                }
            })(Rt, ir, wt),
            sr = ((e, t, n, r, o, i, a, s, l) => class extends e {
                constructor(e = {}) {
                    if (null === l) throw new Error("Missing the native AudioContext constructor.");
                    let t;
                    try {
                        t = new l(e)
                    } catch (e) {
                        if (12 === e.code && "sampleRate is not in range" === e.message) throw n();
                        throw e
                    }
                    if (null === t) throw r();
                    if (!(e => void 0 === e || "number" == typeof e || "string" == typeof e && ("balanced" === e || "interactive" === e || "playback" === e))(e.latencyHint)) throw new TypeError(`The provided value '${e.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`);
                    if (void 0 !== e.sampleRate && t.sampleRate !== e.sampleRate) throw n();
                    super(t, 2);
                    const {
                        latencyHint: o
                    } = e, {
                        sampleRate: i
                    } = t;
                    if (this._baseLatency = "number" == typeof t.baseLatency ? t.baseLatency : "balanced" === o ? 512 / i : "interactive" === o || void 0 === o ? 256 / i : "playback" === o ? 1024 / i : 128 * Math.max(2, Math.min(128, Math.round(o * i / 128))) / i, this._nativeAudioContext = t, "webkitAudioContext" === l.name ? (this._nativeGainNode = t.createGain(), this._nativeOscillatorNode = t.createOscillator(), this._nativeGainNode.gain.value = 1e-37, this._nativeOscillatorNode.connect(this._nativeGainNode).connect(t.destination), this._nativeOscillatorNode.start()) : (this._nativeGainNode = null, this._nativeOscillatorNode = null), this._state = null, "running" === t.state) {
                        this._state = "suspended";
                        const e = () => {
                            "suspended" === this._state && (this._state = null), t.removeEventListener("statechange", e)
                        };
                        t.addEventListener("statechange", e)
                    }
                }
                get baseLatency() {
                    return this._baseLatency
                }
                get state() {
                    return null !== this._state ? this._state : this._nativeAudioContext.state
                }
                close() {
                    return "closed" === this.state ? this._nativeAudioContext.close().then((() => {
                        throw t()
                    })) : ("suspended" === this._state && (this._state = null), this._nativeAudioContext.close().then((() => {
                        null !== this._nativeGainNode && null !== this._nativeOscillatorNode && (this._nativeOscillatorNode.stop(), this._nativeGainNode.disconnect(), this._nativeOscillatorNode.disconnect()), B(this)
                    })))
                }
                createMediaElementSource(e) {
                    return new o(this, {
                        mediaElement: e
                    })
                }
                createMediaStreamDestination() {
                    return new i(this)
                }
                createMediaStreamSource(e) {
                    return new a(this, {
                        mediaStream: e
                    })
                }
                createMediaStreamTrackSource(e) {
                    return new s(this, {
                        mediaStreamTrack: e
                    })
                }
                resume() {
                    return "suspended" === this._state ? new Promise(((e, t) => {
                        const n = () => {
                            this._nativeAudioContext.removeEventListener("statechange", n), "running" === this._nativeAudioContext.state ? e() : this.resume().then(e, t)
                        };
                        this._nativeAudioContext.addEventListener("statechange", n)
                    })) : this._nativeAudioContext.resume().catch((e => {
                        if (void 0 === e || 15 === e.code) throw t();
                        throw e
                    }))
                }
                suspend() {
                    return this._nativeAudioContext.suspend().catch((e => {
                        if (void 0 === e) throw t();
                        throw e
                    }))
                }
            })(tr, Se, He, (() => new DOMException("", "UnknownError")), nr, rr, or, ar, Tt),
            lr = (e => t => {
                const n = e.get(t);
                if (void 0 === n) throw new Error("The context has no set of AudioWorkletNodes.");
                return n
            })(On),
            ur = (e => (t, n) => {
                e(t).add(n)
            })(lr),
            cr = (e => (t, n, r = 0, o = 0) => {
                const i = t[r];
                if (void 0 === i) throw e();
                return ie(n) ? i.connect(n, 0, o) : i.connect(n, 0)
            })(R),
            hr = (e => (t, n) => {
                e(t).delete(n)
            })(lr),
            dr = (e => (t, n, r, o = 0) => void 0 === n ? t.forEach((e => e.disconnect())) : "number" == typeof n ? _e(e, t, n).disconnect() : ie(n) ? void 0 === r ? t.forEach((e => e.disconnect(n))) : void 0 === o ? _e(e, t, r).disconnect(n, 0) : _e(e, t, r).disconnect(n, 0, o) : void 0 === r ? t.forEach((e => e.disconnect(n))) : _e(e, t, r).disconnect(n, 0))(R),
            fr = new WeakMap,
            pr = ((e, t) => n => t(e, n))(fr, w),
            mr = ((e, t, n, r, o, i, a, s, l, u, c, h, d) => (f, m, v, g) => {
                if (0 === g.numberOfInputs && 0 === g.numberOfOutputs) throw l();
                const y = Array.isArray(g.outputChannelCount) ? g.outputChannelCount : Array.from(g.outputChannelCount);
                if (y.some((e => e < 1))) throw l();
                if (y.length !== g.numberOfOutputs) throw t();
                if ("explicit" !== g.channelCountMode) throw l();
                const b = g.channelCount * g.numberOfInputs,
                    w = y.reduce(((e, t) => e + t), 0),
                    _ = void 0 === v.parameterDescriptors ? 0 : v.parameterDescriptors.length;
                if (b + _ > 6 || w > 6) throw l();
                const x = new MessageChannel,
                    E = [],
                    S = [];
                for (let e = 0; e < g.numberOfInputs; e += 1) E.push(a(f, {
                    channelCount: g.channelCount,
                    channelCountMode: g.channelCountMode,
                    channelInterpretation: g.channelInterpretation,
                    gain: 1
                })), S.push(o(f, {
                    channelCount: g.channelCount,
                    channelCountMode: "explicit",
                    channelInterpretation: "discrete",
                    numberOfOutputs: g.channelCount
                }));
                const k = [];
                if (void 0 !== v.parameterDescriptors)
                    for (const {
                            defaultValue: e,
                            maxValue: t,
                            minValue: n,
                            name: r
                        }
                        of v.parameterDescriptors) {
                        const o = i(f, {
                            channelCount: 1,
                            channelCountMode: "explicit",
                            channelInterpretation: "discrete",
                            offset: void 0 !== g.parameterData[r] ? g.parameterData[r] : void 0 === e ? 0 : e
                        });
                        Object.defineProperties(o.offset, {
                            defaultValue: {
                                get: () => void 0 === e ? 0 : e
                            },
                            maxValue: {
                                get: () => void 0 === t ? I : t
                            },
                            minValue: {
                                get: () => void 0 === n ? N : n
                            }
                        }), k.push(o)
                    }
                const T = r(f, {
                        channelCount: 1,
                        channelCountMode: "explicit",
                        channelInterpretation: "speakers",
                        numberOfInputs: Math.max(1, b + _)
                    }),
                    C = Le(m, f.sampleRate),
                    O = s(f, C, b + _, Math.max(1, w)),
                    A = o(f, {
                        channelCount: Math.max(1, w),
                        channelCountMode: "explicit",
                        channelInterpretation: "discrete",
                        numberOfOutputs: Math.max(1, w)
                    }),
                    P = [];
                for (let e = 0; e < g.numberOfOutputs; e += 1) P.push(r(f, {
                    channelCount: 1,
                    channelCountMode: "explicit",
                    channelInterpretation: "speakers",
                    numberOfInputs: y[e]
                }));
                for (let e = 0; e < g.numberOfInputs; e += 1) {
                    E[e].connect(S[e]);
                    for (let t = 0; t < g.channelCount; t += 1) S[e].connect(T, t, e * g.channelCount + t)
                }
                const R = new le(void 0 === v.parameterDescriptors ? [] : v.parameterDescriptors.map((({
                    name: e
                }, t) => {
                    const n = k[t];
                    return n.connect(T, 0, b + t), n.start(0), [e, n.offset]
                })));
                T.connect(O);
                let M = g.channelInterpretation,
                    D = null;
                const L = 0 === g.numberOfOutputs ? [O] : P,
                    q = {
                        get bufferSize() {
                            return C
                        },
                        get channelCount() {
                            return g.channelCount
                        },
                        set channelCount(e) {
                            throw n()
                        },
                        get channelCountMode() {
                            return g.channelCountMode
                        },
                        set channelCountMode(e) {
                            throw n()
                        },
                        get channelInterpretation() {
                            return M
                        },
                        set channelInterpretation(e) {
                            for (const t of E) t.channelInterpretation = e;
                            M = e
                        },
                        get context() {
                            return O.context
                        },
                        get inputs() {
                            return E
                        },
                        get numberOfInputs() {
                            return g.numberOfInputs
                        },
                        get numberOfOutputs() {
                            return g.numberOfOutputs
                        },
                        get onprocessorerror() {
                            return D
                        },
                        set onprocessorerror(e) {
                            "function" == typeof D && q.removeEventListener("processorerror", D), D = "function" == typeof e ? e : null, "function" == typeof D && q.addEventListener("processorerror", D)
                        },
                        get parameters() {
                            return R
                        },
                        get port() {
                            return x.port2
                        },
                        addEventListener: (...e) => O.addEventListener(e[0], e[1], e[2]),
                        connect: e.bind(null, L),
                        disconnect: u.bind(null, L),
                        dispatchEvent: (...e) => O.dispatchEvent(e[0]),
                        removeEventListener: (...e) => O.removeEventListener(e[0], e[1], e[2])
                    },
                    j = new Map;
                var F, V;
                x.port1.addEventListener = (F = x.port1.addEventListener, (...e) => {
                    if ("message" === e[0]) {
                        const t = "function" == typeof e[1] ? e[1] : "object" == typeof e[1] && null !== e[1] && "function" == typeof e[1].handleEvent ? e[1].handleEvent : null;
                        if (null !== t) {
                            const n = j.get(e[1]);
                            void 0 !== n ? e[1] = n : (e[1] = e => {
                                c(f.currentTime, f.sampleRate, (() => t(e)))
                            }, j.set(t, e[1]))
                        }
                    }
                    return F.call(x.port1, e[0], e[1], e[2])
                }), x.port1.removeEventListener = (V = x.port1.removeEventListener, (...e) => {
                    if ("message" === e[0]) {
                        const t = j.get(e[1]);
                        void 0 !== t && (j.delete(e[1]), e[1] = t)
                    }
                    return V.call(x.port1, e[0], e[1], e[2])
                });
                let B = null;
                Object.defineProperty(x.port1, "onmessage", {
                    get: () => B,
                    set: e => {
                        "function" == typeof B && x.port1.removeEventListener("message", B), B = "function" == typeof e ? e : null, "function" == typeof B && (x.port1.addEventListener("message", B), x.port1.start())
                    }
                }), v.prototype.port = x.port1;
                let z = null;
                const U = ((e, t, n, r) => {
                    let o = p.get(e);
                    void 0 === o && (o = new WeakMap, p.set(e, o));
                    const i = (async (e, t) => {
                        const n = await (e => new Promise(((t, n) => {
                            const {
                                port1: r,
                                port2: o
                            } = new MessageChannel;
                            r.onmessage = ({
                                data: e
                            }) => {
                                r.close(), o.close(), t(e)
                            }, r.onmessageerror = ({
                                data: e
                            }) => {
                                r.close(), o.close(), n(e)
                            }, o.postMessage(e)
                        })))(t);
                        return new e(n)
                    })(n, r);
                    return o.set(t, i), i
                })(f, q, v, g);
                U.then((e => z = e));
                const W = de(g.numberOfInputs, g.channelCount),
                    H = de(g.numberOfOutputs, y),
                    G = void 0 === v.parameterDescriptors ? [] : v.parameterDescriptors.reduce(((e, {
                        name: t
                    }) => ({
                        ...e,
                        [t]: new Float32Array(128)
                    })), {});
                let Q = !0;
                const Y = () => {
                        g.numberOfOutputs > 0 && O.disconnect(A);
                        for (let e = 0, t = 0; e < g.numberOfOutputs; e += 1) {
                            const n = P[e];
                            for (let r = 0; r < y[e]; r += 1) A.disconnect(n, t + r, r);
                            t += y[e]
                        }
                    },
                    $ = new Map;
                O.onaudioprocess = ({
                    inputBuffer: e,
                    outputBuffer: t
                }) => {
                    if (null !== z) {
                        const n = h(q);
                        for (let r = 0; r < C; r += 128) {
                            for (let t = 0; t < g.numberOfInputs; t += 1)
                                for (let n = 0; n < g.channelCount; n += 1) ce(e, W[t], n, n, r);
                            void 0 !== v.parameterDescriptors && v.parameterDescriptors.forEach((({
                                name: t
                            }, n) => {
                                ce(e, G, t, b + n, r)
                            }));
                            for (let e = 0; e < g.numberOfInputs; e += 1)
                                for (let t = 0; t < y[e]; t += 1) 0 === H[e][t].byteLength && (H[e][t] = new Float32Array(128));
                            try {
                                const e = W.map(((e, t) => {
                                        if (n[t].size > 0) return $.set(t, C / 128), e;
                                        const r = $.get(t);
                                        return void 0 === r ? [] : (e.every((e => e.every((e => 0 === e)))) && (1 === r ? $.delete(t) : $.set(t, r - 1)), e)
                                    })),
                                    o = c(f.currentTime + r / f.sampleRate, f.sampleRate, (() => z.process(e, H, G)));
                                Q = o;
                                for (let e = 0, n = 0; e < g.numberOfOutputs; e += 1) {
                                    for (let o = 0; o < y[e]; o += 1) he(t, H[e], o, n + o, r);
                                    n += y[e]
                                }
                            } catch (e) {
                                Q = !1, q.dispatchEvent(new ErrorEvent("processorerror", {
                                    colno: e.colno,
                                    filename: e.filename,
                                    lineno: e.lineno,
                                    message: e.message
                                }))
                            }
                            if (!Q) {
                                for (let e = 0; e < g.numberOfInputs; e += 1) {
                                    E[e].disconnect(S[e]);
                                    for (let t = 0; t < g.channelCount; t += 1) S[r].disconnect(T, t, e * g.channelCount + t)
                                }
                                if (void 0 !== v.parameterDescriptors) {
                                    const e = v.parameterDescriptors.length;
                                    for (let t = 0; t < e; t += 1) {
                                        const e = k[t];
                                        e.disconnect(T, 0, b + t), e.stop()
                                    }
                                }
                                T.disconnect(O), O.onaudioprocess = null, Z ? Y() : J();
                                break
                            }
                        }
                    }
                };
                let Z = !1;
                const X = a(f, {
                        channelCount: 1,
                        channelCountMode: "explicit",
                        channelInterpretation: "discrete",
                        gain: 0
                    }),
                    K = () => O.connect(X).connect(f.destination),
                    J = () => {
                        O.disconnect(X), X.disconnect()
                    };
                return K(), d(q, (() => {
                    if (Q) {
                        J(), g.numberOfOutputs > 0 && O.connect(A);
                        for (let e = 0, t = 0; e < g.numberOfOutputs; e += 1) {
                            const n = P[e];
                            for (let r = 0; r < y[e]; r += 1) A.connect(n, t + r, r);
                            t += y[e]
                        }
                    }
                    Z = !0
                }), (() => {
                    Q && (K(), Y()), Z = !1
                }))
            })(cr, R, Se, nn, je, un, Be, We, He, dr, $n, pr, en),
            vr = ((e, t, n, r, o) => (i, a, s, l, u, c) => {
                if (null !== s) try {
                    const t = new s(i, l, c),
                        r = new Map;
                    let a = null;
                    if (Object.defineProperties(t, {
                            channelCount: {
                                get: () => c.channelCount,
                                set: () => {
                                    throw e()
                                }
                            },
                            channelCountMode: {
                                get: () => "explicit",
                                set: () => {
                                    throw e()
                                }
                            },
                            onprocessorerror: {
                                get: () => a,
                                set: e => {
                                    "function" == typeof a && t.removeEventListener("processorerror", a), a = "function" == typeof e ? e : null, "function" == typeof a && t.addEventListener("processorerror", a)
                                }
                            }
                        }), t.addEventListener = (d = t.addEventListener, (...e) => {
                            if ("processorerror" === e[0]) {
                                const t = "function" == typeof e[1] ? e[1] : "object" == typeof e[1] && null !== e[1] && "function" == typeof e[1].handleEvent ? e[1].handleEvent : null;
                                if (null !== t) {
                                    const n = r.get(e[1]);
                                    void 0 !== n ? e[1] = n : (e[1] = n => {
                                        "error" === n.type ? (Object.defineProperties(n, {
                                            type: {
                                                value: "processorerror"
                                            }
                                        }), t(n)) : t(new ErrorEvent(e[0], {
                                            ...n
                                        }))
                                    }, r.set(t, e[1]))
                                }
                            }
                            return d.call(t, "error", e[1], e[2]), d.call(t, ...e)
                        }), t.removeEventListener = (h = t.removeEventListener, (...e) => {
                            if ("processorerror" === e[0]) {
                                const t = r.get(e[1]);
                                void 0 !== t && (r.delete(e[1]), e[1] = t)
                            }
                            return h.call(t, "error", e[1], e[2]), h.call(t, e[0], e[1], e[2])
                        }), 0 !== c.numberOfOutputs) {
                        const e = n(i, {
                            channelCount: 1,
                            channelCountMode: "explicit",
                            channelInterpretation: "discrete",
                            gain: 0
                        });
                        return t.connect(e).connect(i.destination), o(t, (() => e.disconnect()), (() => e.connect(i.destination)))
                    }
                    return t
                } catch (e) {
                    if (11 === e.code) throw r();
                    throw e
                }
                var h, d;
                if (void 0 === u) throw r();
                return (e => {
                    const {
                        port1: t
                    } = new MessageChannel;
                    try {
                        t.postMessage(e)
                    } finally {
                        t.close()
                    }
                })(c), t(i, a, u, c)
            })(Se, mr, Be, He, en),
            gr = ((e, t, n, r, o, i, a, s, l, u, c, h, d, f, p, m) => (v, g, y) => {
                const b = new WeakMap;
                let w = null;
                return {
                    render(_, x) {
                        s(x, _);
                        const E = b.get(x);
                        return void 0 !== E ? Promise.resolve(E) : (async (s, _) => {
                            let x = c(s),
                                E = null;
                            const S = A(x, _),
                                k = Array.isArray(g.outputChannelCount) ? g.outputChannelCount : Array.from(g.outputChannelCount);
                            if (null === h) {
                                const e = k.reduce(((e, t) => e + t), 0),
                                    n = o(_, {
                                        channelCount: Math.max(1, e),
                                        channelCountMode: "explicit",
                                        channelInterpretation: "discrete",
                                        numberOfOutputs: Math.max(1, e)
                                    }),
                                    i = [];
                                for (let e = 0; e < s.numberOfOutputs; e += 1) i.push(r(_, {
                                    channelCount: 1,
                                    channelCountMode: "explicit",
                                    channelInterpretation: "speakers",
                                    numberOfInputs: k[e]
                                }));
                                const u = a(_, {
                                    channelCount: g.channelCount,
                                    channelCountMode: g.channelCountMode,
                                    channelInterpretation: g.channelInterpretation,
                                    gain: 1
                                });
                                u.connect = t.bind(null, i), u.disconnect = l.bind(null, i), E = [n, i, u]
                            } else S || (x = new h(_, v));
                            if (b.set(_, null === E ? x : E[2]), null !== E) {
                                if (null === w) {
                                    if (void 0 === y) throw new Error("Missing the processor constructor.");
                                    if (null === d) throw new Error("Missing the native OfflineAudioContext constructor.");
                                    const e = s.channelCount * s.numberOfInputs,
                                        t = void 0 === y.parameterDescriptors ? 0 : y.parameterDescriptors.length,
                                        n = e + t,
                                        l = async () => {
                                            const l = new d(n, 128 * Math.ceil(s.context.length / 128), _.sampleRate),
                                                u = [],
                                                c = [];
                                            for (let e = 0; e < g.numberOfInputs; e += 1) u.push(a(l, {
                                                channelCount: g.channelCount,
                                                channelCountMode: g.channelCountMode,
                                                channelInterpretation: g.channelInterpretation,
                                                gain: 1
                                            })), c.push(o(l, {
                                                channelCount: g.channelCount,
                                                channelCountMode: "explicit",
                                                channelInterpretation: "discrete",
                                                numberOfOutputs: g.channelCount
                                            }));
                                            const h = await Promise.all(Array.from(s.parameters.values()).map((async e => {
                                                    const t = i(l, {
                                                        channelCount: 1,
                                                        channelCountMode: "explicit",
                                                        channelInterpretation: "discrete",
                                                        offset: e.value
                                                    });
                                                    return await f(l, e, t.offset), t
                                                }))),
                                                v = r(l, {
                                                    channelCount: 1,
                                                    channelCountMode: "explicit",
                                                    channelInterpretation: "speakers",
                                                    numberOfInputs: Math.max(1, e + t)
                                                });
                                            for (let e = 0; e < g.numberOfInputs; e += 1) {
                                                u[e].connect(c[e]);
                                                for (let t = 0; t < g.channelCount; t += 1) c[e].connect(v, t, e * g.channelCount + t)
                                            }
                                            for (const [t, n] of h.entries()) n.connect(v, 0, e + t), n.start(0);
                                            return v.connect(l.destination), await Promise.all(u.map((e => p(s, l, e)))), m(l)
                                        };
                                    w = fe(s, 0 === n ? null : await l(), _, g, k, y, u)
                                }
                                const e = await w,
                                    t = n(_, {
                                        buffer: null,
                                        channelCount: 2,
                                        channelCountMode: "max",
                                        channelInterpretation: "speakers",
                                        loop: !1,
                                        loopEnd: 0,
                                        loopStart: 0,
                                        playbackRate: 1
                                    }),
                                    [l, c, h] = E;
                                null !== e && (t.buffer = e, t.start(0)), t.connect(l);
                                for (let e = 0, t = 0; e < s.numberOfOutputs; e += 1) {
                                    const n = c[e];
                                    for (let r = 0; r < k[e]; r += 1) l.connect(n, t + r, r);
                                    t += k[e]
                                }
                                return h
                            }
                            if (S)
                                for (const [t, n] of s.parameters.entries()) await e(_, n, x.parameters.get(t));
                            else
                                for (const [e, t] of s.parameters.entries()) await f(_, t, x.parameters.get(e));
                            return await p(s, _, x), x
                        })(_, x)
                    }
                }
            })(Ut, cr, Wt, nn, je, un, Be, hr, dr, $n, J, Pt, xt, Ht, yt, En),
            yr = (e => t => e.get(t))(Zn),
            br = (e => (t, n) => {
                e.set(t, n)
            })(fr),
            wr = Yn ? ((e, t, n, r, o, i, a, s, l, u, c, h, d, p) => class extends t {
                constructor(t, c, d) {
                    var p;
                    const m = s(t),
                        v = l(m),
                        g = (e => ({
                            ...e,
                            outputChannelCount: void 0 !== e.outputChannelCount ? e.outputChannelCount : 1 === e.numberOfInputs && 1 === e.numberOfOutputs ? [e.channelCount] : Array.from({
                                length: e.numberOfOutputs
                            }, (() => 1))
                        }))({
                            ...ue,
                            ...d
                        });
                    (e => {
                        const {
                            port1: t,
                            port2: n
                        } = new MessageChannel;
                        try {
                            t.postMessage(e)
                        } finally {
                            t.close(), n.close()
                        }
                    })(g);
                    const y = f.get(m),
                        b = null == y ? void 0 : y.get(c),
                        w = v || "closed" !== m.state ? m : null !== (p = a(m)) && void 0 !== p ? p : m,
                        _ = o(w, v ? null : t.baseLatency, u, c, b, g);
                    super(t, !0, _, v ? r(c, g, b) : null);
                    const x = [];
                    _.parameters.forEach(((e, t) => {
                        const r = n(this, v, e);
                        x.push([t, r])
                    })), this._nativeAudioWorkletNode = _, this._onprocessorerror = null, this._parameters = new le(x), v && e(m, this);
                    const {
                        activeInputs: E
                    } = i(this);
                    h(_, E)
                }
                get onprocessorerror() {
                    return this._onprocessorerror
                }
                set onprocessorerror(e) {
                    const t = "function" == typeof e ? p(this, e) : null;
                    this._nativeAudioWorkletNode.onprocessorerror = t;
                    const n = this._nativeAudioWorkletNode.onprocessorerror;
                    this._onprocessorerror = null !== n && n === t ? e : n
                }
                get parameters() {
                    return null === this._parameters ? this._nativeAudioWorkletNode.parameters : this._parameters
                }
                get port() {
                    return this._nativeAudioWorkletNode.port
                }
            })(ur, Rt, Qt, gr, vr, j, yr, wt, Et, Pt, 0, br, 0, at) : void 0,
            _r = ((e, t) => (n, r, o) => {
                if (null === t) throw new Error("Missing the native OfflineAudioContext constructor.");
                try {
                    return new t(n, r, o)
                } catch (t) {
                    if ("SyntaxError" === t.name) throw e();
                    throw t
                }
            })(He, xt),
            xr = ((e, t, n, r, o, i, a, s) => (l, u) => n(l).render(l, u).then((() => Promise.all(Array.from(r(u)).map((e => n(e).render(e, u)))))).then((() => o(u))).then((n => ("function" != typeof n.copyFromChannel ? (a(n), M(n)) : t(i, (() => i(n))) || s(n), e.add(n), n))))(Nt, dt, gt, lr, En, P, jt, Ft),
            Er = ((e, t, n, r, o) => class extends e {
                constructor(e, n, o) {
                    let i;
                    if ("number" == typeof e && void 0 !== n && void 0 !== o) i = {
                        length: n,
                        numberOfChannels: e,
                        sampleRate: o
                    };
                    else {
                        if ("object" != typeof e) throw new Error("The given parameters are not valid.");
                        i = e
                    }
                    const {
                        length: a,
                        numberOfChannels: s,
                        sampleRate: l
                    } = {
                        ...Ge,
                        ...i
                    }, u = r(s, a, l);
                    t(Ae, (() => Ae(u))) || u.addEventListener("statechange", (() => {
                        let e = 0;
                        const t = n => {
                            "running" === this._state && (e > 0 ? (u.removeEventListener("statechange", t), n.stopImmediatePropagation(), this._waitForThePromiseToSettle(n)) : e += 1)
                        };
                        return t
                    })()), super(u, s), this._length = a, this._nativeOfflineAudioContext = u, this._state = null
                }
                get length() {
                    return void 0 === this._nativeOfflineAudioContext.length ? this._length : this._nativeOfflineAudioContext.length
                }
                get state() {
                    return null === this._state ? this._nativeOfflineAudioContext.state : this._state
                }
                startRendering() {
                    return "running" === this._state ? Promise.reject(n()) : (this._state = "running", o(this.destination, this._nativeOfflineAudioContext).finally((() => {
                        this._state = null, B(this)
                    })))
                }
                _waitForThePromiseToSettle(e) {
                    null === this._state ? this._nativeOfflineAudioContext.dispatchEvent(e) : setTimeout((() => this._waitForThePromiseToSettle(e)))
                }
            })(tr, dt, Se, _r, xr),
            Sr = ((e, t) => n => {
                const r = e.get(n);
                return t(r) || t(n)
            })(c, Ct),
            kr = ((e, t) => n => e.has(n) || t(n))(s, Ot),
            Tr = ((e, t) => n => e.has(n) || t(n))(u, At),
            Cr = ((e, t) => n => {
                const r = e.get(n);
                return t(r) || t(n)
            })(c, Et);

        function Or(e, t) {
            if (!e) throw new Error(t)
        }

        function Ar(e, t, n = 1 / 0) {
            if (!(t <= e && e <= n)) throw new RangeError(`Value must be within [${t}, ${n}], got: ${e}`)
        }

        function Pr(e) {
            e.isOffline || "running" === e.state || Mr('The AudioContext is "suspended". Invoke Tone.start() from a user action to start the audio.')
        }
        let Rr = console;

        function Mr(...e) {
            Rr.warn(...e)
        }

        function Dr(e) {
            return void 0 === e
        }

        function Nr(e) {
            return !Dr(e)
        }

        function Ir(e) {
            return "number" == typeof e
        }

        function Lr(e) {
            return "[object Object]" === Object.prototype.toString.call(e) && e.constructor === Object
        }

        function qr(e) {
            return Array.isArray(e)
        }

        function jr(e) {
            return "string" == typeof e
        }

        function Fr(e) {
            return jr(e) && /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i.test(e)
        }
        const Vr = "object" == typeof self ? self : null,
            Br = Vr && (Vr.hasOwnProperty("AudioContext") || Vr.hasOwnProperty("webkitAudioContext"));

        function zr(e, t, n, r) {
            var o, i = arguments.length,
                a = i < 3 ? t : null === r ? r = Object.getOwnPropertyDescriptor(t, n) : r;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, n, r);
            else
                for (var s = e.length - 1; s >= 0; s--)(o = e[s]) && (a = (i < 3 ? o(a) : i > 3 ? o(t, n, a) : o(t, n)) || a);
            return i > 3 && a && Object.defineProperty(t, n, a), a
        }

        function Ur(e, t, n, r) {
            return new(n || (n = Promise))((function(o, i) {
                function a(e) {
                    try {
                        l(r.next(e))
                    } catch (e) {
                        i(e)
                    }
                }

                function s(e) {
                    try {
                        l(r.throw(e))
                    } catch (e) {
                        i(e)
                    }
                }

                function l(e) {
                    var t;
                    e.done ? o(e.value) : (t = e.value, t instanceof n ? t : new n((function(e) {
                        e(t)
                    }))).then(a, s)
                }
                l((r = r.apply(e, t || [])).next())
            }))
        }
        Object.create, Object.create, "function" == typeof SuppressedError && SuppressedError;
        class Wr {
            constructor(e, t, n) {
                this._callback = e, this._type = t, this._updateInterval = n, this._createClock()
            }
            _createWorker() {
                const e = new Blob([`\n\t\t\t// the initial timeout time\n\t\t\tlet timeoutTime =  ${(1e3*this._updateInterval).toFixed(1)};\n\t\t\t// onmessage callback\n\t\t\tself.onmessage = function(msg){\n\t\t\t\ttimeoutTime = parseInt(msg.data);\n\t\t\t};\n\t\t\t// the tick function which posts a message\n\t\t\t// and schedules a new tick\n\t\t\tfunction tick(){\n\t\t\t\tsetTimeout(tick, timeoutTime);\n\t\t\t\tself.postMessage('tick');\n\t\t\t}\n\t\t\t// call tick initially\n\t\t\ttick();\n\t\t\t`], {
                        type: "text/javascript"
                    }),
                    t = URL.createObjectURL(e),
                    n = new Worker(t);
                n.onmessage = this._callback.bind(this), this._worker = n
            }
            _createTimeout() {
                this._timeout = setTimeout((() => {
                    this._createTimeout(), this._callback()
                }), 1e3 * this._updateInterval)
            }
            _createClock() {
                if ("worker" === this._type) try {
                    this._createWorker()
                } catch (e) {
                    this._type = "timeout", this._createClock()
                } else "timeout" === this._type && this._createTimeout()
            }
            _disposeClock() {
                this._timeout && (clearTimeout(this._timeout), this._timeout = 0), this._worker && (this._worker.terminate(), this._worker.onmessage = null)
            }
            get updateInterval() {
                return this._updateInterval
            }
            set updateInterval(e) {
                this._updateInterval = Math.max(e, 128 / 44100), "worker" === this._type && this._worker.postMessage(Math.max(1e3 * e, 1))
            }
            get type() {
                return this._type
            }
            set type(e) {
                this._disposeClock(), this._type = e, this._createClock()
            }
            dispose() {
                this._disposeClock()
            }
        }

        function Hr(e) {
            return Tr(e)
        }

        function Gr(e) {
            return kr(e)
        }

        function Qr(e) {
            return Cr(e)
        }

        function Yr(e) {
            return Sr(e)
        }

        function $r(e) {
            return e instanceof AudioBuffer
        }

        function Zr(e, t) {
            return "value" === e || Hr(t) || Gr(t) || $r(t)
        }

        function Xr(e, ...t) {
            if (!t.length) return e;
            const n = t.shift();
            if (Lr(e) && Lr(n))
                for (const t in n) Zr(t, n[t]) ? e[t] = n[t] : Lr(n[t]) ? (e[t] || Object.assign(e, {
                    [t]: {}
                }), Xr(e[t], n[t])) : Object.assign(e, {
                    [t]: n[t]
                });
            return Xr(e, ...t)
        }

        function Kr(e, t, n = [], r) {
            const o = {},
                i = Array.from(t);
            if (Lr(i[0]) && r && !Reflect.has(i[0], r) && (Object.keys(i[0]).some((t => Reflect.has(e, t))) || (Xr(o, {
                    [r]: i[0]
                }), n.splice(n.indexOf(r), 1), i.shift())), 1 === i.length && Lr(i[0])) Xr(o, i[0]);
            else
                for (let e = 0; e < n.length; e++) Nr(i[e]) && (o[n[e]] = i[e]);
            return Xr(e, o)
        }

        function Jr(e, t) {
            return Dr(e) ? t : e
        }

        function eo(e, t) {
            return t.forEach((t => {
                Reflect.has(e, t) && delete e[t]
            })), e
        }
        class to {
            constructor() {
                this.debug = !1, this._wasDisposed = !1
            }
            static getDefaults() {
                return {}
            }
            log(...e) {
                (this.debug || Vr && this.toString() === Vr.TONE_DEBUG_CLASS) && function(...e) {
                    Rr.log(...e)
                }(this, ...e)
            }
            dispose() {
                return this._wasDisposed = !0, this
            }
            get disposed() {
                return this._wasDisposed
            }
            toString() {
                return this.name
            }
        }
        to.version = n;
        const no = 1e-6;

        function ro(e, t) {
            return e > t + no
        }

        function oo(e, t) {
            return ro(e, t) || ao(e, t)
        }

        function io(e, t) {
            return e + no < t
        }

        function ao(e, t) {
            return Math.abs(e - t) < no
        }
        class so extends to {
            constructor() {
                super(), this.name = "Timeline", this._timeline = [];
                const e = Kr(so.getDefaults(), arguments, ["memory"]);
                this.memory = e.memory, this.increasing = e.increasing
            }
            static getDefaults() {
                return {
                    memory: 1 / 0,
                    increasing: !1
                }
            }
            get length() {
                return this._timeline.length
            }
            add(e) {
                if (Or(Reflect.has(e, "time"), "Timeline: events must have a time attribute"), e.time = e.time.valueOf(), this.increasing && this.length) {
                    const t = this._timeline[this.length - 1];
                    Or(oo(e.time, t.time), "The time must be greater than or equal to the last scheduled time"), this._timeline.push(e)
                } else {
                    const t = this._search(e.time);
                    this._timeline.splice(t + 1, 0, e)
                }
                if (this.length > this.memory) {
                    const e = this.length - this.memory;
                    this._timeline.splice(0, e)
                }
                return this
            }
            remove(e) {
                const t = this._timeline.indexOf(e);
                return -1 !== t && this._timeline.splice(t, 1), this
            }
            get(e, t = "time") {
                const n = this._search(e, t);
                return -1 !== n ? this._timeline[n] : null
            }
            peek() {
                return this._timeline[0]
            }
            shift() {
                return this._timeline.shift()
            }
            getAfter(e, t = "time") {
                const n = this._search(e, t);
                return n + 1 < this._timeline.length ? this._timeline[n + 1] : null
            }
            getBefore(e) {
                const t = this._timeline.length;
                if (t > 0 && this._timeline[t - 1].time < e) return this._timeline[t - 1];
                const n = this._search(e);
                return n - 1 >= 0 ? this._timeline[n - 1] : null
            }
            cancel(e) {
                if (this._timeline.length > 1) {
                    let t = this._search(e);
                    if (t >= 0)
                        if (ao(this._timeline[t].time, e)) {
                            for (let n = t; n >= 0 && ao(this._timeline[n].time, e); n--) t = n;
                            this._timeline = this._timeline.slice(0, t)
                        } else this._timeline = this._timeline.slice(0, t + 1);
                    else this._timeline = []
                } else 1 === this._timeline.length && oo(this._timeline[0].time, e) && (this._timeline = []);
                return this
            }
            cancelBefore(e) {
                const t = this._search(e);
                return t >= 0 && (this._timeline = this._timeline.slice(t + 1)), this
            }
            previousEvent(e) {
                const t = this._timeline.indexOf(e);
                return t > 0 ? this._timeline[t - 1] : null
            }
            _search(e, t = "time") {
                if (0 === this._timeline.length) return -1;
                let n = 0;
                const r = this._timeline.length;
                let o = r;
                if (r > 0 && this._timeline[r - 1][t] <= e) return r - 1;
                for (; n < o;) {
                    let r = Math.floor(n + (o - n) / 2);
                    const i = this._timeline[r],
                        a = this._timeline[r + 1];
                    if (ao(i[t], e)) {
                        for (let n = r; n < this._timeline.length && ao(this._timeline[n][t], e); n++) r = n;
                        return r
                    }
                    if (io(i[t], e) && ro(a[t], e)) return r;
                    ro(i[t], e) ? o = r : n = r + 1
                }
                return -1
            }
            _iterate(e, t = 0, n = this._timeline.length - 1) {
                this._timeline.slice(t, n + 1).forEach(e)
            }
            forEach(e) {
                return this._iterate(e), this
            }
            forEachBefore(e, t) {
                const n = this._search(e);
                return -1 !== n && this._iterate(t, 0, n), this
            }
            forEachAfter(e, t) {
                const n = this._search(e);
                return this._iterate(t, n + 1), this
            }
            forEachBetween(e, t, n) {
                let r = this._search(e),
                    o = this._search(t);
                return -1 !== r && -1 !== o ? (this._timeline[r].time !== e && (r += 1), this._timeline[o].time === t && (o -= 1), this._iterate(n, r, o)) : -1 === r && this._iterate(n, 0, o), this
            }
            forEachFrom(e, t) {
                let n = this._search(e);
                for (; n >= 0 && this._timeline[n].time >= e;) n--;
                return this._iterate(t, n + 1), this
            }
            forEachAtTime(e, t) {
                const n = this._search(e);
                if (-1 !== n && ao(this._timeline[n].time, e)) {
                    let r = n;
                    for (let t = n; t >= 0 && ao(this._timeline[t].time, e); t--) r = t;
                    this._iterate((e => {
                        t(e)
                    }), r, n)
                }
                return this
            }
            dispose() {
                return super.dispose(), this._timeline = [], this
            }
        }
        const lo = [];

        function uo(e) {
            lo.push(e)
        }
        const co = [];

        function ho(e) {
            co.push(e)
        }
        class fo extends to {
            constructor() {
                super(...arguments), this.name = "Emitter"
            }
            on(e, t) {
                return e.split(/\W+/).forEach((e => {
                    Dr(this._events) && (this._events = {}), this._events.hasOwnProperty(e) || (this._events[e] = []), this._events[e].push(t)
                })), this
            }
            once(e, t) {
                const n = (...r) => {
                    t(...r), this.off(e, n)
                };
                return this.on(e, n), this
            }
            off(e, t) {
                return e.split(/\W+/).forEach((n => {
                    if (Dr(this._events) && (this._events = {}), this._events.hasOwnProperty(e))
                        if (Dr(t)) this._events[e] = [];
                        else {
                            const n = this._events[e];
                            for (let e = n.length - 1; e >= 0; e--) n[e] === t && n.splice(e, 1)
                        }
                })), this
            }
            emit(e, ...t) {
                if (this._events && this._events.hasOwnProperty(e)) {
                    const n = this._events[e].slice(0);
                    for (let e = 0, r = n.length; e < r; e++) n[e].apply(this, t)
                }
                return this
            }
            static mixin(e) {
                ["on", "once", "off", "emit"].forEach((t => {
                    const n = Object.getOwnPropertyDescriptor(fo.prototype, t);
                    Object.defineProperty(e.prototype, t, n)
                }))
            }
            dispose() {
                return super.dispose(), this._events = void 0, this
            }
        }
        class po extends fo {
            constructor() {
                super(...arguments), this.isOffline = !1
            }
            toJSON() {
                return {}
            }
        }
        class mo extends po {
            constructor() {
                super(), this.name = "Context", this._constants = new Map, this._timeouts = new so, this._timeoutIds = 0, this._initialized = !1, this.isOffline = !1, this._workletModules = new Map;
                const e = Kr(mo.getDefaults(), arguments, ["context"]);
                e.context ? this._context = e.context : this._context = function(e) {
                    return new sr(e)
                }({
                    latencyHint: e.latencyHint
                }), this._ticker = new Wr(this.emit.bind(this, "tick"), e.clockSource, e.updateInterval), this.on("tick", this._timeoutLoop.bind(this)), this._context.onstatechange = () => {
                    this.emit("statechange", this.state)
                }, this._setLatencyHint(e.latencyHint), this.lookAhead = e.lookAhead
            }
            static getDefaults() {
                return {
                    clockSource: "worker",
                    latencyHint: "interactive",
                    lookAhead: .1,
                    updateInterval: .05
                }
            }
            initialize() {
                var e;
                return this._initialized || (e = this, lo.forEach((t => t(e))), this._initialized = !0), this
            }
            createAnalyser() {
                return this._context.createAnalyser()
            }
            createOscillator() {
                return this._context.createOscillator()
            }
            createBufferSource() {
                return this._context.createBufferSource()
            }
            createBiquadFilter() {
                return this._context.createBiquadFilter()
            }
            createBuffer(e, t, n) {
                return this._context.createBuffer(e, t, n)
            }
            createChannelMerger(e) {
                return this._context.createChannelMerger(e)
            }
            createChannelSplitter(e) {
                return this._context.createChannelSplitter(e)
            }
            createConstantSource() {
                return this._context.createConstantSource()
            }
            createConvolver() {
                return this._context.createConvolver()
            }
            createDelay(e) {
                return this._context.createDelay(e)
            }
            createDynamicsCompressor() {
                return this._context.createDynamicsCompressor()
            }
            createGain() {
                return this._context.createGain()
            }
            createIIRFilter(e, t) {
                return this._context.createIIRFilter(e, t)
            }
            createPanner() {
                return this._context.createPanner()
            }
            createPeriodicWave(e, t, n) {
                return this._context.createPeriodicWave(e, t, n)
            }
            createStereoPanner() {
                return this._context.createStereoPanner()
            }
            createWaveShaper() {
                return this._context.createWaveShaper()
            }
            createMediaStreamSource(e) {
                return Or(Yr(this._context), "Not available if OfflineAudioContext"), this._context.createMediaStreamSource(e)
            }
            createMediaElementSource(e) {
                return Or(Yr(this._context), "Not available if OfflineAudioContext"), this._context.createMediaElementSource(e)
            }
            createMediaStreamDestination() {
                return Or(Yr(this._context), "Not available if OfflineAudioContext"), this._context.createMediaStreamDestination()
            }
            decodeAudioData(e) {
                return this._context.decodeAudioData(e)
            }
            get currentTime() {
                return this._context.currentTime
            }
            get state() {
                return this._context.state
            }
            get sampleRate() {
                return this._context.sampleRate
            }
            get listener() {
                return this.initialize(), this._listener
            }
            set listener(e) {
                Or(!this._initialized, "The listener cannot be set after initialization."), this._listener = e
            }
            get transport() {
                return this.initialize(), this._transport
            }
            set transport(e) {
                Or(!this._initialized, "The transport cannot be set after initialization."), this._transport = e
            }
            get draw() {
                return this.initialize(), this._draw
            }
            set draw(e) {
                Or(!this._initialized, "Draw cannot be set after initialization."), this._draw = e
            }
            get destination() {
                return this.initialize(), this._destination
            }
            set destination(e) {
                Or(!this._initialized, "The destination cannot be set after initialization."), this._destination = e
            }
            createAudioWorkletNode(e, t) {
                return function(e, t, n) {
                    return Or(Nr(wr), "This node only works in a secure context (https or localhost)"), new wr(e, t, n)
                }(this.rawContext, e, t)
            }
            addAudioWorkletModule(e, t) {
                return Ur(this, void 0, void 0, (function*() {
                    Or(Nr(this.rawContext.audioWorklet), "AudioWorkletNode is only available in a secure context (https or localhost)"), this._workletModules.has(t) || this._workletModules.set(t, this.rawContext.audioWorklet.addModule(e)), yield this._workletModules.get(t)
                }))
            }
            workletsAreReady() {
                return Ur(this, void 0, void 0, (function*() {
                    const e = [];
                    this._workletModules.forEach((t => e.push(t))), yield Promise.all(e)
                }))
            }
            get updateInterval() {
                return this._ticker.updateInterval
            }
            set updateInterval(e) {
                this._ticker.updateInterval = e
            }
            get clockSource() {
                return this._ticker.type
            }
            set clockSource(e) {
                this._ticker.type = e
            }
            get latencyHint() {
                return this._latencyHint
            }
            _setLatencyHint(e) {
                let t = 0;
                if (this._latencyHint = e, jr(e)) switch (e) {
                    case "interactive":
                        t = .1;
                        break;
                    case "playback":
                        t = .5;
                        break;
                    case "balanced":
                        t = .25
                }
                this.lookAhead = t, this.updateInterval = t / 2
            }
            get rawContext() {
                return this._context
            }
            now() {
                return this._context.currentTime + this.lookAhead
            }
            immediate() {
                return this._context.currentTime
            }
            resume() {
                return Yr(this._context) ? this._context.resume() : Promise.resolve()
            }
            close() {
                return Ur(this, void 0, void 0, (function*() {
                    var e;
                    Yr(this._context) && (yield this._context.close()), this._initialized && (e = this, co.forEach((t => t(e))))
                }))
            }
            getConstant(e) {
                if (this._constants.has(e)) return this._constants.get(e);
                {
                    const t = this._context.createBuffer(1, 128, this._context.sampleRate),
                        n = t.getChannelData(0);
                    for (let t = 0; t < n.length; t++) n[t] = e;
                    const r = this._context.createBufferSource();
                    return r.channelCount = 1, r.channelCountMode = "explicit", r.buffer = t, r.loop = !0, r.start(0), this._constants.set(e, r), r
                }
            }
            dispose() {
                return super.dispose(), this._ticker.dispose(), this._timeouts.dispose(), Object.keys(this._constants).map((e => this._constants[e].disconnect())), this
            }
            _timeoutLoop() {
                const e = this.now();
                let t = this._timeouts.peek();
                for (; this._timeouts.length && t && t.time <= e;) t.callback(), this._timeouts.shift(), t = this._timeouts.peek()
            }
            setTimeout(e, t) {
                this._timeoutIds++;
                const n = this.now();
                return this._timeouts.add({
                    callback: e,
                    id: this._timeoutIds,
                    time: n + t
                }), this._timeoutIds
            }
            clearTimeout(e) {
                return this._timeouts.forEach((t => {
                    t.id === e && this._timeouts.remove(t)
                })), this
            }
            clearInterval(e) {
                return this.clearTimeout(e)
            }
            setInterval(e, t) {
                const n = ++this._timeoutIds,
                    r = () => {
                        const o = this.now();
                        this._timeouts.add({
                            callback: () => {
                                e(), r()
                            },
                            id: n,
                            time: o + t
                        })
                    };
                return r(), n
            }
        }

        function vo(e, t) {
            qr(t) ? t.forEach((t => vo(e, t))) : Object.defineProperty(e, t, {
                enumerable: !0,
                writable: !1
            })
        }

        function go(e, t) {
            qr(t) ? t.forEach((t => go(e, t))) : Object.defineProperty(e, t, {
                writable: !0
            })
        }
        const yo = () => {};
        class bo extends to {
            constructor() {
                super(), this.name = "ToneAudioBuffer", this.onload = yo;
                const e = Kr(bo.getDefaults(), arguments, ["url", "onload", "onerror"]);
                this.reverse = e.reverse, this.onload = e.onload, e.url && $r(e.url) || e.url instanceof bo ? this.set(e.url) : jr(e.url) && this.load(e.url).catch(e.onerror)
            }
            static getDefaults() {
                return {
                    onerror: yo,
                    onload: yo,
                    reverse: !1
                }
            }
            get sampleRate() {
                return this._buffer ? this._buffer.sampleRate : Eo().sampleRate
            }
            set(e) {
                return e instanceof bo ? e.loaded ? this._buffer = e.get() : e.onload = () => {
                    this.set(e), this.onload(this)
                } : this._buffer = e, this._reversed && this._reverse(), this
            }
            get() {
                return this._buffer
            }
            load(e) {
                return Ur(this, void 0, void 0, (function*() {
                    const t = bo.load(e).then((e => {
                        this.set(e), this.onload(this)
                    }));
                    bo.downloads.push(t);
                    try {
                        yield t
                    } finally {
                        const e = bo.downloads.indexOf(t);
                        bo.downloads.splice(e, 1)
                    }
                    return this
                }))
            }
            dispose() {
                return super.dispose(), this._buffer = void 0, this
            }
            fromArray(e) {
                const t = qr(e) && e[0].length > 0,
                    n = t ? e.length : 1,
                    r = t ? e[0].length : e.length,
                    o = Eo(),
                    i = o.createBuffer(n, r, o.sampleRate),
                    a = t || 1 !== n ? e : [e];
                for (let e = 0; e < n; e++) i.copyToChannel(a[e], e);
                return this._buffer = i, this
            }
            toMono(e) {
                if (Ir(e)) this.fromArray(this.toArray(e));
                else {
                    let e = new Float32Array(this.length);
                    const t = this.numberOfChannels;
                    for (let n = 0; n < t; n++) {
                        const t = this.toArray(n);
                        for (let n = 0; n < t.length; n++) e[n] += t[n]
                    }
                    e = e.map((e => e / t)), this.fromArray(e)
                }
                return this
            }
            toArray(e) {
                if (Ir(e)) return this.getChannelData(e);
                if (1 === this.numberOfChannels) return this.toArray(0);
                {
                    const e = [];
                    for (let t = 0; t < this.numberOfChannels; t++) e[t] = this.getChannelData(t);
                    return e
                }
            }
            getChannelData(e) {
                return this._buffer ? this._buffer.getChannelData(e) : new Float32Array(0)
            }
            slice(e, t = this.duration) {
                const n = Math.floor(e * this.sampleRate),
                    r = Math.floor(t * this.sampleRate);
                Or(n < r, "The start time must be less than the end time");
                const o = r - n,
                    i = Eo().createBuffer(this.numberOfChannels, o, this.sampleRate);
                for (let e = 0; e < this.numberOfChannels; e++) i.copyToChannel(this.getChannelData(e).subarray(n, r), e);
                return new bo(i)
            }
            _reverse() {
                if (this.loaded)
                    for (let e = 0; e < this.numberOfChannels; e++) this.getChannelData(e).reverse();
                return this
            }
            get loaded() {
                return this.length > 0
            }
            get duration() {
                return this._buffer ? this._buffer.duration : 0
            }
            get length() {
                return this._buffer ? this._buffer.length : 0
            }
            get numberOfChannels() {
                return this._buffer ? this._buffer.numberOfChannels : 0
            }
            get reverse() {
                return this._reversed
            }
            set reverse(e) {
                this._reversed !== e && (this._reversed = e, this._reverse())
            }
            static fromArray(e) {
                return (new bo).fromArray(e)
            }
            static fromUrl(e) {
                return Ur(this, void 0, void 0, (function*() {
                    const t = new bo;
                    return yield t.load(e)
                }))
            }
            static load(e) {
                return Ur(this, void 0, void 0, (function*() {
                    const t = e.match(/\[([^\]\[]+\|.+)\]$/);
                    if (t) {
                        const n = t[1].split("|");
                        let r = n[0];
                        for (const e of n)
                            if (bo.supportsType(e)) {
                                r = e;
                                break
                            } e = e.replace(t[0], r)
                    }
                    const n = "" === bo.baseUrl || bo.baseUrl.endsWith("/") ? bo.baseUrl : bo.baseUrl + "/",
                        r = yield fetch(n + e);
                    if (!r.ok) throw new Error(`could not load url: ${e}`);
                    const o = yield r.arrayBuffer();
                    return yield Eo().decodeAudioData(o)
                }))
            }
            static supportsType(e) {
                const t = e.split("."),
                    n = t[t.length - 1];
                return "" !== document.createElement("audio").canPlayType("audio/" + n)
            }
            static loaded() {
                return Ur(this, void 0, void 0, (function*() {
                    for (yield Promise.resolve(); bo.downloads.length;) yield bo.downloads[0]
                }))
            }
        }
        bo.baseUrl = "", bo.downloads = [];
        class wo extends mo {
            constructor() {
                var e, t, n;
                super({
                    clockSource: "offline",
                    context: Qr(arguments[0]) ? arguments[0] : (e = arguments[0], t = arguments[1] * arguments[2], n = arguments[2], new Er(e, t, n)),
                    lookAhead: 0,
                    updateInterval: Qr(arguments[0]) ? 128 / arguments[0].sampleRate : 128 / arguments[2]
                }), this.name = "OfflineContext", this._currentTime = 0, this.isOffline = !0, this._duration = Qr(arguments[0]) ? arguments[0].length / arguments[0].sampleRate : arguments[1]
            }
            now() {
                return this._currentTime
            }
            get currentTime() {
                return this._currentTime
            }
            _renderClock(e) {
                return Ur(this, void 0, void 0, (function*() {
                    let t = 0;
                    for (; this._duration - this._currentTime >= 0;) {
                        this.emit("tick"), this._currentTime += 128 / this.sampleRate, t++;
                        const n = Math.floor(this.sampleRate / 128);
                        e && t % n == 0 && (yield new Promise((e => setTimeout(e, 1))))
                    }
                }))
            }
            render(e = !0) {
                return Ur(this, void 0, void 0, (function*() {
                    yield this.workletsAreReady(), yield this._renderClock(e);
                    const t = yield this._context.startRendering();
                    return new bo(t)
                }))
            }
            close() {
                return Promise.resolve()
            }
        }
        const _o = new class extends po {
            constructor() {
                super(...arguments), this.lookAhead = 0, this.latencyHint = 0, this.isOffline = !1
            }
            createAnalyser() {
                return {}
            }
            createOscillator() {
                return {}
            }
            createBufferSource() {
                return {}
            }
            createBiquadFilter() {
                return {}
            }
            createBuffer(e, t, n) {
                return {}
            }
            createChannelMerger(e) {
                return {}
            }
            createChannelSplitter(e) {
                return {}
            }
            createConstantSource() {
                return {}
            }
            createConvolver() {
                return {}
            }
            createDelay(e) {
                return {}
            }
            createDynamicsCompressor() {
                return {}
            }
            createGain() {
                return {}
            }
            createIIRFilter(e, t) {
                return {}
            }
            createPanner() {
                return {}
            }
            createPeriodicWave(e, t, n) {
                return {}
            }
            createStereoPanner() {
                return {}
            }
            createWaveShaper() {
                return {}
            }
            createMediaStreamSource(e) {
                return {}
            }
            createMediaElementSource(e) {
                return {}
            }
            createMediaStreamDestination() {
                return {}
            }
            decodeAudioData(e) {
                return Promise.resolve({})
            }
            createAudioWorkletNode(e, t) {
                return {}
            }
            get rawContext() {
                return {}
            }
            addAudioWorkletModule(e, t) {
                return Ur(this, void 0, void 0, (function*() {
                    return Promise.resolve()
                }))
            }
            resume() {
                return Promise.resolve()
            }
            setTimeout(e, t) {
                return 0
            }
            clearTimeout(e) {
                return this
            }
            setInterval(e, t) {
                return 0
            }
            clearInterval(e) {
                return this
            }
            getConstant(e) {
                return {}
            }
            get currentTime() {
                return 0
            }
            get state() {
                return {}
            }
            get sampleRate() {
                return 0
            }
            get listener() {
                return {}
            }
            get transport() {
                return {}
            }
            get draw() {
                return {}
            }
            set draw(e) {}
            get destination() {
                return {}
            }
            set destination(e) {}
            now() {
                return 0
            }
            immediate() {
                return 0
            }
        };
        let xo = _o;

        function Eo() {
            return xo === _o && Br && (e = new mo, xo = Yr(e) ? new mo(e) : Qr(e) ? new wo(e) : e), xo;
            var e
        }
        if (Vr && !Vr.TONE_SILENCE_LOGGING) {
            const e = ` * Tone.js v${n} * `;
            console.log(`%c${e}`, "background: #000; color: #fff")
        }

        function So(e) {
            return Math.pow(2, e / 12)
        }
        let ko = 440;

        function To(e) {
            return Math.round(Co(e))
        }

        function Co(e) {
            return 69 + 12 * Math.log2(e / ko)
        }
        class Oo extends to {
            constructor(e, t, n) {
                super(), this.defaultUnits = "s", this._val = t, this._units = n, this.context = e, this._expressions = this._getExpressions()
            }
            _getExpressions() {
                return {
                    hz: {
                        method: e => this._frequencyToUnits(parseFloat(e)),
                        regexp: /^(\d+(?:\.\d+)?)hz$/i
                    },
                    i: {
                        method: e => this._ticksToUnits(parseInt(e, 10)),
                        regexp: /^(\d+)i$/i
                    },
                    m: {
                        method: e => this._beatsToUnits(parseInt(e, 10) * this._getTimeSignature()),
                        regexp: /^(\d+)m$/i
                    },
                    n: {
                        method: (e, t) => {
                            const n = parseInt(e, 10),
                                r = "." === t ? 1.5 : 1;
                            return 1 === n ? this._beatsToUnits(this._getTimeSignature()) * r : this._beatsToUnits(4 / n) * r
                        },
                        regexp: /^(\d+)n(\.?)$/i
                    },
                    number: {
                        method: e => this._expressions[this.defaultUnits].method.call(this, e),
                        regexp: /^(\d+(?:\.\d+)?)$/
                    },
                    s: {
                        method: e => this._secondsToUnits(parseFloat(e)),
                        regexp: /^(\d+(?:\.\d+)?)s$/
                    },
                    samples: {
                        method: e => parseInt(e, 10) / this.context.sampleRate,
                        regexp: /^(\d+)samples$/
                    },
                    t: {
                        method: e => {
                            const t = parseInt(e, 10);
                            return this._beatsToUnits(8 / (3 * Math.floor(t)))
                        },
                        regexp: /^(\d+)t$/i
                    },
                    tr: {
                        method: (e, t, n) => {
                            let r = 0;
                            return e && "0" !== e && (r += this._beatsToUnits(this._getTimeSignature() * parseFloat(e))), t && "0" !== t && (r += this._beatsToUnits(parseFloat(t))), n && "0" !== n && (r += this._beatsToUnits(parseFloat(n) / 4)), r
                        },
                        regexp: /^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?$/
                    }
                }
            }
            valueOf() {
                if (this._val instanceof Oo && this.fromType(this._val), Dr(this._val)) return this._noArg();
                if (jr(this._val) && Dr(this._units)) {
                    for (const e in this._expressions)
                        if (this._expressions[e].regexp.test(this._val.trim())) {
                            this._units = e;
                            break
                        }
                } else if (Lr(this._val)) {
                    let e = 0;
                    for (const t in this._val)
                        if (Nr(this._val[t])) {
                            const n = this._val[t];
                            e += new this.constructor(this.context, t).valueOf() * n
                        } return e
                }
                if (Nr(this._units)) {
                    const e = this._expressions[this._units],
                        t = this._val.toString().trim().match(e.regexp);
                    return t ? e.method.apply(this, t.slice(1)) : e.method.call(this, this._val)
                }
                return jr(this._val) ? parseFloat(this._val) : this._val
            }
            _frequencyToUnits(e) {
                return 1 / e
            }
            _beatsToUnits(e) {
                return 60 / this._getBpm() * e
            }
            _secondsToUnits(e) {
                return e
            }
            _ticksToUnits(e) {
                return e * this._beatsToUnits(1) / this._getPPQ()
            }
            _noArg() {
                return this._now()
            }
            _getBpm() {
                return this.context.transport.bpm.value
            }
            _getTimeSignature() {
                return this.context.transport.timeSignature
            }
            _getPPQ() {
                return this.context.transport.PPQ
            }
            fromType(e) {
                switch (this._units = void 0, this.defaultUnits) {
                    case "s":
                        this._val = e.toSeconds();
                        break;
                    case "i":
                        this._val = e.toTicks();
                        break;
                    case "hz":
                        this._val = e.toFrequency();
                        break;
                    case "midi":
                        this._val = e.toMidi()
                }
                return this
            }
            toFrequency() {
                return 1 / this.toSeconds()
            }
            toSamples() {
                return this.toSeconds() * this.context.sampleRate
            }
            toMilliseconds() {
                return 1e3 * this.toSeconds()
            }
        }
        class Ao extends Oo {
            constructor() {
                super(...arguments), this.name = "TimeClass"
            }
            _getExpressions() {
                return Object.assign(super._getExpressions(), {
                    now: {
                        method: e => this._now() + new this.constructor(this.context, e).valueOf(),
                        regexp: /^\+(.+)/
                    },
                    quantize: {
                        method: e => {
                            const t = new Ao(this.context, e).valueOf();
                            return this._secondsToUnits(this.context.transport.nextSubdivision(t))
                        },
                        regexp: /^@(.+)/
                    }
                })
            }
            quantize(e, t = 1) {
                const n = new this.constructor(this.context, e).valueOf(),
                    r = this.valueOf();
                return r + (Math.round(r / n) * n - r) * t
            }
            toNotation() {
                const e = this.toSeconds(),
                    t = ["1m"];
                for (let e = 1; e < 9; e++) {
                    const n = Math.pow(2, e);
                    t.push(n + "n."), t.push(n + "n"), t.push(n + "t")
                }
                t.push("0");
                let n = t[0],
                    r = new Ao(this.context, t[0]).toSeconds();
                return t.forEach((t => {
                    const o = new Ao(this.context, t).toSeconds();
                    Math.abs(o - e) < Math.abs(r - e) && (n = t, r = o)
                })), n
            }
            toBarsBeatsSixteenths() {
                const e = this._beatsToUnits(1);
                let t = this.valueOf() / e;
                t = parseFloat(t.toFixed(4));
                const n = Math.floor(t / this._getTimeSignature());
                let r = t % 1 * 4;
                t = Math.floor(t) % this._getTimeSignature();
                const o = r.toString();
                return o.length > 3 && (r = parseFloat(parseFloat(o).toFixed(3))), [n, t, r].join(":")
            }
            toTicks() {
                const e = this._beatsToUnits(1),
                    t = this.valueOf() / e;
                return Math.round(t * this._getPPQ())
            }
            toSeconds() {
                return this.valueOf()
            }
            toMidi() {
                return To(this.toFrequency())
            }
            _now() {
                return this.context.now()
            }
        }
        class Po extends Ao {
            constructor() {
                super(...arguments), this.name = "Frequency", this.defaultUnits = "hz"
            }
            static get A4() {
                return ko
            }
            static set A4(e) {
                ! function(e) {
                    ko = e
                }(e)
            }
            _getExpressions() {
                return Object.assign({}, super._getExpressions(), {
                    midi: {
                        regexp: /^(\d+(?:\.\d+)?midi)/,
                        method(e) {
                            return "midi" === this.defaultUnits ? e : Po.mtof(e)
                        }
                    },
                    note: {
                        regexp: /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i,
                        method(e, t) {
                            const n = Ro[e.toLowerCase()] + 12 * (parseInt(t, 10) + 1);
                            return "midi" === this.defaultUnits ? n : Po.mtof(n)
                        }
                    },
                    tr: {
                        regexp: /^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?/,
                        method(e, t, n) {
                            let r = 1;
                            return e && "0" !== e && (r *= this._beatsToUnits(this._getTimeSignature() * parseFloat(e))), t && "0" !== t && (r *= this._beatsToUnits(parseFloat(t))), n && "0" !== n && (r *= this._beatsToUnits(parseFloat(n) / 4)), r
                        }
                    }
                })
            }
            transpose(e) {
                return new Po(this.context, this.valueOf() * So(e))
            }
            harmonize(e) {
                return e.map((e => this.transpose(e)))
            }
            toMidi() {
                return To(this.valueOf())
            }
            toNote() {
                const e = this.toFrequency(),
                    t = Math.log2(e / Po.A4);
                let n = Math.round(12 * t) + 57;
                const r = Math.floor(n / 12);
                return r < 0 && (n += -12 * r), Mo[n % 12] + r.toString()
            }
            toSeconds() {
                return 1 / super.toSeconds()
            }
            toTicks() {
                const e = this._beatsToUnits(1),
                    t = this.valueOf() / e;
                return Math.floor(t * this._getPPQ())
            }
            _noArg() {
                return 0
            }
            _frequencyToUnits(e) {
                return e
            }
            _ticksToUnits(e) {
                return 1 / (60 * e / (this._getBpm() * this._getPPQ()))
            }
            _beatsToUnits(e) {
                return 1 / super._beatsToUnits(e)
            }
            _secondsToUnits(e) {
                return 1 / e
            }
            static mtof(e) {
                return function(e) {
                    return ko * Math.pow(2, (e - 69) / 12)
                }(e)
            }
            static ftom(e) {
                return To(e)
            }
        }
        const Ro = {
                cbb: -2,
                cb: -1,
                c: 0,
                "c#": 1,
                cx: 2,
                dbb: 0,
                db: 1,
                d: 2,
                "d#": 3,
                dx: 4,
                ebb: 2,
                eb: 3,
                e: 4,
                "e#": 5,
                ex: 6,
                fbb: 3,
                fb: 4,
                f: 5,
                "f#": 6,
                fx: 7,
                gbb: 5,
                gb: 6,
                g: 7,
                "g#": 8,
                gx: 9,
                abb: 7,
                ab: 8,
                a: 9,
                "a#": 10,
                ax: 11,
                bbb: 9,
                bb: 10,
                b: 11,
                "b#": 12,
                bx: 13
            },
            Mo = ["C", "C#", "D", "D#", "E", "F", "F#", "G", "G#", "A", "A#", "B"];
        class Do extends Ao {
            constructor() {
                super(...arguments), this.name = "TransportTime"
            }
            _now() {
                return this.context.transport.seconds
            }
        }
        class No extends to {
            constructor() {
                super();
                const e = Kr(No.getDefaults(), arguments, ["context"]);
                this.defaultContext ? this.context = this.defaultContext : this.context = e.context
            }
            static getDefaults() {
                return {
                    context: Eo()
                }
            }
            now() {
                return this.context.currentTime + this.context.lookAhead
            }
            immediate() {
                return this.context.currentTime
            }
            get sampleTime() {
                return 1 / this.context.sampleRate
            }
            get blockTime() {
                return 128 / this.context.sampleRate
            }
            toSeconds(e) {
                return new Ao(this.context, e).toSeconds()
            }
            toFrequency(e) {
                return new Po(this.context, e).toFrequency()
            }
            toTicks(e) {
                return new Do(this.context, e).toTicks()
            }
            _getPartialProperties(e) {
                const t = this.get();
                return Object.keys(t).forEach((n => {
                    Dr(e[n]) && delete t[n]
                })), t
            }
            get() {
                const e = this.constructor.getDefaults();
                return Object.keys(e).forEach((t => {
                    if (Reflect.has(this, t)) {
                        const n = this[t];
                        Nr(n) && Nr(n.value) && Nr(n.setValueAtTime) ? e[t] = n.value : n instanceof No ? e[t] = n._getPartialProperties(e[t]) : qr(n) || Ir(n) || jr(n) || "boolean" == typeof n ? e[t] = n : delete e[t]
                    }
                })), e
            }
            set(e) {
                return Object.keys(e).forEach((t => {
                    Reflect.has(this, t) && Nr(this[t]) && (this[t] && Nr(this[t].value) && Nr(this[t].setValueAtTime) ? this[t].value !== e[t] && (this[t].value = e[t]) : this[t] instanceof No ? this[t].set(e[t]) : this[t] = e[t])
                })), this
            }
        }
        class Io extends so {
            constructor(e = "stopped") {
                super(), this.name = "StateTimeline", this._initial = e, this.setStateAtTime(this._initial, 0)
            }
            getValueAtTime(e) {
                const t = this.get(e);
                return null !== t ? t.state : this._initial
            }
            setStateAtTime(e, t, n) {
                return Ar(t, 0), this.add(Object.assign({}, n, {
                    state: e,
                    time: t
                })), this
            }
            getLastState(e, t) {
                for (let n = this._search(t); n >= 0; n--) {
                    const t = this._timeline[n];
                    if (t.state === e) return t
                }
            }
            getNextState(e, t) {
                const n = this._search(t);
                if (-1 !== n)
                    for (let t = n; t < this._timeline.length; t++) {
                        const n = this._timeline[t];
                        if (n.state === e) return n
                    }
            }
        }
        class Lo extends No {
            constructor() {
                super(Kr(Lo.getDefaults(), arguments, ["param", "units", "convert"])), this.name = "Param", this.overridden = !1, this._minOutput = 1e-7;
                const e = Kr(Lo.getDefaults(), arguments, ["param", "units", "convert"]);
                for (Or(Nr(e.param) && (Hr(e.param) || e.param instanceof Lo), "param must be an AudioParam"); !Hr(e.param);) e.param = e.param._param;
                this._swappable = !!Nr(e.swappable) && e.swappable, this._swappable ? (this.input = this.context.createGain(), this._param = e.param, this.input.connect(this._param)) : this._param = this.input = e.param, this._events = new so(1e3), this._initialValue = this._param.defaultValue, this.units = e.units, this.convert = e.convert, this._minValue = e.minValue, this._maxValue = e.maxValue, Nr(e.value) && e.value !== this._toType(this._initialValue) && this.setValueAtTime(e.value, 0)
            }
            static getDefaults() {
                return Object.assign(No.getDefaults(), {
                    convert: !0,
                    units: "number"
                })
            }
            get value() {
                const e = this.now();
                return this.getValueAtTime(e)
            }
            set value(e) {
                this.cancelScheduledValues(this.now()), this.setValueAtTime(e, this.now())
            }
            get minValue() {
                return Nr(this._minValue) ? this._minValue : "time" === this.units || "frequency" === this.units || "normalRange" === this.units || "positive" === this.units || "transportTime" === this.units || "ticks" === this.units || "bpm" === this.units || "hertz" === this.units || "samples" === this.units ? 0 : "audioRange" === this.units ? -1 : "decibels" === this.units ? -1 / 0 : this._param.minValue
            }
            get maxValue() {
                return Nr(this._maxValue) ? this._maxValue : "normalRange" === this.units || "audioRange" === this.units ? 1 : this._param.maxValue
            }
            _is(e, t) {
                return this.units === t
            }
            _assertRange(e) {
                return Nr(this.maxValue) && Nr(this.minValue) && Ar(e, this._fromType(this.minValue), this._fromType(this.maxValue)), e
            }
            _fromType(e) {
                return this.convert && !this.overridden ? this._is(e, "time") ? this.toSeconds(e) : this._is(e, "decibels") ? (t = e, Math.pow(10, t / 20)) : this._is(e, "frequency") ? this.toFrequency(e) : e : this.overridden ? 0 : e;
                var t
            }
            _toType(e) {
                return this.convert && "decibels" === this.units ? (t = e, Math.log(t) / Math.LN10 * 20) : e;
                var t
            }
            setValueAtTime(e, t) {
                const n = this.toSeconds(t),
                    r = this._fromType(e);
                return Or(isFinite(r) && isFinite(n), `Invalid argument(s) to setValueAtTime: ${JSON.stringify(e)}, ${JSON.stringify(t)}`), this._assertRange(r), this.log(this.units, "setValueAtTime", e, n), this._events.add({
                    time: n,
                    type: "setValueAtTime",
                    value: r
                }), this._param.setValueAtTime(r, n), this
            }
            getValueAtTime(e) {
                const t = Math.max(this.toSeconds(e), 0),
                    n = this._events.getAfter(t),
                    r = this._events.get(t);
                let o = this._initialValue;
                if (null === r) o = this._initialValue;
                else if ("setTargetAtTime" !== r.type || null !== n && "setValueAtTime" !== n.type)
                    if (null === n) o = r.value;
                    else if ("linearRampToValueAtTime" === n.type || "exponentialRampToValueAtTime" === n.type) {
                    let e = r.value;
                    if ("setTargetAtTime" === r.type) {
                        const t = this._events.getBefore(r.time);
                        e = null === t ? this._initialValue : t.value
                    }
                    o = "linearRampToValueAtTime" === n.type ? this._linearInterpolate(r.time, e, n.time, n.value, t) : this._exponentialInterpolate(r.time, e, n.time, n.value, t)
                } else o = r.value;
                else {
                    const e = this._events.getBefore(r.time);
                    let n;
                    n = null === e ? this._initialValue : e.value, "setTargetAtTime" === r.type && (o = this._exponentialApproach(r.time, n, r.value, r.constant, t))
                }
                return this._toType(o)
            }
            setRampPoint(e) {
                e = this.toSeconds(e);
                let t = this.getValueAtTime(e);
                return this.cancelAndHoldAtTime(e), 0 === this._fromType(t) && (t = this._toType(this._minOutput)), this.setValueAtTime(t, e), this
            }
            linearRampToValueAtTime(e, t) {
                const n = this._fromType(e),
                    r = this.toSeconds(t);
                return Or(isFinite(n) && isFinite(r), `Invalid argument(s) to linearRampToValueAtTime: ${JSON.stringify(e)}, ${JSON.stringify(t)}`), this._assertRange(n), this._events.add({
                    time: r,
                    type: "linearRampToValueAtTime",
                    value: n
                }), this.log(this.units, "linearRampToValueAtTime", e, r), this._param.linearRampToValueAtTime(n, r), this
            }
            exponentialRampToValueAtTime(e, t) {
                let n = this._fromType(e);
                n = ao(n, 0) ? this._minOutput : n, this._assertRange(n);
                const r = this.toSeconds(t);
                return Or(isFinite(n) && isFinite(r), `Invalid argument(s) to exponentialRampToValueAtTime: ${JSON.stringify(e)}, ${JSON.stringify(t)}`), this._events.add({
                    time: r,
                    type: "exponentialRampToValueAtTime",
                    value: n
                }), this.log(this.units, "exponentialRampToValueAtTime", e, r), this._param.exponentialRampToValueAtTime(n, r), this
            }
            exponentialRampTo(e, t, n) {
                return n = this.toSeconds(n), this.setRampPoint(n), this.exponentialRampToValueAtTime(e, n + this.toSeconds(t)), this
            }
            linearRampTo(e, t, n) {
                return n = this.toSeconds(n), this.setRampPoint(n), this.linearRampToValueAtTime(e, n + this.toSeconds(t)), this
            }
            targetRampTo(e, t, n) {
                return n = this.toSeconds(n), this.setRampPoint(n), this.exponentialApproachValueAtTime(e, n, t), this
            }
            exponentialApproachValueAtTime(e, t, n) {
                t = this.toSeconds(t), n = this.toSeconds(n);
                const r = Math.log(n + 1) / Math.log(200);
                return this.setTargetAtTime(e, t, r), this.cancelAndHoldAtTime(t + .9 * n), this.linearRampToValueAtTime(e, t + n), this
            }
            setTargetAtTime(e, t, n) {
                const r = this._fromType(e);
                Or(isFinite(n) && n > 0, "timeConstant must be a number greater than 0");
                const o = this.toSeconds(t);
                return this._assertRange(r), Or(isFinite(r) && isFinite(o), `Invalid argument(s) to setTargetAtTime: ${JSON.stringify(e)}, ${JSON.stringify(t)}`), this._events.add({
                    constant: n,
                    time: o,
                    type: "setTargetAtTime",
                    value: r
                }), this.log(this.units, "setTargetAtTime", e, o, n), this._param.setTargetAtTime(r, o, n), this
            }
            setValueCurveAtTime(e, t, n, r = 1) {
                n = this.toSeconds(n), t = this.toSeconds(t);
                const o = this._fromType(e[0]) * r;
                this.setValueAtTime(this._toType(o), t);
                const i = n / (e.length - 1);
                for (let n = 1; n < e.length; n++) {
                    const o = this._fromType(e[n]) * r;
                    this.linearRampToValueAtTime(this._toType(o), t + n * i)
                }
                return this
            }
            cancelScheduledValues(e) {
                const t = this.toSeconds(e);
                return Or(isFinite(t), `Invalid argument to cancelScheduledValues: ${JSON.stringify(e)}`), this._events.cancel(t), this._param.cancelScheduledValues(t), this.log(this.units, "cancelScheduledValues", t), this
            }
            cancelAndHoldAtTime(e) {
                const t = this.toSeconds(e),
                    n = this._fromType(this.getValueAtTime(t));
                Or(isFinite(t), `Invalid argument to cancelAndHoldAtTime: ${JSON.stringify(e)}`), this.log(this.units, "cancelAndHoldAtTime", t, "value=" + n);
                const r = this._events.get(t),
                    o = this._events.getAfter(t);
                return r && ao(r.time, t) ? o ? (this._param.cancelScheduledValues(o.time), this._events.cancel(o.time)) : (this._param.cancelAndHoldAtTime(t), this._events.cancel(t + this.sampleTime)) : o && (this._param.cancelScheduledValues(o.time), this._events.cancel(o.time), "linearRampToValueAtTime" === o.type ? this.linearRampToValueAtTime(this._toType(n), t) : "exponentialRampToValueAtTime" === o.type && this.exponentialRampToValueAtTime(this._toType(n), t)), this._events.add({
                    time: t,
                    type: "setValueAtTime",
                    value: n
                }), this._param.setValueAtTime(n, t), this
            }
            rampTo(e, t = .1, n) {
                return "frequency" === this.units || "bpm" === this.units || "decibels" === this.units ? this.exponentialRampTo(e, t, n) : this.linearRampTo(e, t, n), this
            }
            apply(e) {
                const t = this.context.currentTime;
                e.setValueAtTime(this.getValueAtTime(t), t);
                const n = this._events.get(t);
                if (n && "setTargetAtTime" === n.type) {
                    const r = this._events.getAfter(n.time),
                        o = r ? r.time : t + 2,
                        i = (o - t) / 10;
                    for (let n = t; n < o; n += i) e.linearRampToValueAtTime(this.getValueAtTime(n), n)
                }
                return this._events.forEachAfter(this.context.currentTime, (t => {
                    "cancelScheduledValues" === t.type ? e.cancelScheduledValues(t.time) : "setTargetAtTime" === t.type ? e.setTargetAtTime(t.value, t.time, t.constant) : e[t.type](t.value, t.time)
                })), this
            }
            setParam(e) {
                Or(this._swappable, "The Param must be assigned as 'swappable' in the constructor");
                const t = this.input;
                return t.disconnect(this._param), this.apply(e), this._param = e, t.connect(this._param), this
            }
            dispose() {
                return super.dispose(), this._events.dispose(), this
            }
            get defaultValue() {
                return this._toType(this._param.defaultValue)
            }
            _exponentialApproach(e, t, n, r, o) {
                return n + (t - n) * Math.exp(-(o - e) / r)
            }
            _linearInterpolate(e, t, n, r, o) {
                return t + (o - e) / (n - e) * (r - t)
            }
            _exponentialInterpolate(e, t, n, r, o) {
                return t * Math.pow(r / t, (o - e) / (n - e))
            }
        }
        class qo extends No {
            constructor() {
                super(...arguments), this.name = "ToneAudioNode", this._internalChannels = []
            }
            get numberOfInputs() {
                return Nr(this.input) ? Hr(this.input) || this.input instanceof Lo ? 1 : this.input.numberOfInputs : 0
            }
            get numberOfOutputs() {
                return Nr(this.output) ? this.output.numberOfOutputs : 0
            }
            _isAudioNode(e) {
                return Nr(e) && (e instanceof qo || Gr(e))
            }
            _getInternalNodes() {
                const e = this._internalChannels.slice(0);
                return this._isAudioNode(this.input) && e.push(this.input), this._isAudioNode(this.output) && this.input !== this.output && e.push(this.output), e
            }
            _setChannelProperties(e) {
                this._getInternalNodes().forEach((t => {
                    t.channelCount = e.channelCount, t.channelCountMode = e.channelCountMode, t.channelInterpretation = e.channelInterpretation
                }))
            }
            _getChannelProperties() {
                const e = this._getInternalNodes();
                Or(e.length > 0, "ToneAudioNode does not have any internal nodes");
                const t = e[0];
                return {
                    channelCount: t.channelCount,
                    channelCountMode: t.channelCountMode,
                    channelInterpretation: t.channelInterpretation
                }
            }
            get channelCount() {
                return this._getChannelProperties().channelCount
            }
            set channelCount(e) {
                const t = this._getChannelProperties();
                this._setChannelProperties(Object.assign(t, {
                    channelCount: e
                }))
            }
            get channelCountMode() {
                return this._getChannelProperties().channelCountMode
            }
            set channelCountMode(e) {
                const t = this._getChannelProperties();
                this._setChannelProperties(Object.assign(t, {
                    channelCountMode: e
                }))
            }
            get channelInterpretation() {
                return this._getChannelProperties().channelInterpretation
            }
            set channelInterpretation(e) {
                const t = this._getChannelProperties();
                this._setChannelProperties(Object.assign(t, {
                    channelInterpretation: e
                }))
            }
            connect(e, t = 0, n = 0) {
                return Fo(this, e, t, n), this
            }
            toDestination() {
                return this.connect(this.context.destination), this
            }
            toMaster() {
                return Mr("toMaster() has been renamed toDestination()"), this.toDestination()
            }
            disconnect(e, t = 0, n = 0) {
                return Vo(this, e, t, n), this
            }
            chain(...e) {
                return jo(this, ...e), this
            }
            fan(...e) {
                return e.forEach((e => this.connect(e))), this
            }
            dispose() {
                return super.dispose(), Nr(this.input) && (this.input instanceof qo ? this.input.dispose() : Gr(this.input) && this.input.disconnect()), Nr(this.output) && (this.output instanceof qo ? this.output.dispose() : Gr(this.output) && this.output.disconnect()), this._internalChannels = [], this
            }
        }

        function jo(...e) {
            const t = e.shift();
            e.reduce(((e, t) => (e instanceof qo ? e.connect(t) : Gr(e) && Fo(e, t), t)), t)
        }

        function Fo(e, t, n = 0, r = 0) {
            for (Or(Nr(e), "Cannot connect from undefined node"), Or(Nr(t), "Cannot connect to undefined node"), (t instanceof qo || Gr(t)) && Or(t.numberOfInputs > 0, "Cannot connect to node with no inputs"), Or(e.numberOfOutputs > 0, "Cannot connect from node with no outputs"); t instanceof qo || t instanceof Lo;) Nr(t.input) && (t = t.input);
            for (; e instanceof qo;) Nr(e.output) && (e = e.output);
            Hr(t) ? e.connect(t, n) : e.connect(t, n, r)
        }

        function Vo(e, t, n = 0, r = 0) {
            if (Nr(t))
                for (; t instanceof qo;) t = t.input;
            for (; !Gr(e);) Nr(e.output) && (e = e.output);
            Hr(t) ? e.disconnect(t, n) : Gr(t) ? e.disconnect(t, n, r) : e.disconnect()
        }
        class Bo extends qo {
            constructor() {
                super(Kr(Bo.getDefaults(), arguments, ["gain", "units"])), this.name = "Gain", this._gainNode = this.context.createGain(), this.input = this._gainNode, this.output = this._gainNode;
                const e = Kr(Bo.getDefaults(), arguments, ["gain", "units"]);
                this.gain = new Lo({
                    context: this.context,
                    convert: e.convert,
                    param: this._gainNode.gain,
                    units: e.units,
                    value: e.gain,
                    minValue: e.minValue,
                    maxValue: e.maxValue
                }), vo(this, "gain")
            }
            static getDefaults() {
                return Object.assign(qo.getDefaults(), {
                    convert: !0,
                    gain: 1,
                    units: "gain"
                })
            }
            dispose() {
                return super.dispose(), this._gainNode.disconnect(), this.gain.dispose(), this
            }
        }
        class zo extends qo {
            constructor(e) {
                super(e), this.onended = yo, this._startTime = -1, this._stopTime = -1, this._timeout = -1, this.output = new Bo({
                    context: this.context,
                    gain: 0
                }), this._gainNode = this.output, this.getStateAtTime = function(e) {
                    const t = this.toSeconds(e);
                    return -1 !== this._startTime && t >= this._startTime && (-1 === this._stopTime || t <= this._stopTime) ? "started" : "stopped"
                }, this._fadeIn = e.fadeIn, this._fadeOut = e.fadeOut, this._curve = e.curve, this.onended = e.onended
            }
            static getDefaults() {
                return Object.assign(qo.getDefaults(), {
                    curve: "linear",
                    fadeIn: 0,
                    fadeOut: 0,
                    onended: yo
                })
            }
            _startGain(e, t = 1) {
                Or(-1 === this._startTime, "Source cannot be started more than once");
                const n = this.toSeconds(this._fadeIn);
                return this._startTime = e + n, this._startTime = Math.max(this._startTime, this.context.currentTime), n > 0 ? (this._gainNode.gain.setValueAtTime(0, e), "linear" === this._curve ? this._gainNode.gain.linearRampToValueAtTime(t, e + n) : this._gainNode.gain.exponentialApproachValueAtTime(t, e, n)) : this._gainNode.gain.setValueAtTime(t, e), this
            }
            stop(e) {
                return this.log("stop", e), this._stopGain(this.toSeconds(e)), this
            }
            _stopGain(e) {
                Or(-1 !== this._startTime, "'start' must be called before 'stop'"), this.cancelStop();
                const t = this.toSeconds(this._fadeOut);
                return this._stopTime = this.toSeconds(e) + t, this._stopTime = Math.max(this._stopTime, this.context.currentTime), t > 0 ? "linear" === this._curve ? this._gainNode.gain.linearRampTo(0, t, e) : this._gainNode.gain.targetRampTo(0, t, e) : (this._gainNode.gain.cancelAndHoldAtTime(e), this._gainNode.gain.setValueAtTime(0, e)), this.context.clearTimeout(this._timeout), this._timeout = this.context.setTimeout((() => {
                    const e = "exponential" === this._curve ? 2 * t : 0;
                    this._stopSource(this.now() + e), this._onended()
                }), this._stopTime - this.context.currentTime), this
            }
            _onended() {
                if (this.onended !== yo && (this.onended(this), this.onended = yo, !this.context.isOffline)) {
                    const e = () => this.dispose();
                    void 0 !== window.requestIdleCallback ? window.requestIdleCallback(e) : setTimeout(e, 1e3)
                }
            }
            get state() {
                return this.getStateAtTime(this.now())
            }
            cancelStop() {
                return this.log("cancelStop"), Or(-1 !== this._startTime, "Source is not started"), this._gainNode.gain.cancelScheduledValues(this._startTime + this.sampleTime), this.context.clearTimeout(this._timeout), this._stopTime = -1, this
            }
            dispose() {
                return super.dispose(), this._gainNode.disconnect(), this
            }
        }
        class Uo extends zo {
            constructor() {
                super(Kr(Uo.getDefaults(), arguments, ["offset"])), this.name = "ToneConstantSource", this._source = this.context.createConstantSource();
                const e = Kr(Uo.getDefaults(), arguments, ["offset"]);
                Fo(this._source, this._gainNode), this.offset = new Lo({
                    context: this.context,
                    convert: e.convert,
                    param: this._source.offset,
                    units: e.units,
                    value: e.offset,
                    minValue: e.minValue,
                    maxValue: e.maxValue
                })
            }
            static getDefaults() {
                return Object.assign(zo.getDefaults(), {
                    convert: !0,
                    offset: 1,
                    units: "number"
                })
            }
            start(e) {
                const t = this.toSeconds(e);
                return this.log("start", t), this._startGain(t), this._source.start(t), this
            }
            _stopSource(e) {
                this._source.stop(e)
            }
            dispose() {
                return super.dispose(), "started" === this.state && this.stop(), this._source.disconnect(), this.offset.dispose(), this
            }
        }
        class Wo extends qo {
            constructor() {
                super(Kr(Wo.getDefaults(), arguments, ["value", "units"])), this.name = "Signal", this.override = !0;
                const e = Kr(Wo.getDefaults(), arguments, ["value", "units"]);
                this.output = this._constantSource = new Uo({
                    context: this.context,
                    convert: e.convert,
                    offset: e.value,
                    units: e.units,
                    minValue: e.minValue,
                    maxValue: e.maxValue
                }), this._constantSource.start(0), this.input = this._param = this._constantSource.offset
            }
            static getDefaults() {
                return Object.assign(qo.getDefaults(), {
                    convert: !0,
                    units: "number",
                    value: 0
                })
            }
            connect(e, t = 0, n = 0) {
                return Ho(this, e, t, n), this
            }
            dispose() {
                return super.dispose(), this._param.dispose(), this._constantSource.dispose(), this
            }
            setValueAtTime(e, t) {
                return this._param.setValueAtTime(e, t), this
            }
            getValueAtTime(e) {
                return this._param.getValueAtTime(e)
            }
            setRampPoint(e) {
                return this._param.setRampPoint(e), this
            }
            linearRampToValueAtTime(e, t) {
                return this._param.linearRampToValueAtTime(e, t), this
            }
            exponentialRampToValueAtTime(e, t) {
                return this._param.exponentialRampToValueAtTime(e, t), this
            }
            exponentialRampTo(e, t, n) {
                return this._param.exponentialRampTo(e, t, n), this
            }
            linearRampTo(e, t, n) {
                return this._param.linearRampTo(e, t, n), this
            }
            targetRampTo(e, t, n) {
                return this._param.targetRampTo(e, t, n), this
            }
            exponentialApproachValueAtTime(e, t, n) {
                return this._param.exponentialApproachValueAtTime(e, t, n), this
            }
            setTargetAtTime(e, t, n) {
                return this._param.setTargetAtTime(e, t, n), this
            }
            setValueCurveAtTime(e, t, n, r) {
                return this._param.setValueCurveAtTime(e, t, n, r), this
            }
            cancelScheduledValues(e) {
                return this._param.cancelScheduledValues(e), this
            }
            cancelAndHoldAtTime(e) {
                return this._param.cancelAndHoldAtTime(e), this
            }
            rampTo(e, t, n) {
                return this._param.rampTo(e, t, n), this
            }
            get value() {
                return this._param.value
            }
            set value(e) {
                this._param.value = e
            }
            get convert() {
                return this._param.convert
            }
            set convert(e) {
                this._param.convert = e
            }
            get units() {
                return this._param.units
            }
            get overridden() {
                return this._param.overridden
            }
            set overridden(e) {
                this._param.overridden = e
            }
            get maxValue() {
                return this._param.maxValue
            }
            get minValue() {
                return this._param.minValue
            }
            apply(e) {
                return this._param.apply(e), this
            }
        }

        function Ho(e, t, n, r) {
            (t instanceof Lo || Hr(t) || t instanceof Wo && t.override) && (t.cancelScheduledValues(0), t.setValueAtTime(0, 0), t instanceof Wo && (t.overridden = !0)), Fo(e, t, n, r)
        }
        class Go extends Lo {
            constructor() {
                super(Kr(Go.getDefaults(), arguments, ["value"])), this.name = "TickParam", this._events = new so(1 / 0), this._multiplier = 1;
                const e = Kr(Go.getDefaults(), arguments, ["value"]);
                this._multiplier = e.multiplier, this._events.cancel(0), this._events.add({
                    ticks: 0,
                    time: 0,
                    type: "setValueAtTime",
                    value: this._fromType(e.value)
                }), this.setValueAtTime(e.value, 0)
            }
            static getDefaults() {
                return Object.assign(Lo.getDefaults(), {
                    multiplier: 1,
                    units: "hertz",
                    value: 1
                })
            }
            setTargetAtTime(e, t, n) {
                t = this.toSeconds(t), this.setRampPoint(t);
                const r = this._fromType(e),
                    o = this._events.get(t),
                    i = Math.round(Math.max(1 / n, 1));
                for (let e = 0; e <= i; e++) {
                    const i = n * e + t,
                        a = this._exponentialApproach(o.time, o.value, r, n, i);
                    this.linearRampToValueAtTime(this._toType(a), i)
                }
                return this
            }
            setValueAtTime(e, t) {
                const n = this.toSeconds(t);
                super.setValueAtTime(e, t);
                const r = this._events.get(n),
                    o = this._events.previousEvent(r),
                    i = this._getTicksUntilEvent(o, n);
                return r.ticks = Math.max(i, 0), this
            }
            linearRampToValueAtTime(e, t) {
                const n = this.toSeconds(t);
                super.linearRampToValueAtTime(e, t);
                const r = this._events.get(n),
                    o = this._events.previousEvent(r),
                    i = this._getTicksUntilEvent(o, n);
                return r.ticks = Math.max(i, 0), this
            }
            exponentialRampToValueAtTime(e, t) {
                t = this.toSeconds(t);
                const n = this._fromType(e),
                    r = this._events.get(t),
                    o = Math.round(Math.max(10 * (t - r.time), 1)),
                    i = (t - r.time) / o;
                for (let e = 0; e <= o; e++) {
                    const o = i * e + r.time,
                        a = this._exponentialInterpolate(r.time, r.value, t, n, o);
                    this.linearRampToValueAtTime(this._toType(a), o)
                }
                return this
            }
            _getTicksUntilEvent(e, t) {
                if (null === e) e = {
                    ticks: 0,
                    time: 0,
                    type: "setValueAtTime",
                    value: 0
                };
                else if (Dr(e.ticks)) {
                    const t = this._events.previousEvent(e);
                    e.ticks = this._getTicksUntilEvent(t, e.time)
                }
                const n = this._fromType(this.getValueAtTime(e.time));
                let r = this._fromType(this.getValueAtTime(t));
                const o = this._events.get(t);
                return o && o.time === t && "setValueAtTime" === o.type && (r = this._fromType(this.getValueAtTime(t - this.sampleTime))), .5 * (t - e.time) * (n + r) + e.ticks
            }
            getTicksAtTime(e) {
                const t = this.toSeconds(e),
                    n = this._events.get(t);
                return Math.max(this._getTicksUntilEvent(n, t), 0)
            }
            getDurationOfTicks(e, t) {
                const n = this.toSeconds(t),
                    r = this.getTicksAtTime(t);
                return this.getTimeOfTick(r + e) - n
            }
            getTimeOfTick(e) {
                const t = this._events.get(e, "ticks"),
                    n = this._events.getAfter(e, "ticks");
                if (t && t.ticks === e) return t.time;
                if (t && n && "linearRampToValueAtTime" === n.type && t.value !== n.value) {
                    const r = this._fromType(this.getValueAtTime(t.time)),
                        o = (this._fromType(this.getValueAtTime(n.time)) - r) / (n.time - t.time),
                        i = Math.sqrt(Math.pow(r, 2) - 2 * o * (t.ticks - e)),
                        a = (-r + i) / o;
                    return (a > 0 ? a : (-r - i) / o) + t.time
                }
                return t ? 0 === t.value ? 1 / 0 : t.time + (e - t.ticks) / t.value : e / this._initialValue
            }
            ticksToTime(e, t) {
                return this.getDurationOfTicks(e, t)
            }
            timeToTicks(e, t) {
                const n = this.toSeconds(t),
                    r = this.toSeconds(e),
                    o = this.getTicksAtTime(n);
                return this.getTicksAtTime(n + r) - o
            }
            _fromType(e) {
                return "bpm" === this.units && this.multiplier ? 1 / (60 / e / this.multiplier) : super._fromType(e)
            }
            _toType(e) {
                return "bpm" === this.units && this.multiplier ? e / this.multiplier * 60 : super._toType(e)
            }
            get multiplier() {
                return this._multiplier
            }
            set multiplier(e) {
                const t = this.value;
                this._multiplier = e, this.cancelScheduledValues(0), this.setValueAtTime(t, 0)
            }
        }
        class Qo extends Wo {
            constructor() {
                super(Kr(Qo.getDefaults(), arguments, ["value"])), this.name = "TickSignal";
                const e = Kr(Qo.getDefaults(), arguments, ["value"]);
                this.input = this._param = new Go({
                    context: this.context,
                    convert: e.convert,
                    multiplier: e.multiplier,
                    param: this._constantSource.offset,
                    units: e.units,
                    value: e.value
                })
            }
            static getDefaults() {
                return Object.assign(Wo.getDefaults(), {
                    multiplier: 1,
                    units: "hertz",
                    value: 1
                })
            }
            ticksToTime(e, t) {
                return this._param.ticksToTime(e, t)
            }
            timeToTicks(e, t) {
                return this._param.timeToTicks(e, t)
            }
            getTimeOfTick(e) {
                return this._param.getTimeOfTick(e)
            }
            getDurationOfTicks(e, t) {
                return this._param.getDurationOfTicks(e, t)
            }
            getTicksAtTime(e) {
                return this._param.getTicksAtTime(e)
            }
            get multiplier() {
                return this._param.multiplier
            }
            set multiplier(e) {
                this._param.multiplier = e
            }
            dispose() {
                return super.dispose(), this._param.dispose(), this
            }
        }
        class Yo extends No {
            constructor() {
                super(Kr(Yo.getDefaults(), arguments, ["frequency"])), this.name = "TickSource", this._state = new Io, this._tickOffset = new so;
                const e = Kr(Yo.getDefaults(), arguments, ["frequency"]);
                this.frequency = new Qo({
                    context: this.context,
                    units: e.units,
                    value: e.frequency
                }), vo(this, "frequency"), this._state.setStateAtTime("stopped", 0), this.setTicksAtTime(0, 0)
            }
            static getDefaults() {
                return Object.assign({
                    frequency: 1,
                    units: "hertz"
                }, No.getDefaults())
            }
            get state() {
                return this.getStateAtTime(this.now())
            }
            start(e, t) {
                const n = this.toSeconds(e);
                return "started" !== this._state.getValueAtTime(n) && (this._state.setStateAtTime("started", n), Nr(t) && this.setTicksAtTime(t, n)), this
            }
            stop(e) {
                const t = this.toSeconds(e);
                if ("stopped" === this._state.getValueAtTime(t)) {
                    const e = this._state.get(t);
                    e && e.time > 0 && (this._tickOffset.cancel(e.time), this._state.cancel(e.time))
                }
                return this._state.cancel(t), this._state.setStateAtTime("stopped", t), this.setTicksAtTime(0, t), this
            }
            pause(e) {
                const t = this.toSeconds(e);
                return "started" === this._state.getValueAtTime(t) && this._state.setStateAtTime("paused", t), this
            }
            cancel(e) {
                return e = this.toSeconds(e), this._state.cancel(e), this._tickOffset.cancel(e), this
            }
            getTicksAtTime(e) {
                const t = this.toSeconds(e),
                    n = this._state.getLastState("stopped", t),
                    r = {
                        state: "paused",
                        time: t
                    };
                this._state.add(r);
                let o = n,
                    i = 0;
                return this._state.forEachBetween(n.time, t + this.sampleTime, (e => {
                    let t = o.time;
                    const n = this._tickOffset.get(e.time);
                    n && n.time >= o.time && (i = n.ticks, t = n.time), "started" === o.state && "started" !== e.state && (i += this.frequency.getTicksAtTime(e.time) - this.frequency.getTicksAtTime(t)), o = e
                })), this._state.remove(r), i
            }
            get ticks() {
                return this.getTicksAtTime(this.now())
            }
            set ticks(e) {
                this.setTicksAtTime(e, this.now())
            }
            get seconds() {
                return this.getSecondsAtTime(this.now())
            }
            set seconds(e) {
                const t = this.now(),
                    n = this.frequency.timeToTicks(e, t);
                this.setTicksAtTime(n, t)
            }
            getSecondsAtTime(e) {
                e = this.toSeconds(e);
                const t = this._state.getLastState("stopped", e),
                    n = {
                        state: "paused",
                        time: e
                    };
                this._state.add(n);
                let r = t,
                    o = 0;
                return this._state.forEachBetween(t.time, e + this.sampleTime, (e => {
                    let t = r.time;
                    const n = this._tickOffset.get(e.time);
                    n && n.time >= r.time && (o = n.seconds, t = n.time), "started" === r.state && "started" !== e.state && (o += e.time - t), r = e
                })), this._state.remove(n), o
            }
            setTicksAtTime(e, t) {
                return t = this.toSeconds(t), this._tickOffset.cancel(t), this._tickOffset.add({
                    seconds: this.frequency.getDurationOfTicks(e, t),
                    ticks: e,
                    time: t
                }), this
            }
            getStateAtTime(e) {
                return e = this.toSeconds(e), this._state.getValueAtTime(e)
            }
            getTimeOfTick(e, t = this.now()) {
                const n = this._tickOffset.get(t),
                    r = this._state.get(t),
                    o = Math.max(n.time, r.time),
                    i = this.frequency.getTicksAtTime(o) + e - n.ticks;
                return this.frequency.getTimeOfTick(i)
            }
            forEachTickBetween(e, t, n) {
                let r = this._state.get(e);
                this._state.forEachBetween(e, t, (t => {
                    r && "started" === r.state && "started" !== t.state && this.forEachTickBetween(Math.max(r.time, e), t.time - this.sampleTime, n), r = t
                }));
                let o = null;
                if (r && "started" === r.state) {
                    const i = Math.max(r.time, e),
                        a = this.frequency.getTicksAtTime(i),
                        s = a - this.frequency.getTicksAtTime(r.time);
                    let l = Math.ceil(s) - s;
                    l = ao(l, 1) ? 0 : l;
                    let u = this.frequency.getTimeOfTick(a + l);
                    for (; u < t;) {
                        try {
                            n(u, Math.round(this.getTicksAtTime(u)))
                        } catch (e) {
                            o = e;
                            break
                        }
                        u += this.frequency.getDurationOfTicks(1, u)
                    }
                }
                if (o) throw o;
                return this
            }
            dispose() {
                return super.dispose(), this._state.dispose(), this._tickOffset.dispose(), this.frequency.dispose(), this
            }
        }
        class $o extends No {
            constructor() {
                super(Kr($o.getDefaults(), arguments, ["callback", "frequency"])), this.name = "Clock", this.callback = yo, this._lastUpdate = 0, this._state = new Io("stopped"), this._boundLoop = this._loop.bind(this);
                const e = Kr($o.getDefaults(), arguments, ["callback", "frequency"]);
                this.callback = e.callback, this._tickSource = new Yo({
                    context: this.context,
                    frequency: e.frequency,
                    units: e.units
                }), this._lastUpdate = 0, this.frequency = this._tickSource.frequency, vo(this, "frequency"), this._state.setStateAtTime("stopped", 0), this.context.on("tick", this._boundLoop)
            }
            static getDefaults() {
                return Object.assign(No.getDefaults(), {
                    callback: yo,
                    frequency: 1,
                    units: "hertz"
                })
            }
            get state() {
                return this._state.getValueAtTime(this.now())
            }
            start(e, t) {
                Pr(this.context);
                const n = this.toSeconds(e);
                return this.log("start", n), "started" !== this._state.getValueAtTime(n) && (this._state.setStateAtTime("started", n), this._tickSource.start(n, t), n < this._lastUpdate && this.emit("start", n, t)), this
            }
            stop(e) {
                const t = this.toSeconds(e);
                return this.log("stop", t), this._state.cancel(t), this._state.setStateAtTime("stopped", t), this._tickSource.stop(t), t < this._lastUpdate && this.emit("stop", t), this
            }
            pause(e) {
                const t = this.toSeconds(e);
                return "started" === this._state.getValueAtTime(t) && (this._state.setStateAtTime("paused", t), this._tickSource.pause(t), t < this._lastUpdate && this.emit("pause", t)), this
            }
            get ticks() {
                return Math.ceil(this.getTicksAtTime(this.now()))
            }
            set ticks(e) {
                this._tickSource.ticks = e
            }
            get seconds() {
                return this._tickSource.seconds
            }
            set seconds(e) {
                this._tickSource.seconds = e
            }
            getSecondsAtTime(e) {
                return this._tickSource.getSecondsAtTime(e)
            }
            setTicksAtTime(e, t) {
                return this._tickSource.setTicksAtTime(e, t), this
            }
            getTimeOfTick(e, t = this.now()) {
                return this._tickSource.getTimeOfTick(e, t)
            }
            getTicksAtTime(e) {
                return this._tickSource.getTicksAtTime(e)
            }
            nextTickTime(e, t) {
                const n = this.toSeconds(t),
                    r = this.getTicksAtTime(n);
                return this._tickSource.getTimeOfTick(r + e, n)
            }
            _loop() {
                const e = this._lastUpdate,
                    t = this.now();
                this._lastUpdate = t, this.log("loop", e, t), e !== t && (this._state.forEachBetween(e, t, (e => {
                    switch (e.state) {
                        case "started":
                            const t = this._tickSource.getTicksAtTime(e.time);
                            this.emit("start", e.time, t);
                            break;
                        case "stopped":
                            0 !== e.time && this.emit("stop", e.time);
                            break;
                        case "paused":
                            this.emit("pause", e.time)
                    }
                })), this._tickSource.forEachTickBetween(e, t, ((e, t) => {
                    this.callback(e, t)
                })))
            }
            getStateAtTime(e) {
                const t = this.toSeconds(e);
                return this._state.getValueAtTime(t)
            }
            dispose() {
                return super.dispose(), this.context.off("tick", this._boundLoop), this._tickSource.dispose(), this._state.dispose(), this
            }
        }
        fo.mixin($o);
        class Zo extends qo {
            constructor() {
                super(Kr(Zo.getDefaults(), arguments, ["delayTime", "maxDelay"])), this.name = "Delay";
                const e = Kr(Zo.getDefaults(), arguments, ["delayTime", "maxDelay"]),
                    t = this.toSeconds(e.maxDelay);
                this._maxDelay = Math.max(t, this.toSeconds(e.delayTime)), this._delayNode = this.input = this.output = this.context.createDelay(t), this.delayTime = new Lo({
                    context: this.context,
                    param: this._delayNode.delayTime,
                    units: "time",
                    value: e.delayTime,
                    minValue: 0,
                    maxValue: this.maxDelay
                }), vo(this, "delayTime")
            }
            static getDefaults() {
                return Object.assign(qo.getDefaults(), {
                    delayTime: 0,
                    maxDelay: 1
                })
            }
            get maxDelay() {
                return this._maxDelay
            }
            dispose() {
                return super.dispose(), this._delayNode.disconnect(), this.delayTime.dispose(), this
            }
        }
        class Xo extends to {
            constructor() {
                super(), this.name = "ToneAudioBuffers", this._buffers = new Map, this._loadingCount = 0;
                const e = Kr(Xo.getDefaults(), arguments, ["urls", "onload", "baseUrl"], "urls");
                this.baseUrl = e.baseUrl, Object.keys(e.urls).forEach((t => {
                    this._loadingCount++;
                    const n = e.urls[t];
                    this.add(t, n, this._bufferLoaded.bind(this, e.onload), e.onerror)
                }))
            }
            static getDefaults() {
                return {
                    baseUrl: "",
                    onerror: yo,
                    onload: yo,
                    urls: {}
                }
            }
            has(e) {
                return this._buffers.has(e.toString())
            }
            get(e) {
                return Or(this.has(e), `ToneAudioBuffers has no buffer named: ${e}`), this._buffers.get(e.toString())
            }
            _bufferLoaded(e) {
                this._loadingCount--, 0 === this._loadingCount && e && e()
            }
            get loaded() {
                return Array.from(this._buffers).every((([e, t]) => t.loaded))
            }
            add(e, t, n = yo, r = yo) {
                return jr(t) ? this._buffers.set(e.toString(), new bo(this.baseUrl + t, n, r)) : this._buffers.set(e.toString(), new bo(t, n, r)), this
            }
            dispose() {
                return super.dispose(), this._buffers.forEach((e => e.dispose())), this._buffers.clear(), this
            }
        }
        class Ko extends Do {
            constructor() {
                super(...arguments), this.name = "Ticks", this.defaultUnits = "i"
            }
            _now() {
                return this.context.transport.ticks
            }
            _beatsToUnits(e) {
                return this._getPPQ() * e
            }
            _secondsToUnits(e) {
                return Math.floor(e / (60 / this._getBpm()) * this._getPPQ())
            }
            _ticksToUnits(e) {
                return e
            }
            toTicks() {
                return this.valueOf()
            }
            toSeconds() {
                return this.valueOf() / this._getPPQ() * (60 / this._getBpm())
            }
        }
        class Jo extends No {
            constructor() {
                super(...arguments), this.name = "Draw", this.expiration = .25, this.anticipation = .008, this._events = new so, this._boundDrawLoop = this._drawLoop.bind(this), this._animationFrame = -1
            }
            schedule(e, t) {
                return this._events.add({
                    callback: e,
                    time: this.toSeconds(t)
                }), 1 === this._events.length && (this._animationFrame = requestAnimationFrame(this._boundDrawLoop)), this
            }
            cancel(e) {
                return this._events.cancel(this.toSeconds(e)), this
            }
            _drawLoop() {
                const e = this.context.currentTime;
                for (; this._events.length && this._events.peek().time - this.anticipation <= e;) {
                    const t = this._events.shift();
                    t && e - t.time <= this.expiration && t.callback()
                }
                this._events.length > 0 && (this._animationFrame = requestAnimationFrame(this._boundDrawLoop))
            }
            dispose() {
                return super.dispose(), this._events.dispose(), cancelAnimationFrame(this._animationFrame), this
            }
        }
        uo((e => {
            e.draw = new Jo({
                context: e
            })
        })), ho((e => {
            e.draw.dispose()
        }));
        class ei extends to {
            constructor() {
                super(...arguments), this.name = "IntervalTimeline", this._root = null, this._length = 0
            }
            add(e) {
                Or(Nr(e.time), "Events must have a time property"), Or(Nr(e.duration), "Events must have a duration parameter"), e.time = e.time.valueOf();
                let t = new ti(e.time, e.time + e.duration, e);
                for (null === this._root ? this._root = t : this._root.insert(t), this._length++; null !== t;) t.updateHeight(), t.updateMax(), this._rebalance(t), t = t.parent;
                return this
            }
            remove(e) {
                if (null !== this._root) {
                    const t = [];
                    this._root.search(e.time, t);
                    for (const n of t)
                        if (n.event === e) {
                            this._removeNode(n), this._length--;
                            break
                        }
                }
                return this
            }
            get length() {
                return this._length
            }
            cancel(e) {
                return this.forEachFrom(e, (e => this.remove(e))), this
            }
            _setRoot(e) {
                this._root = e, null !== this._root && (this._root.parent = null)
            }
            _replaceNodeInParent(e, t) {
                null !== e.parent ? (e.isLeftChild() ? e.parent.left = t : e.parent.right = t, this._rebalance(e.parent)) : this._setRoot(t)
            }
            _removeNode(e) {
                if (null === e.left && null === e.right) this._replaceNodeInParent(e, null);
                else if (null === e.right) this._replaceNodeInParent(e, e.left);
                else if (null === e.left) this._replaceNodeInParent(e, e.right);
                else {
                    let t, n = null;
                    if (e.getBalance() > 0)
                        if (null === e.left.right) t = e.left, t.right = e.right, n = t;
                        else {
                            for (t = e.left.right; null !== t.right;) t = t.right;
                            t.parent && (t.parent.right = t.left, n = t.parent, t.left = e.left, t.right = e.right)
                        }
                    else if (null === e.right.left) t = e.right, t.left = e.left, n = t;
                    else {
                        for (t = e.right.left; null !== t.left;) t = t.left;
                        t.parent && (t.parent.left = t.right, n = t.parent, t.left = e.left, t.right = e.right)
                    }
                    null !== e.parent ? e.isLeftChild() ? e.parent.left = t : e.parent.right = t : this._setRoot(t), n && this._rebalance(n)
                }
                e.dispose()
            }
            _rotateLeft(e) {
                const t = e.parent,
                    n = e.isLeftChild(),
                    r = e.right;
                r && (e.right = r.left, r.left = e), null !== t ? n ? t.left = r : t.right = r : this._setRoot(r)
            }
            _rotateRight(e) {
                const t = e.parent,
                    n = e.isLeftChild(),
                    r = e.left;
                r && (e.left = r.right, r.right = e), null !== t ? n ? t.left = r : t.right = r : this._setRoot(r)
            }
            _rebalance(e) {
                const t = e.getBalance();
                t > 1 && e.left ? e.left.getBalance() < 0 ? this._rotateLeft(e.left) : this._rotateRight(e) : t < -1 && e.right && (e.right.getBalance() > 0 ? this._rotateRight(e.right) : this._rotateLeft(e))
            }
            get(e) {
                if (null !== this._root) {
                    const t = [];
                    if (this._root.search(e, t), t.length > 0) {
                        let e = t[0];
                        for (let n = 1; n < t.length; n++) t[n].low > e.low && (e = t[n]);
                        return e.event
                    }
                }
                return null
            }
            forEach(e) {
                if (null !== this._root) {
                    const t = [];
                    this._root.traverse((e => t.push(e))), t.forEach((t => {
                        t.event && e(t.event)
                    }))
                }
                return this
            }
            forEachAtTime(e, t) {
                if (null !== this._root) {
                    const n = [];
                    this._root.search(e, n), n.forEach((e => {
                        e.event && t(e.event)
                    }))
                }
                return this
            }
            forEachFrom(e, t) {
                if (null !== this._root) {
                    const n = [];
                    this._root.searchAfter(e, n), n.forEach((e => {
                        e.event && t(e.event)
                    }))
                }
                return this
            }
            dispose() {
                return super.dispose(), null !== this._root && this._root.traverse((e => e.dispose())), this._root = null, this
            }
        }
        class ti {
            constructor(e, t, n) {
                this._left = null, this._right = null, this.parent = null, this.height = 0, this.event = n, this.low = e, this.high = t, this.max = this.high
            }
            insert(e) {
                e.low <= this.low ? null === this.left ? this.left = e : this.left.insert(e) : null === this.right ? this.right = e : this.right.insert(e)
            }
            search(e, t) {
                e > this.max || (null !== this.left && this.left.search(e, t), this.low <= e && this.high > e && t.push(this), this.low > e || null !== this.right && this.right.search(e, t))
            }
            searchAfter(e, t) {
                this.low >= e && (t.push(this), null !== this.left && this.left.searchAfter(e, t)), null !== this.right && this.right.searchAfter(e, t)
            }
            traverse(e) {
                e(this), null !== this.left && this.left.traverse(e), null !== this.right && this.right.traverse(e)
            }
            updateHeight() {
                null !== this.left && null !== this.right ? this.height = Math.max(this.left.height, this.right.height) + 1 : null !== this.right ? this.height = this.right.height + 1 : null !== this.left ? this.height = this.left.height + 1 : this.height = 0
            }
            updateMax() {
                this.max = this.high, null !== this.left && (this.max = Math.max(this.max, this.left.max)), null !== this.right && (this.max = Math.max(this.max, this.right.max))
            }
            getBalance() {
                let e = 0;
                return null !== this.left && null !== this.right ? e = this.left.height - this.right.height : null !== this.left ? e = this.left.height + 1 : null !== this.right && (e = -(this.right.height + 1)), e
            }
            isLeftChild() {
                return null !== this.parent && this.parent.left === this
            }
            get left() {
                return this._left
            }
            set left(e) {
                this._left = e, null !== e && (e.parent = this), this.updateHeight(), this.updateMax()
            }
            get right() {
                return this._right
            }
            set right(e) {
                this._right = e, null !== e && (e.parent = this), this.updateHeight(), this.updateMax()
            }
            dispose() {
                this.parent = null, this._left = null, this._right = null, this.event = null
            }
        }
        class ni extends qo {
            constructor() {
                super(Kr(ni.getDefaults(), arguments, ["volume"])), this.name = "Volume";
                const e = Kr(ni.getDefaults(), arguments, ["volume"]);
                this.input = this.output = new Bo({
                    context: this.context,
                    gain: e.volume,
                    units: "decibels"
                }), this.volume = this.output.gain, vo(this, "volume"), this._unmutedVolume = e.volume, this.mute = e.mute
            }
            static getDefaults() {
                return Object.assign(qo.getDefaults(), {
                    mute: !1,
                    volume: 0
                })
            }
            get mute() {
                return this.volume.value === -1 / 0
            }
            set mute(e) {
                !this.mute && e ? (this._unmutedVolume = this.volume.value, this.volume.value = -1 / 0) : this.mute && !e && (this.volume.value = this._unmutedVolume)
            }
            dispose() {
                return super.dispose(), this.input.dispose(), this.volume.dispose(), this
            }
        }
        class ri extends qo {
            constructor() {
                super(Kr(ri.getDefaults(), arguments)), this.name = "Destination", this.input = new ni({
                    context: this.context
                }), this.output = new Bo({
                    context: this.context
                }), this.volume = this.input.volume;
                const e = Kr(ri.getDefaults(), arguments);
                jo(this.input, this.output, this.context.rawContext.destination), this.mute = e.mute, this._internalChannels = [this.input, this.context.rawContext.destination, this.output]
            }
            static getDefaults() {
                return Object.assign(qo.getDefaults(), {
                    mute: !1,
                    volume: 0
                })
            }
            get mute() {
                return this.input.mute
            }
            set mute(e) {
                this.input.mute = e
            }
            chain(...e) {
                return this.input.disconnect(), e.unshift(this.input), e.push(this.output), jo(...e), this
            }
            get maxChannelCount() {
                return this.context.rawContext.destination.maxChannelCount
            }
            dispose() {
                return super.dispose(), this.volume.dispose(), this
            }
        }
        uo((e => {
            e.destination = new ri({
                context: e
            })
        })), ho((e => {
            e.destination.dispose()
        }));
        class oi extends to {
            constructor(e) {
                super(), this.name = "TimelineValue", this._timeline = new so({
                    memory: 10
                }), this._initialValue = e
            }
            set(e, t) {
                return this._timeline.add({
                    value: e,
                    time: t
                }), this
            }
            get(e) {
                const t = this._timeline.get(e);
                return t ? t.value : this._initialValue
            }
        }
        class ii {
            constructor(e, t) {
                this.id = ii._eventId++;
                const n = Object.assign(ii.getDefaults(), t);
                this.transport = e, this.callback = n.callback, this._once = n.once, this.time = n.time
            }
            static getDefaults() {
                return {
                    callback: yo,
                    once: !1,
                    time: 0
                }
            }
            invoke(e) {
                this.callback && (this.callback(e), this._once && this.transport.clear(this.id))
            }
            dispose() {
                return this.callback = void 0, this
            }
        }
        ii._eventId = 0;
        class ai extends ii {
            constructor(e, t) {
                super(e, t), this._currentId = -1, this._nextId = -1, this._nextTick = this.time, this._boundRestart = this._restart.bind(this);
                const n = Object.assign(ai.getDefaults(), t);
                this.duration = new Ko(e.context, n.duration).valueOf(), this._interval = new Ko(e.context, n.interval).valueOf(), this._nextTick = n.time, this.transport.on("start", this._boundRestart), this.transport.on("loopStart", this._boundRestart), this.context = this.transport.context, this._restart()
            }
            static getDefaults() {
                return Object.assign({}, ii.getDefaults(), {
                    duration: 1 / 0,
                    interval: 1,
                    once: !1
                })
            }
            invoke(e) {
                this._createEvents(e), super.invoke(e)
            }
            _createEvents(e) {
                const t = this.transport.getTicksAtTime(e);
                t >= this.time && t >= this._nextTick && this._nextTick + this._interval < this.time + this.duration && (this._nextTick += this._interval, this._currentId = this._nextId, this._nextId = this.transport.scheduleOnce(this.invoke.bind(this), new Ko(this.context, this._nextTick).toSeconds()))
            }
            _restart(e) {
                this.transport.clear(this._currentId), this.transport.clear(this._nextId), this._nextTick = this.time;
                const t = this.transport.getTicksAtTime(e);
                t > this.time && (this._nextTick = this.time + Math.ceil((t - this.time) / this._interval) * this._interval), this._currentId = this.transport.scheduleOnce(this.invoke.bind(this), new Ko(this.context, this._nextTick).toSeconds()), this._nextTick += this._interval, this._nextId = this.transport.scheduleOnce(this.invoke.bind(this), new Ko(this.context, this._nextTick).toSeconds())
            }
            dispose() {
                return super.dispose(), this.transport.clear(this._currentId), this.transport.clear(this._nextId), this.transport.off("start", this._boundRestart), this.transport.off("loopStart", this._boundRestart), this
            }
        }
        class si extends No {
            constructor() {
                super(Kr(si.getDefaults(), arguments)), this.name = "Transport", this._loop = new oi(!1), this._loopStart = 0, this._loopEnd = 0, this._scheduledEvents = {}, this._timeline = new so, this._repeatedEvents = new ei, this._syncedSignals = [], this._swingAmount = 0;
                const e = Kr(si.getDefaults(), arguments);
                this._ppq = e.ppq, this._clock = new $o({
                    callback: this._processTick.bind(this),
                    context: this.context,
                    frequency: 0,
                    units: "bpm"
                }), this._bindClockEvents(), this.bpm = this._clock.frequency, this._clock.frequency.multiplier = e.ppq, this.bpm.setValueAtTime(e.bpm, 0), vo(this, "bpm"), this._timeSignature = e.timeSignature, this._swingTicks = e.ppq / 2
            }
            static getDefaults() {
                return Object.assign(No.getDefaults(), {
                    bpm: 120,
                    loopEnd: "4m",
                    loopStart: 0,
                    ppq: 192,
                    swing: 0,
                    swingSubdivision: "8n",
                    timeSignature: 4
                })
            }
            _processTick(e, t) {
                if (this._loop.get(e) && t >= this._loopEnd && (this.emit("loopEnd", e), this._clock.setTicksAtTime(this._loopStart, e), t = this._loopStart, this.emit("loopStart", e, this._clock.getSecondsAtTime(e)), this.emit("loop", e)), this._swingAmount > 0 && t % this._ppq != 0 && t % (2 * this._swingTicks) != 0) {
                    const n = t % (2 * this._swingTicks) / (2 * this._swingTicks),
                        r = Math.sin(n * Math.PI) * this._swingAmount;
                    e += new Ko(this.context, 2 * this._swingTicks / 3).toSeconds() * r
                }
                this._timeline.forEachAtTime(t, (t => t.invoke(e)))
            }
            schedule(e, t) {
                const n = new ii(this, {
                    callback: e,
                    time: new Do(this.context, t).toTicks()
                });
                return this._addEvent(n, this._timeline)
            }
            scheduleRepeat(e, t, n, r = 1 / 0) {
                const o = new ai(this, {
                    callback: e,
                    duration: new Ao(this.context, r).toTicks(),
                    interval: new Ao(this.context, t).toTicks(),
                    time: new Do(this.context, n).toTicks()
                });
                return this._addEvent(o, this._repeatedEvents)
            }
            scheduleOnce(e, t) {
                const n = new ii(this, {
                    callback: e,
                    once: !0,
                    time: new Do(this.context, t).toTicks()
                });
                return this._addEvent(n, this._timeline)
            }
            clear(e) {
                if (this._scheduledEvents.hasOwnProperty(e)) {
                    const t = this._scheduledEvents[e.toString()];
                    t.timeline.remove(t.event), t.event.dispose(), delete this._scheduledEvents[e.toString()]
                }
                return this
            }
            _addEvent(e, t) {
                return this._scheduledEvents[e.id.toString()] = {
                    event: e,
                    timeline: t
                }, t.add(e), e.id
            }
            cancel(e = 0) {
                const t = this.toTicks(e);
                return this._timeline.forEachFrom(t, (e => this.clear(e.id))), this._repeatedEvents.forEachFrom(t, (e => this.clear(e.id))), this
            }
            _bindClockEvents() {
                this._clock.on("start", ((e, t) => {
                    t = new Ko(this.context, t).toSeconds(), this.emit("start", e, t)
                })), this._clock.on("stop", (e => {
                    this.emit("stop", e)
                })), this._clock.on("pause", (e => {
                    this.emit("pause", e)
                }))
            }
            get state() {
                return this._clock.getStateAtTime(this.now())
            }
            start(e, t) {
                let n;
                return Nr(t) && (n = this.toTicks(t)), this._clock.start(e, n), this
            }
            stop(e) {
                return this._clock.stop(e), this
            }
            pause(e) {
                return this._clock.pause(e), this
            }
            toggle(e) {
                return e = this.toSeconds(e), "started" !== this._clock.getStateAtTime(e) ? this.start(e) : this.stop(e), this
            }
            get timeSignature() {
                return this._timeSignature
            }
            set timeSignature(e) {
                qr(e) && (e = e[0] / e[1] * 4), this._timeSignature = e
            }
            get loopStart() {
                return new Ao(this.context, this._loopStart, "i").toSeconds()
            }
            set loopStart(e) {
                this._loopStart = this.toTicks(e)
            }
            get loopEnd() {
                return new Ao(this.context, this._loopEnd, "i").toSeconds()
            }
            set loopEnd(e) {
                this._loopEnd = this.toTicks(e)
            }
            get loop() {
                return this._loop.get(this.now())
            }
            set loop(e) {
                this._loop.set(e, this.now())
            }
            setLoopPoints(e, t) {
                return this.loopStart = e, this.loopEnd = t, this
            }
            get swing() {
                return this._swingAmount
            }
            set swing(e) {
                this._swingAmount = e
            }
            get swingSubdivision() {
                return new Ko(this.context, this._swingTicks).toNotation()
            }
            set swingSubdivision(e) {
                this._swingTicks = this.toTicks(e)
            }
            get position() {
                const e = this.now(),
                    t = this._clock.getTicksAtTime(e);
                return new Ko(this.context, t).toBarsBeatsSixteenths()
            }
            set position(e) {
                const t = this.toTicks(e);
                this.ticks = t
            }
            get seconds() {
                return this._clock.seconds
            }
            set seconds(e) {
                const t = this.now(),
                    n = this._clock.frequency.timeToTicks(e, t);
                this.ticks = n
            }
            get progress() {
                if (this.loop) {
                    const e = this.now();
                    return (this._clock.getTicksAtTime(e) - this._loopStart) / (this._loopEnd - this._loopStart)
                }
                return 0
            }
            get ticks() {
                return this._clock.ticks
            }
            set ticks(e) {
                if (this._clock.ticks !== e) {
                    const t = this.now();
                    if ("started" === this.state) {
                        const n = this._clock.getTicksAtTime(t),
                            r = t + this._clock.frequency.getDurationOfTicks(Math.ceil(n) - n, t);
                        this.emit("stop", r), this._clock.setTicksAtTime(e, r), this.emit("start", r, this._clock.getSecondsAtTime(r))
                    } else this._clock.setTicksAtTime(e, t)
                }
            }
            getTicksAtTime(e) {
                return Math.round(this._clock.getTicksAtTime(e))
            }
            getSecondsAtTime(e) {
                return this._clock.getSecondsAtTime(e)
            }
            get PPQ() {
                return this._clock.frequency.multiplier
            }
            set PPQ(e) {
                this._clock.frequency.multiplier = e
            }
            nextSubdivision(e) {
                if (e = this.toTicks(e), "started" !== this.state) return 0;
                {
                    const t = this.now(),
                        n = e - this.getTicksAtTime(t) % e;
                    return this._clock.nextTickTime(n, t)
                }
            }
            syncSignal(e, t) {
                if (!t) {
                    const n = this.now();
                    if (0 !== e.getValueAtTime(n)) {
                        const r = 1 / (60 / this.bpm.getValueAtTime(n) / this.PPQ);
                        t = e.getValueAtTime(n) / r
                    } else t = 0
                }
                const n = new Bo(t);
                return this.bpm.connect(n), n.connect(e._param), this._syncedSignals.push({
                    initial: e.value,
                    ratio: n,
                    signal: e
                }), e.value = 0, this
            }
            unsyncSignal(e) {
                for (let t = this._syncedSignals.length - 1; t >= 0; t--) {
                    const n = this._syncedSignals[t];
                    n.signal === e && (n.ratio.dispose(), n.signal.value = n.initial, this._syncedSignals.splice(t, 1))
                }
                return this
            }
            dispose() {
                return super.dispose(), this._clock.dispose(), go(this, "bpm"), this._timeline.dispose(), this._repeatedEvents.dispose(), this
            }
        }
        fo.mixin(si), uo((e => {
            e.transport = new si({
                context: e
            })
        })), ho((e => {
            e.transport.dispose()
        }));
        class li extends qo {
            constructor(e) {
                super(e), this.input = void 0, this._state = new Io("stopped"), this._synced = !1, this._scheduled = [], this._syncedStart = yo, this._syncedStop = yo, this._state.memory = 100, this._state.increasing = !0, this._volume = this.output = new ni({
                    context: this.context,
                    mute: e.mute,
                    volume: e.volume
                }), this.volume = this._volume.volume, vo(this, "volume"), this.onstop = e.onstop
            }
            static getDefaults() {
                return Object.assign(qo.getDefaults(), {
                    mute: !1,
                    onstop: yo,
                    volume: 0
                })
            }
            get state() {
                return this._synced ? "started" === this.context.transport.state ? this._state.getValueAtTime(this.context.transport.seconds) : "stopped" : this._state.getValueAtTime(this.now())
            }
            get mute() {
                return this._volume.mute
            }
            set mute(e) {
                this._volume.mute = e
            }
            _clampToCurrentTime(e) {
                return this._synced ? e : Math.max(e, this.context.currentTime)
            }
            start(e, t, n) {
                let r = Dr(e) && this._synced ? this.context.transport.seconds : this.toSeconds(e);
                if (r = this._clampToCurrentTime(r), this._synced || "started" !== this._state.getValueAtTime(r))
                    if (this.log("start", r), this._state.setStateAtTime("started", r), this._synced) {
                        const e = this._state.get(r);
                        e && (e.offset = this.toSeconds(Jr(t, 0)), e.duration = n ? this.toSeconds(n) : void 0);
                        const o = this.context.transport.schedule((e => {
                            this._start(e, t, n)
                        }), r);
                        this._scheduled.push(o), "started" === this.context.transport.state && this.context.transport.getSecondsAtTime(this.immediate()) > r && this._syncedStart(this.now(), this.context.transport.seconds)
                    } else Pr(this.context), this._start(r, t, n);
                else Or(ro(r, this._state.get(r).time), "Start time must be strictly greater than previous start time"), this._state.cancel(r), this._state.setStateAtTime("started", r), this.log("restart", r), this.restart(r, t, n);
                return this
            }
            stop(e) {
                let t = Dr(e) && this._synced ? this.context.transport.seconds : this.toSeconds(e);
                if (t = this._clampToCurrentTime(t), "started" === this._state.getValueAtTime(t) || Nr(this._state.getNextState("started", t))) {
                    if (this.log("stop", t), this._synced) {
                        const e = this.context.transport.schedule(this._stop.bind(this), t);
                        this._scheduled.push(e)
                    } else this._stop(t);
                    this._state.cancel(t), this._state.setStateAtTime("stopped", t)
                }
                return this
            }
            restart(e, t, n) {
                return e = this.toSeconds(e), "started" === this._state.getValueAtTime(e) && (this._state.cancel(e), this._restart(e, t, n)), this
            }
            sync() {
                return this._synced || (this._synced = !0, this._syncedStart = (e, t) => {
                    if (t > 0) {
                        const n = this._state.get(t);
                        if (n && "started" === n.state && n.time !== t) {
                            const r = t - this.toSeconds(n.time);
                            let o;
                            n.duration && (o = this.toSeconds(n.duration) - r), this._start(e, this.toSeconds(n.offset) + r, o)
                        }
                    }
                }, this._syncedStop = e => {
                    const t = this.context.transport.getSecondsAtTime(Math.max(e - this.sampleTime, 0));
                    "started" === this._state.getValueAtTime(t) && this._stop(e)
                }, this.context.transport.on("start", this._syncedStart), this.context.transport.on("loopStart", this._syncedStart), this.context.transport.on("stop", this._syncedStop), this.context.transport.on("pause", this._syncedStop), this.context.transport.on("loopEnd", this._syncedStop)), this
            }
            unsync() {
                return this._synced && (this.context.transport.off("stop", this._syncedStop), this.context.transport.off("pause", this._syncedStop), this.context.transport.off("loopEnd", this._syncedStop), this.context.transport.off("start", this._syncedStart), this.context.transport.off("loopStart", this._syncedStart)), this._synced = !1, this._scheduled.forEach((e => this.context.transport.clear(e))), this._scheduled = [], this._state.cancel(0), this._stop(0), this
            }
            dispose() {
                return super.dispose(), this.onstop = yo, this.unsync(), this._volume.dispose(), this._state.dispose(), this
            }
        }
        class ui extends zo {
            constructor() {
                super(Kr(ui.getDefaults(), arguments, ["url", "onload"])), this.name = "ToneBufferSource", this._source = this.context.createBufferSource(), this._internalChannels = [this._source], this._sourceStarted = !1, this._sourceStopped = !1;
                const e = Kr(ui.getDefaults(), arguments, ["url", "onload"]);
                Fo(this._source, this._gainNode), this._source.onended = () => this._stopSource(), this.playbackRate = new Lo({
                    context: this.context,
                    param: this._source.playbackRate,
                    units: "positive",
                    value: e.playbackRate
                }), this.loop = e.loop, this.loopStart = e.loopStart, this.loopEnd = e.loopEnd, this._buffer = new bo(e.url, e.onload, e.onerror), this._internalChannels.push(this._source)
            }
            static getDefaults() {
                return Object.assign(zo.getDefaults(), {
                    url: new bo,
                    loop: !1,
                    loopEnd: 0,
                    loopStart: 0,
                    onload: yo,
                    onerror: yo,
                    playbackRate: 1
                })
            }
            get fadeIn() {
                return this._fadeIn
            }
            set fadeIn(e) {
                this._fadeIn = e
            }
            get fadeOut() {
                return this._fadeOut
            }
            set fadeOut(e) {
                this._fadeOut = e
            }
            get curve() {
                return this._curve
            }
            set curve(e) {
                this._curve = e
            }
            start(e, t, n, r = 1) {
                Or(this.buffer.loaded, "buffer is either not set or not loaded");
                const o = this.toSeconds(e);
                this._startGain(o, r), t = this.loop ? Jr(t, this.loopStart) : Jr(t, 0);
                let i = Math.max(this.toSeconds(t), 0);
                if (this.loop) {
                    const e = this.toSeconds(this.loopEnd) || this.buffer.duration,
                        t = this.toSeconds(this.loopStart),
                        n = e - t;
                    oo(i, e) && (i = (i - t) % n + t), ao(i, this.buffer.duration) && (i = 0)
                }
                if (this._source.buffer = this.buffer.get(), this._source.loopEnd = this.toSeconds(this.loopEnd) || this.buffer.duration, io(i, this.buffer.duration) && (this._sourceStarted = !0, this._source.start(o, i)), Nr(n)) {
                    let e = this.toSeconds(n);
                    e = Math.max(e, 0), this.stop(o + e)
                }
                return this
            }
            _stopSource(e) {
                !this._sourceStopped && this._sourceStarted && (this._sourceStopped = !0, this._source.stop(this.toSeconds(e)), this._onended())
            }
            get loopStart() {
                return this._source.loopStart
            }
            set loopStart(e) {
                this._source.loopStart = this.toSeconds(e)
            }
            get loopEnd() {
                return this._source.loopEnd
            }
            set loopEnd(e) {
                this._source.loopEnd = this.toSeconds(e)
            }
            get buffer() {
                return this._buffer
            }
            set buffer(e) {
                this._buffer.set(e)
            }
            get loop() {
                return this._source.loop
            }
            set loop(e) {
                this._source.loop = e, this._sourceStarted && this.cancelStop()
            }
            dispose() {
                return super.dispose(), this._source.onended = null, this._source.disconnect(), this._buffer.dispose(), this.playbackRate.dispose(), this
            }
        }
        class ci extends li {
            constructor() {
                super(Kr(ci.getDefaults(), arguments, ["type"])), this.name = "Noise", this._source = null;
                const e = Kr(ci.getDefaults(), arguments, ["type"]);
                this._playbackRate = e.playbackRate, this.type = e.type, this._fadeIn = e.fadeIn, this._fadeOut = e.fadeOut
            }
            static getDefaults() {
                return Object.assign(li.getDefaults(), {
                    fadeIn: 0,
                    fadeOut: 0,
                    playbackRate: 1,
                    type: "white"
                })
            }
            get type() {
                return this._type
            }
            set type(e) {
                if (Or(e in fi, "Noise: invalid type: " + e), this._type !== e && (this._type = e, "started" === this.state)) {
                    const e = this.now();
                    this._stop(e), this._start(e)
                }
            }
            get playbackRate() {
                return this._playbackRate
            }
            set playbackRate(e) {
                this._playbackRate = e, this._source && (this._source.playbackRate.value = e)
            }
            _start(e) {
                const t = fi[this._type];
                this._source = new ui({
                    url: t,
                    context: this.context,
                    fadeIn: this._fadeIn,
                    fadeOut: this._fadeOut,
                    loop: !0,
                    onended: () => this.onstop(this),
                    playbackRate: this._playbackRate
                }).connect(this.output), this._source.start(this.toSeconds(e), Math.random() * (t.duration - .001))
            }
            _stop(e) {
                this._source && (this._source.stop(this.toSeconds(e)), this._source = null)
            }
            get fadeIn() {
                return this._fadeIn
            }
            set fadeIn(e) {
                this._fadeIn = e, this._source && (this._source.fadeIn = this._fadeIn)
            }
            get fadeOut() {
                return this._fadeOut
            }
            set fadeOut(e) {
                this._fadeOut = e, this._source && (this._source.fadeOut = this._fadeOut)
            }
            _restart(e) {
                this._stop(e), this._start(e)
            }
            dispose() {
                return super.dispose(), this._source && this._source.disconnect(), this
            }
        }
        const hi = 220500,
            di = {
                brown: null,
                pink: null,
                white: null
            },
            fi = {
                get brown() {
                    if (!di.brown) {
                        const e = [];
                        for (let t = 0; t < 2; t++) {
                            const n = new Float32Array(hi);
                            e[t] = n;
                            let r = 0;
                            for (let e = 0; e < hi; e++) {
                                const t = 2 * Math.random() - 1;
                                n[e] = (r + .02 * t) / 1.02, r = n[e], n[e] *= 3.5
                            }
                        }
                        di.brown = (new bo).fromArray(e)
                    }
                    return di.brown
                },
                get pink() {
                    if (!di.pink) {
                        const e = [];
                        for (let t = 0; t < 2; t++) {
                            const n = new Float32Array(hi);
                            let r, o, i, a, s, l, u;
                            e[t] = n, r = o = i = a = s = l = u = 0;
                            for (let e = 0; e < hi; e++) {
                                const t = 2 * Math.random() - 1;
                                r = .99886 * r + .0555179 * t, o = .99332 * o + .0750759 * t, i = .969 * i + .153852 * t, a = .8665 * a + .3104856 * t, s = .55 * s + .5329522 * t, l = -.7616 * l - .016898 * t, n[e] = r + o + i + a + s + l + u + .5362 * t, n[e] *= .11, u = .115926 * t
                            }
                        }
                        di.pink = (new bo).fromArray(e)
                    }
                    return di.pink
                },
                get white() {
                    if (!di.white) {
                        const e = [];
                        for (let t = 0; t < 2; t++) {
                            const n = new Float32Array(hi);
                            e[t] = n;
                            for (let e = 0; e < hi; e++) n[e] = 2 * Math.random() - 1
                        }
                        di.white = (new bo).fromArray(e)
                    }
                    return di.white
                }
            };

        function pi(e, t) {
            return Ur(this, void 0, void 0, (function*() {
                const n = t / e.context.sampleRate,
                    r = new wo(1, n, e.context.sampleRate);
                return new e.constructor(Object.assign(e.get(), {
                    frequency: 2 / n,
                    detune: 0,
                    context: r
                })).toDestination().start(0), (yield r.render()).getChannelData(0)
            }))
        }
        class mi extends zo {
            constructor() {
                super(Kr(mi.getDefaults(), arguments, ["frequency", "type"])), this.name = "ToneOscillatorNode", this._oscillator = this.context.createOscillator(), this._internalChannels = [this._oscillator];
                const e = Kr(mi.getDefaults(), arguments, ["frequency", "type"]);
                Fo(this._oscillator, this._gainNode), this.type = e.type, this.frequency = new Lo({
                    context: this.context,
                    param: this._oscillator.frequency,
                    units: "frequency",
                    value: e.frequency
                }), this.detune = new Lo({
                    context: this.context,
                    param: this._oscillator.detune,
                    units: "cents",
                    value: e.detune
                }), vo(this, ["frequency", "detune"])
            }
            static getDefaults() {
                return Object.assign(zo.getDefaults(), {
                    detune: 0,
                    frequency: 440,
                    type: "sine"
                })
            }
            start(e) {
                const t = this.toSeconds(e);
                return this.log("start", t), this._startGain(t), this._oscillator.start(t), this
            }
            _stopSource(e) {
                this._oscillator.stop(e)
            }
            setPeriodicWave(e) {
                return this._oscillator.setPeriodicWave(e), this
            }
            get type() {
                return this._oscillator.type
            }
            set type(e) {
                this._oscillator.type = e
            }
            dispose() {
                return super.dispose(), "started" === this.state && this.stop(), this._oscillator.disconnect(), this.frequency.dispose(), this.detune.dispose(), this
            }
        }
        class vi extends li {
            constructor() {
                super(Kr(vi.getDefaults(), arguments, ["frequency", "type"])), this.name = "Oscillator", this._oscillator = null;
                const e = Kr(vi.getDefaults(), arguments, ["frequency", "type"]);
                this.frequency = new Wo({
                    context: this.context,
                    units: "frequency",
                    value: e.frequency
                }), vo(this, "frequency"), this.detune = new Wo({
                    context: this.context,
                    units: "cents",
                    value: e.detune
                }), vo(this, "detune"), this._partials = e.partials, this._partialCount = e.partialCount, this._type = e.type, e.partialCount && "custom" !== e.type && (this._type = this.baseType + e.partialCount.toString()), this.phase = e.phase
            }
            static getDefaults() {
                return Object.assign(li.getDefaults(), {
                    detune: 0,
                    frequency: 440,
                    partialCount: 0,
                    partials: [],
                    phase: 0,
                    type: "sine"
                })
            }
            _start(e) {
                const t = this.toSeconds(e),
                    n = new mi({
                        context: this.context,
                        onended: () => this.onstop(this)
                    });
                this._oscillator = n, this._wave ? this._oscillator.setPeriodicWave(this._wave) : this._oscillator.type = this._type, this._oscillator.connect(this.output), this.frequency.connect(this._oscillator.frequency), this.detune.connect(this._oscillator.detune), this._oscillator.start(t)
            }
            _stop(e) {
                const t = this.toSeconds(e);
                this._oscillator && this._oscillator.stop(t)
            }
            _restart(e) {
                const t = this.toSeconds(e);
                return this.log("restart", t), this._oscillator && this._oscillator.cancelStop(), this._state.cancel(t), this
            }
            syncFrequency() {
                return this.context.transport.syncSignal(this.frequency), this
            }
            unsyncFrequency() {
                return this.context.transport.unsyncSignal(this.frequency), this
            }
            _getCachedPeriodicWave() {
                if ("custom" === this._type) {
                    const e = vi._periodicWaveCache.find((e => {
                        return e.phase === this._phase && (t = e.partials, n = this._partials, t.length === n.length && t.every(((e, t) => n[t] === e)));
                        var t, n
                    }));
                    return e
                } {
                    const e = vi._periodicWaveCache.find((e => e.type === this._type && e.phase === this._phase));
                    return this._partialCount = e ? e.partialCount : this._partialCount, e
                }
            }
            get type() {
                return this._type
            }
            set type(e) {
                this._type = e;
                const t = -1 !== ["sine", "square", "sawtooth", "triangle"].indexOf(e);
                if (0 === this._phase && t) this._wave = void 0, this._partialCount = 0, null !== this._oscillator && (this._oscillator.type = e);
                else {
                    const t = this._getCachedPeriodicWave();
                    if (Nr(t)) {
                        const {
                            partials: e,
                            wave: n
                        } = t;
                        this._wave = n, this._partials = e, null !== this._oscillator && this._oscillator.setPeriodicWave(this._wave)
                    } else {
                        const [t, n] = this._getRealImaginary(e, this._phase), r = this.context.createPeriodicWave(t, n);
                        this._wave = r, null !== this._oscillator && this._oscillator.setPeriodicWave(this._wave), vi._periodicWaveCache.push({
                            imag: n,
                            partialCount: this._partialCount,
                            partials: this._partials,
                            phase: this._phase,
                            real: t,
                            type: this._type,
                            wave: this._wave
                        }), vi._periodicWaveCache.length > 100 && vi._periodicWaveCache.shift()
                    }
                }
            }
            get baseType() {
                return this._type.replace(this.partialCount.toString(), "")
            }
            set baseType(e) {
                this.partialCount && "custom" !== this._type && "custom" !== e ? this.type = e + this.partialCount : this.type = e
            }
            get partialCount() {
                return this._partialCount
            }
            set partialCount(e) {
                Ar(e, 0);
                let t = this._type;
                const n = /^(sine|triangle|square|sawtooth)(\d+)$/.exec(this._type);
                if (n && (t = n[1]), "custom" !== this._type) this.type = 0 === e ? t : t + e.toString();
                else {
                    const t = new Float32Array(e);
                    this._partials.forEach(((e, n) => t[n] = e)), this._partials = Array.from(t), this.type = this._type
                }
            }
            _getRealImaginary(e, t) {
                let n = 2048;
                const r = new Float32Array(n),
                    o = new Float32Array(n);
                let i = 1;
                if ("custom" === e) {
                    if (i = this._partials.length + 1, this._partialCount = this._partials.length, n = i, 0 === this._partials.length) return [r, o]
                } else {
                    const t = /^(sine|triangle|square|sawtooth)(\d+)$/.exec(e);
                    t ? (i = parseInt(t[2], 10) + 1, this._partialCount = parseInt(t[2], 10), e = t[1], i = Math.max(i, 2), n = i) : this._partialCount = 0, this._partials = []
                }
                for (let a = 1; a < n; ++a) {
                    const n = 2 / (a * Math.PI);
                    let s;
                    switch (e) {
                        case "sine":
                            s = a <= i ? 1 : 0, this._partials[a - 1] = s;
                            break;
                        case "square":
                            s = 1 & a ? 2 * n : 0, this._partials[a - 1] = s;
                            break;
                        case "sawtooth":
                            s = n * (1 & a ? 1 : -1), this._partials[a - 1] = s;
                            break;
                        case "triangle":
                            s = 1 & a ? n * n * 2 * (a - 1 >> 1 & 1 ? -1 : 1) : 0, this._partials[a - 1] = s;
                            break;
                        case "custom":
                            s = this._partials[a - 1];
                            break;
                        default:
                            throw new TypeError("Oscillator: invalid type: " + e)
                    }
                    0 !== s ? (r[a] = -s * Math.sin(t * a), o[a] = s * Math.cos(t * a)) : (r[a] = 0, o[a] = 0)
                }
                return [r, o]
            }
            _inverseFFT(e, t, n) {
                let r = 0;
                const o = e.length;
                for (let i = 0; i < o; i++) r += e[i] * Math.cos(i * n) + t[i] * Math.sin(i * n);
                return r
            }
            getInitialValue() {
                const [e, t] = this._getRealImaginary(this._type, 0);
                let n = 0;
                const r = 2 * Math.PI;
                for (let o = 0; o < 32; o++) n = Math.max(this._inverseFFT(e, t, o / 32 * r), n);
                return o = -this._inverseFFT(e, t, this._phase) / n, Math.max(Math.min(o, 1), -1);
                var o
            }
            get partials() {
                return this._partials.slice(0, this.partialCount)
            }
            set partials(e) {
                this._partials = e, this._partialCount = this._partials.length, e.length && (this.type = "custom")
            }
            get phase() {
                return this._phase * (180 / Math.PI)
            }
            set phase(e) {
                this._phase = e * Math.PI / 180, this.type = this._type
            }
            asArray(e = 1024) {
                return Ur(this, void 0, void 0, (function*() {
                    return pi(this, e)
                }))
            }
            dispose() {
                return super.dispose(), null !== this._oscillator && this._oscillator.dispose(), this._wave = void 0, this.frequency.dispose(), this.detune.dispose(), this
            }
        }
        vi._periodicWaveCache = [];
        class gi extends qo {
            constructor() {
                super(Object.assign(Kr(gi.getDefaults(), arguments, ["context"])))
            }
            connect(e, t = 0, n = 0) {
                return Ho(this, e, t, n), this
            }
        }
        class yi extends gi {
            constructor() {
                super(Object.assign(Kr(yi.getDefaults(), arguments, ["mapping", "length"]))), this.name = "WaveShaper", this._shaper = this.context.createWaveShaper(), this.input = this._shaper, this.output = this._shaper;
                const e = Kr(yi.getDefaults(), arguments, ["mapping", "length"]);
                qr(e.mapping) || e.mapping instanceof Float32Array ? this.curve = Float32Array.from(e.mapping) : "function" == typeof e.mapping && this.setMap(e.mapping, e.length)
            }
            static getDefaults() {
                return Object.assign(Wo.getDefaults(), {
                    length: 1024
                })
            }
            setMap(e, t = 1024) {
                const n = new Float32Array(t);
                for (let r = 0, o = t; r < o; r++) {
                    const t = r / (o - 1) * 2 - 1;
                    n[r] = e(t, r)
                }
                return this.curve = n, this
            }
            get curve() {
                return this._shaper.curve
            }
            set curve(e) {
                this._shaper.curve = e
            }
            get oversample() {
                return this._shaper.oversample
            }
            set oversample(e) {
                Or(["none", "2x", "4x"].some((t => t.includes(e))), "oversampling must be either 'none', '2x', or '4x'"), this._shaper.oversample = e
            }
            dispose() {
                return super.dispose(), this._shaper.disconnect(), this
            }
        }
        class bi extends gi {
            constructor() {
                super(...arguments), this.name = "AudioToGain", this._norm = new yi({
                    context: this.context,
                    mapping: e => (e + 1) / 2
                }), this.input = this._norm, this.output = this._norm
            }
            dispose() {
                return super.dispose(), this._norm.dispose(), this
            }
        }
        class wi extends Wo {
            constructor() {
                super(Object.assign(Kr(wi.getDefaults(), arguments, ["value"]))), this.name = "Multiply", this.override = !1;
                const e = Kr(wi.getDefaults(), arguments, ["value"]);
                this._mult = this.input = this.output = new Bo({
                    context: this.context,
                    minValue: e.minValue,
                    maxValue: e.maxValue
                }), this.factor = this._param = this._mult.gain, this.factor.setValueAtTime(e.value, 0)
            }
            static getDefaults() {
                return Object.assign(Wo.getDefaults(), {
                    value: 0
                })
            }
            dispose() {
                return super.dispose(), this._mult.dispose(), this
            }
        }
        class _i extends li {
            constructor() {
                super(Kr(_i.getDefaults(), arguments, ["frequency", "type", "modulationType"])), this.name = "AMOscillator", this._modulationScale = new bi({
                    context: this.context
                }), this._modulationNode = new Bo({
                    context: this.context
                });
                const e = Kr(_i.getDefaults(), arguments, ["frequency", "type", "modulationType"]);
                this._carrier = new vi({
                    context: this.context,
                    detune: e.detune,
                    frequency: e.frequency,
                    onstop: () => this.onstop(this),
                    phase: e.phase,
                    type: e.type
                }), this.frequency = this._carrier.frequency, this.detune = this._carrier.detune, this._modulator = new vi({
                    context: this.context,
                    phase: e.phase,
                    type: e.modulationType
                }), this.harmonicity = new wi({
                    context: this.context,
                    units: "positive",
                    value: e.harmonicity
                }), this.frequency.chain(this.harmonicity, this._modulator.frequency), this._modulator.chain(this._modulationScale, this._modulationNode.gain), this._carrier.chain(this._modulationNode, this.output), vo(this, ["frequency", "detune", "harmonicity"])
            }
            static getDefaults() {
                return Object.assign(vi.getDefaults(), {
                    harmonicity: 1,
                    modulationType: "square"
                })
            }
            _start(e) {
                this._modulator.start(e), this._carrier.start(e)
            }
            _stop(e) {
                this._modulator.stop(e), this._carrier.stop(e)
            }
            _restart(e) {
                this._modulator.restart(e), this._carrier.restart(e)
            }
            get type() {
                return this._carrier.type
            }
            set type(e) {
                this._carrier.type = e
            }
            get baseType() {
                return this._carrier.baseType
            }
            set baseType(e) {
                this._carrier.baseType = e
            }
            get partialCount() {
                return this._carrier.partialCount
            }
            set partialCount(e) {
                this._carrier.partialCount = e
            }
            get modulationType() {
                return this._modulator.type
            }
            set modulationType(e) {
                this._modulator.type = e
            }
            get phase() {
                return this._carrier.phase
            }
            set phase(e) {
                this._carrier.phase = e, this._modulator.phase = e
            }
            get partials() {
                return this._carrier.partials
            }
            set partials(e) {
                this._carrier.partials = e
            }
            asArray(e = 1024) {
                return Ur(this, void 0, void 0, (function*() {
                    return pi(this, e)
                }))
            }
            dispose() {
                return super.dispose(), this.frequency.dispose(), this.detune.dispose(), this.harmonicity.dispose(), this._carrier.dispose(), this._modulator.dispose(), this._modulationNode.dispose(), this._modulationScale.dispose(), this
            }
        }
        class xi extends li {
            constructor() {
                super(Kr(xi.getDefaults(), arguments, ["frequency", "type", "modulationType"])), this.name = "FMOscillator", this._modulationNode = new Bo({
                    context: this.context,
                    gain: 0
                });
                const e = Kr(xi.getDefaults(), arguments, ["frequency", "type", "modulationType"]);
                this._carrier = new vi({
                    context: this.context,
                    detune: e.detune,
                    frequency: 0,
                    onstop: () => this.onstop(this),
                    phase: e.phase,
                    type: e.type
                }), this.detune = this._carrier.detune, this.frequency = new Wo({
                    context: this.context,
                    units: "frequency",
                    value: e.frequency
                }), this._modulator = new vi({
                    context: this.context,
                    phase: e.phase,
                    type: e.modulationType
                }), this.harmonicity = new wi({
                    context: this.context,
                    units: "positive",
                    value: e.harmonicity
                }), this.modulationIndex = new wi({
                    context: this.context,
                    units: "positive",
                    value: e.modulationIndex
                }), this.frequency.connect(this._carrier.frequency), this.frequency.chain(this.harmonicity, this._modulator.frequency), this.frequency.chain(this.modulationIndex, this._modulationNode), this._modulator.connect(this._modulationNode.gain), this._modulationNode.connect(this._carrier.frequency), this._carrier.connect(this.output), this.detune.connect(this._modulator.detune), vo(this, ["modulationIndex", "frequency", "detune", "harmonicity"])
            }
            static getDefaults() {
                return Object.assign(vi.getDefaults(), {
                    harmonicity: 1,
                    modulationIndex: 2,
                    modulationType: "square"
                })
            }
            _start(e) {
                this._modulator.start(e), this._carrier.start(e)
            }
            _stop(e) {
                this._modulator.stop(e), this._carrier.stop(e)
            }
            _restart(e) {
                return this._modulator.restart(e), this._carrier.restart(e), this
            }
            get type() {
                return this._carrier.type
            }
            set type(e) {
                this._carrier.type = e
            }
            get baseType() {
                return this._carrier.baseType
            }
            set baseType(e) {
                this._carrier.baseType = e
            }
            get partialCount() {
                return this._carrier.partialCount
            }
            set partialCount(e) {
                this._carrier.partialCount = e
            }
            get modulationType() {
                return this._modulator.type
            }
            set modulationType(e) {
                this._modulator.type = e
            }
            get phase() {
                return this._carrier.phase
            }
            set phase(e) {
                this._carrier.phase = e, this._modulator.phase = e
            }
            get partials() {
                return this._carrier.partials
            }
            set partials(e) {
                this._carrier.partials = e
            }
            asArray(e = 1024) {
                return Ur(this, void 0, void 0, (function*() {
                    return pi(this, e)
                }))
            }
            dispose() {
                return super.dispose(), this.frequency.dispose(), this.harmonicity.dispose(), this._carrier.dispose(), this._modulator.dispose(), this._modulationNode.dispose(), this.modulationIndex.dispose(), this
            }
        }
        class Ei extends li {
            constructor() {
                super(Kr(Ei.getDefaults(), arguments, ["frequency", "width"])), this.name = "PulseOscillator", this._widthGate = new Bo({
                    context: this.context,
                    gain: 0
                }), this._thresh = new yi({
                    context: this.context,
                    mapping: e => e <= 0 ? -1 : 1
                });
                const e = Kr(Ei.getDefaults(), arguments, ["frequency", "width"]);
                this.width = new Wo({
                    context: this.context,
                    units: "audioRange",
                    value: e.width
                }), this._triangle = new vi({
                    context: this.context,
                    detune: e.detune,
                    frequency: e.frequency,
                    onstop: () => this.onstop(this),
                    phase: e.phase,
                    type: "triangle"
                }), this.frequency = this._triangle.frequency, this.detune = this._triangle.detune, this._triangle.chain(this._thresh, this.output), this.width.chain(this._widthGate, this._thresh), vo(this, ["width", "frequency", "detune"])
            }
            static getDefaults() {
                return Object.assign(li.getDefaults(), {
                    detune: 0,
                    frequency: 440,
                    phase: 0,
                    type: "pulse",
                    width: .2
                })
            }
            _start(e) {
                e = this.toSeconds(e), this._triangle.start(e), this._widthGate.gain.setValueAtTime(1, e)
            }
            _stop(e) {
                e = this.toSeconds(e), this._triangle.stop(e), this._widthGate.gain.cancelScheduledValues(e), this._widthGate.gain.setValueAtTime(0, e)
            }
            _restart(e) {
                this._triangle.restart(e), this._widthGate.gain.cancelScheduledValues(e), this._widthGate.gain.setValueAtTime(1, e)
            }
            get phase() {
                return this._triangle.phase
            }
            set phase(e) {
                this._triangle.phase = e
            }
            get type() {
                return "pulse"
            }
            get baseType() {
                return "pulse"
            }
            get partials() {
                return []
            }
            get partialCount() {
                return 0
            }
            set carrierType(e) {
                this._triangle.type = e
            }
            asArray(e = 1024) {
                return Ur(this, void 0, void 0, (function*() {
                    return pi(this, e)
                }))
            }
            dispose() {
                return super.dispose(), this._triangle.dispose(), this.width.dispose(), this._widthGate.dispose(), this._thresh.dispose(), this
            }
        }
        class Si extends li {
            constructor() {
                super(Kr(Si.getDefaults(), arguments, ["frequency", "type", "spread"])), this.name = "FatOscillator", this._oscillators = [];
                const e = Kr(Si.getDefaults(), arguments, ["frequency", "type", "spread"]);
                this.frequency = new Wo({
                    context: this.context,
                    units: "frequency",
                    value: e.frequency
                }), this.detune = new Wo({
                    context: this.context,
                    units: "cents",
                    value: e.detune
                }), this._spread = e.spread, this._type = e.type, this._phase = e.phase, this._partials = e.partials, this._partialCount = e.partialCount, this.count = e.count, vo(this, ["frequency", "detune"])
            }
            static getDefaults() {
                return Object.assign(vi.getDefaults(), {
                    count: 3,
                    spread: 20,
                    type: "sawtooth"
                })
            }
            _start(e) {
                e = this.toSeconds(e), this._forEach((t => t.start(e)))
            }
            _stop(e) {
                e = this.toSeconds(e), this._forEach((t => t.stop(e)))
            }
            _restart(e) {
                this._forEach((t => t.restart(e)))
            }
            _forEach(e) {
                for (let t = 0; t < this._oscillators.length; t++) e(this._oscillators[t], t)
            }
            get type() {
                return this._type
            }
            set type(e) {
                this._type = e, this._forEach((t => t.type = e))
            }
            get spread() {
                return this._spread
            }
            set spread(e) {
                if (this._spread = e, this._oscillators.length > 1) {
                    const t = -e / 2,
                        n = e / (this._oscillators.length - 1);
                    this._forEach(((e, r) => e.detune.value = t + n * r))
                }
            }
            get count() {
                return this._oscillators.length
            }
            set count(e) {
                if (Ar(e, 1), this._oscillators.length !== e) {
                    this._forEach((e => e.dispose())), this._oscillators = [];
                    for (let t = 0; t < e; t++) {
                        const n = new vi({
                            context: this.context,
                            volume: -6 - 1.1 * e,
                            type: this._type,
                            phase: this._phase + t / e * 360,
                            partialCount: this._partialCount,
                            onstop: 0 === t ? () => this.onstop(this) : yo
                        });
                        "custom" === this.type && (n.partials = this._partials), this.frequency.connect(n.frequency), this.detune.connect(n.detune), n.detune.overridden = !1, n.connect(this.output), this._oscillators[t] = n
                    }
                    this.spread = this._spread, "started" === this.state && this._forEach((e => e.start()))
                }
            }
            get phase() {
                return this._phase
            }
            set phase(e) {
                this._phase = e, this._forEach(((e, t) => e.phase = this._phase + t / this.count * 360))
            }
            get baseType() {
                return this._oscillators[0].baseType
            }
            set baseType(e) {
                this._forEach((t => t.baseType = e)), this._type = this._oscillators[0].type
            }
            get partials() {
                return this._oscillators[0].partials
            }
            set partials(e) {
                this._partials = e, this._partialCount = this._partials.length, e.length && (this._type = "custom", this._forEach((t => t.partials = e)))
            }
            get partialCount() {
                return this._oscillators[0].partialCount
            }
            set partialCount(e) {
                this._partialCount = e, this._forEach((t => t.partialCount = e)), this._type = this._oscillators[0].type
            }
            asArray(e = 1024) {
                return Ur(this, void 0, void 0, (function*() {
                    return pi(this, e)
                }))
            }
            dispose() {
                return super.dispose(), this.frequency.dispose(), this.detune.dispose(), this._forEach((e => e.dispose())), this
            }
        }
        class ki extends li {
            constructor() {
                super(Kr(ki.getDefaults(), arguments, ["frequency", "modulationFrequency"])), this.name = "PWMOscillator", this.sourceType = "pwm", this._scale = new wi({
                    context: this.context,
                    value: 2
                });
                const e = Kr(ki.getDefaults(), arguments, ["frequency", "modulationFrequency"]);
                this._pulse = new Ei({
                    context: this.context,
                    frequency: e.modulationFrequency
                }), this._pulse.carrierType = "sine", this.modulationFrequency = this._pulse.frequency, this._modulator = new vi({
                    context: this.context,
                    detune: e.detune,
                    frequency: e.frequency,
                    onstop: () => this.onstop(this),
                    phase: e.phase
                }), this.frequency = this._modulator.frequency, this.detune = this._modulator.detune, this._modulator.chain(this._scale, this._pulse.width), this._pulse.connect(this.output), vo(this, ["modulationFrequency", "frequency", "detune"])
            }
            static getDefaults() {
                return Object.assign(li.getDefaults(), {
                    detune: 0,
                    frequency: 440,
                    modulationFrequency: .4,
                    phase: 0,
                    type: "pwm"
                })
            }
            _start(e) {
                e = this.toSeconds(e), this._modulator.start(e), this._pulse.start(e)
            }
            _stop(e) {
                e = this.toSeconds(e), this._modulator.stop(e), this._pulse.stop(e)
            }
            _restart(e) {
                this._modulator.restart(e), this._pulse.restart(e)
            }
            get type() {
                return "pwm"
            }
            get baseType() {
                return "pwm"
            }
            get partials() {
                return []
            }
            get partialCount() {
                return 0
            }
            get phase() {
                return this._modulator.phase
            }
            set phase(e) {
                this._modulator.phase = e
            }
            asArray(e = 1024) {
                return Ur(this, void 0, void 0, (function*() {
                    return pi(this, e)
                }))
            }
            dispose() {
                return super.dispose(), this._pulse.dispose(), this._scale.dispose(), this._modulator.dispose(), this
            }
        }
        const Ti = {
            am: _i,
            fat: Si,
            fm: xi,
            oscillator: vi,
            pulse: Ei,
            pwm: ki
        };
        class Ci extends li {
            constructor() {
                super(Kr(Ci.getDefaults(), arguments, ["frequency", "type"])), this.name = "OmniOscillator";
                const e = Kr(Ci.getDefaults(), arguments, ["frequency", "type"]);
                this.frequency = new Wo({
                    context: this.context,
                    units: "frequency",
                    value: e.frequency
                }), this.detune = new Wo({
                    context: this.context,
                    units: "cents",
                    value: e.detune
                }), vo(this, ["frequency", "detune"]), this.set(e)
            }
            static getDefaults() {
                return Object.assign(vi.getDefaults(), xi.getDefaults(), _i.getDefaults(), Si.getDefaults(), Ei.getDefaults(), ki.getDefaults())
            }
            _start(e) {
                this._oscillator.start(e)
            }
            _stop(e) {
                this._oscillator.stop(e)
            }
            _restart(e) {
                return this._oscillator.restart(e), this
            }
            get type() {
                let e = "";
                return ["am", "fm", "fat"].some((e => this._sourceType === e)) && (e = this._sourceType), e + this._oscillator.type
            }
            set type(e) {
                "fm" === e.substr(0, 2) ? (this._createNewOscillator("fm"), this._oscillator = this._oscillator, this._oscillator.type = e.substr(2)) : "am" === e.substr(0, 2) ? (this._createNewOscillator("am"), this._oscillator = this._oscillator, this._oscillator.type = e.substr(2)) : "fat" === e.substr(0, 3) ? (this._createNewOscillator("fat"), this._oscillator = this._oscillator, this._oscillator.type = e.substr(3)) : "pwm" === e ? (this._createNewOscillator("pwm"), this._oscillator = this._oscillator) : "pulse" === e ? this._createNewOscillator("pulse") : (this._createNewOscillator("oscillator"), this._oscillator = this._oscillator, this._oscillator.type = e)
            }
            get partials() {
                return this._oscillator.partials
            }
            set partials(e) {
                this._getOscType(this._oscillator, "pulse") || this._getOscType(this._oscillator, "pwm") || (this._oscillator.partials = e)
            }
            get partialCount() {
                return this._oscillator.partialCount
            }
            set partialCount(e) {
                this._getOscType(this._oscillator, "pulse") || this._getOscType(this._oscillator, "pwm") || (this._oscillator.partialCount = e)
            }
            set(e) {
                return Reflect.has(e, "type") && e.type && (this.type = e.type), super.set(e), this
            }
            _createNewOscillator(e) {
                if (e !== this._sourceType) {
                    this._sourceType = e;
                    const t = Ti[e],
                        n = this.now();
                    if (this._oscillator) {
                        const e = this._oscillator;
                        e.stop(n), this.context.setTimeout((() => e.dispose()), this.blockTime)
                    }
                    this._oscillator = new t({
                        context: this.context
                    }), this.frequency.connect(this._oscillator.frequency), this.detune.connect(this._oscillator.detune), this._oscillator.connect(this.output), this._oscillator.onstop = () => this.onstop(this), "started" === this.state && this._oscillator.start(n)
                }
            }
            get phase() {
                return this._oscillator.phase
            }
            set phase(e) {
                this._oscillator.phase = e
            }
            get sourceType() {
                return this._sourceType
            }
            set sourceType(e) {
                let t = "sine";
                "pwm" !== this._oscillator.type && "pulse" !== this._oscillator.type && (t = this._oscillator.type), "fm" === e ? this.type = "fm" + t : "am" === e ? this.type = "am" + t : "fat" === e ? this.type = "fat" + t : "oscillator" === e ? this.type = t : "pulse" === e ? this.type = "pulse" : "pwm" === e && (this.type = "pwm")
            }
            _getOscType(e, t) {
                return e instanceof Ti[t]
            }
            get baseType() {
                return this._oscillator.baseType
            }
            set baseType(e) {
                this._getOscType(this._oscillator, "pulse") || this._getOscType(this._oscillator, "pwm") || "pulse" === e || "pwm" === e || (this._oscillator.baseType = e)
            }
            get width() {
                return this._getOscType(this._oscillator, "pulse") ? this._oscillator.width : void 0
            }
            get count() {
                return this._getOscType(this._oscillator, "fat") ? this._oscillator.count : void 0
            }
            set count(e) {
                this._getOscType(this._oscillator, "fat") && Ir(e) && (this._oscillator.count = e)
            }
            get spread() {
                return this._getOscType(this._oscillator, "fat") ? this._oscillator.spread : void 0
            }
            set spread(e) {
                this._getOscType(this._oscillator, "fat") && Ir(e) && (this._oscillator.spread = e)
            }
            get modulationType() {
                return this._getOscType(this._oscillator, "fm") || this._getOscType(this._oscillator, "am") ? this._oscillator.modulationType : void 0
            }
            set modulationType(e) {
                (this._getOscType(this._oscillator, "fm") || this._getOscType(this._oscillator, "am")) && jr(e) && (this._oscillator.modulationType = e)
            }
            get modulationIndex() {
                return this._getOscType(this._oscillator, "fm") ? this._oscillator.modulationIndex : void 0
            }
            get harmonicity() {
                return this._getOscType(this._oscillator, "fm") || this._getOscType(this._oscillator, "am") ? this._oscillator.harmonicity : void 0
            }
            get modulationFrequency() {
                return this._getOscType(this._oscillator, "pwm") ? this._oscillator.modulationFrequency : void 0
            }
            asArray(e = 1024) {
                return Ur(this, void 0, void 0, (function*() {
                    return pi(this, e)
                }))
            }
            dispose() {
                return super.dispose(), this.detune.dispose(), this.frequency.dispose(), this._oscillator.dispose(), this
            }
        }
        class Oi extends Wo {
            constructor() {
                super(Object.assign(Kr(Oi.getDefaults(), arguments, ["value"]))), this.override = !1, this.name = "Add", this._sum = new Bo({
                    context: this.context
                }), this.input = this._sum, this.output = this._sum, this.addend = this._param, jo(this._constantSource, this._sum)
            }
            static getDefaults() {
                return Object.assign(Wo.getDefaults(), {
                    value: 0
                })
            }
            dispose() {
                return super.dispose(), this._sum.dispose(), this
            }
        }
        class Ai extends gi {
            constructor() {
                super(Object.assign(Kr(Ai.getDefaults(), arguments, ["min", "max"]))), this.name = "Scale";
                const e = Kr(Ai.getDefaults(), arguments, ["min", "max"]);
                this._mult = this.input = new wi({
                    context: this.context,
                    value: e.max - e.min
                }), this._add = this.output = new Oi({
                    context: this.context,
                    value: e.min
                }), this._min = e.min, this._max = e.max, this.input.connect(this.output)
            }
            static getDefaults() {
                return Object.assign(gi.getDefaults(), {
                    max: 1,
                    min: 0
                })
            }
            get min() {
                return this._min
            }
            set min(e) {
                this._min = e, this._setRange()
            }
            get max() {
                return this._max
            }
            set max(e) {
                this._max = e, this._setRange()
            }
            _setRange() {
                this._add.value = this._min, this._mult.value = this._max - this._min
            }
            dispose() {
                return super.dispose(), this._add.dispose(), this._mult.dispose(), this
            }
        }
        class Pi extends gi {
            constructor() {
                super(Object.assign(Kr(Pi.getDefaults(), arguments))), this.name = "Zero", this._gain = new Bo({
                    context: this.context
                }), this.output = this._gain, this.input = void 0, Fo(this.context.getConstant(0), this._gain)
            }
            dispose() {
                return super.dispose(), Vo(this.context.getConstant(0), this._gain), this
            }
        }
        class Ri extends qo {
            constructor() {
                super(Kr(Ri.getDefaults(), arguments, ["frequency", "min", "max"])), this.name = "LFO", this._stoppedValue = 0, this._units = "number", this.convert = !0, this._fromType = Lo.prototype._fromType, this._toType = Lo.prototype._toType, this._is = Lo.prototype._is, this._clampValue = Lo.prototype._clampValue;
                const e = Kr(Ri.getDefaults(), arguments, ["frequency", "min", "max"]);
                this._oscillator = new vi(e), this.frequency = this._oscillator.frequency, this._amplitudeGain = new Bo({
                    context: this.context,
                    gain: e.amplitude,
                    units: "normalRange"
                }), this.amplitude = this._amplitudeGain.gain, this._stoppedSignal = new Wo({
                    context: this.context,
                    units: "audioRange",
                    value: 0
                }), this._zeros = new Pi({
                    context: this.context
                }), this._a2g = new bi({
                    context: this.context
                }), this._scaler = this.output = new Ai({
                    context: this.context,
                    max: e.max,
                    min: e.min
                }), this.units = e.units, this.min = e.min, this.max = e.max, this._oscillator.chain(this._amplitudeGain, this._a2g, this._scaler), this._zeros.connect(this._a2g), this._stoppedSignal.connect(this._a2g), vo(this, ["amplitude", "frequency"]), this.phase = e.phase
            }
            static getDefaults() {
                return Object.assign(vi.getDefaults(), {
                    amplitude: 1,
                    frequency: "4n",
                    max: 1,
                    min: 0,
                    type: "sine",
                    units: "number"
                })
            }
            start(e) {
                return e = this.toSeconds(e), this._stoppedSignal.setValueAtTime(0, e), this._oscillator.start(e), this
            }
            stop(e) {
                return e = this.toSeconds(e), this._stoppedSignal.setValueAtTime(this._stoppedValue, e), this._oscillator.stop(e), this
            }
            sync() {
                return this._oscillator.sync(), this._oscillator.syncFrequency(), this
            }
            unsync() {
                return this._oscillator.unsync(), this._oscillator.unsyncFrequency(), this
            }
            _setStoppedValue() {
                this._stoppedValue = this._oscillator.getInitialValue(), this._stoppedSignal.value = this._stoppedValue
            }
            get min() {
                return this._toType(this._scaler.min)
            }
            set min(e) {
                e = this._fromType(e), this._scaler.min = e
            }
            get max() {
                return this._toType(this._scaler.max)
            }
            set max(e) {
                e = this._fromType(e), this._scaler.max = e
            }
            get type() {
                return this._oscillator.type
            }
            set type(e) {
                this._oscillator.type = e, this._setStoppedValue()
            }
            get partials() {
                return this._oscillator.partials
            }
            set partials(e) {
                this._oscillator.partials = e, this._setStoppedValue()
            }
            get phase() {
                return this._oscillator.phase
            }
            set phase(e) {
                this._oscillator.phase = e, this._setStoppedValue()
            }
            get units() {
                return this._units
            }
            set units(e) {
                const t = this.min,
                    n = this.max;
                this._units = e, this.min = t, this.max = n
            }
            get state() {
                return this._oscillator.state
            }
            connect(e, t, n) {
                return (e instanceof Lo || e instanceof Wo) && (this.convert = e.convert, this.units = e.units), Ho(this, e, t, n), this
            }
            dispose() {
                return super.dispose(), this._oscillator.dispose(), this._stoppedSignal.dispose(), this._zeros.dispose(), this._scaler.dispose(), this._a2g.dispose(), this._amplitudeGain.dispose(), this.amplitude.dispose(), this
            }
        }

        function Mi(e, t = 1 / 0) {
            const n = new WeakMap;
            return function(r, o) {
                Reflect.defineProperty(r, o, {
                    configurable: !0,
                    enumerable: !0,
                    get: function() {
                        return n.get(this)
                    },
                    set: function(r) {
                        Ar(r, e, t), n.set(this, r)
                    }
                })
            }
        }

        function Di(e, t = 1 / 0) {
            const n = new WeakMap;
            return function(r, o) {
                Reflect.defineProperty(r, o, {
                    configurable: !0,
                    enumerable: !0,
                    get: function() {
                        return n.get(this)
                    },
                    set: function(r) {
                        Ar(this.toSeconds(r), e, t), n.set(this, r)
                    }
                })
            }
        }
        class Ni extends li {
            constructor() {
                super(Kr(Ni.getDefaults(), arguments, ["url", "onload"])), this.name = "Player", this._activeSources = new Set;
                const e = Kr(Ni.getDefaults(), arguments, ["url", "onload"]);
                this._buffer = new bo({
                    onload: this._onload.bind(this, e.onload),
                    onerror: e.onerror,
                    reverse: e.reverse,
                    url: e.url
                }), this.autostart = e.autostart, this._loop = e.loop, this._loopStart = e.loopStart, this._loopEnd = e.loopEnd, this._playbackRate = e.playbackRate, this.fadeIn = e.fadeIn, this.fadeOut = e.fadeOut
            }
            static getDefaults() {
                return Object.assign(li.getDefaults(), {
                    autostart: !1,
                    fadeIn: 0,
                    fadeOut: 0,
                    loop: !1,
                    loopEnd: 0,
                    loopStart: 0,
                    onload: yo,
                    onerror: yo,
                    playbackRate: 1,
                    reverse: !1
                })
            }
            load(e) {
                return Ur(this, void 0, void 0, (function*() {
                    return yield this._buffer.load(e), this._onload(), this
                }))
            }
            _onload(e = yo) {
                e(), this.autostart && this.start()
            }
            _onSourceEnd(e) {
                this.onstop(this), this._activeSources.delete(e), 0 !== this._activeSources.size || this._synced || "started" !== this._state.getValueAtTime(this.now()) || (this._state.cancel(this.now()), this._state.setStateAtTime("stopped", this.now()))
            }
            start(e, t, n) {
                return super.start(e, t, n), this
            }
            _start(e, t, n) {
                t = this._loop ? Jr(t, this._loopStart) : Jr(t, 0);
                const r = this.toSeconds(t),
                    o = n;
                n = Jr(n, Math.max(this._buffer.duration - r, 0));
                let i = this.toSeconds(n);
                i /= this._playbackRate, e = this.toSeconds(e);
                const a = new ui({
                    url: this._buffer,
                    context: this.context,
                    fadeIn: this.fadeIn,
                    fadeOut: this.fadeOut,
                    loop: this._loop,
                    loopEnd: this._loopEnd,
                    loopStart: this._loopStart,
                    onended: this._onSourceEnd.bind(this),
                    playbackRate: this._playbackRate
                }).connect(this.output);
                this._loop || this._synced || (this._state.cancel(e + i), this._state.setStateAtTime("stopped", e + i, {
                    implicitEnd: !0
                })), this._activeSources.add(a), this._loop && Dr(o) ? a.start(e, r) : a.start(e, r, i - this.toSeconds(this.fadeOut))
            }
            _stop(e) {
                const t = this.toSeconds(e);
                this._activeSources.forEach((e => e.stop(t)))
            }
            restart(e, t, n) {
                return super.restart(e, t, n), this
            }
            _restart(e, t, n) {
                this._stop(e), this._start(e, t, n)
            }
            seek(e, t) {
                const n = this.toSeconds(t);
                if ("started" === this._state.getValueAtTime(n)) {
                    const t = this.toSeconds(e);
                    this._stop(n), this._start(n, t)
                }
                return this
            }
            setLoopPoints(e, t) {
                return this.loopStart = e, this.loopEnd = t, this
            }
            get loopStart() {
                return this._loopStart
            }
            set loopStart(e) {
                this._loopStart = e, this.buffer.loaded && Ar(this.toSeconds(e), 0, this.buffer.duration), this._activeSources.forEach((t => {
                    t.loopStart = e
                }))
            }
            get loopEnd() {
                return this._loopEnd
            }
            set loopEnd(e) {
                this._loopEnd = e, this.buffer.loaded && Ar(this.toSeconds(e), 0, this.buffer.duration), this._activeSources.forEach((t => {
                    t.loopEnd = e
                }))
            }
            get buffer() {
                return this._buffer
            }
            set buffer(e) {
                this._buffer.set(e)
            }
            get loop() {
                return this._loop
            }
            set loop(e) {
                if (this._loop !== e && (this._loop = e, this._activeSources.forEach((t => {
                        t.loop = e
                    })), e)) {
                    const e = this._state.getNextState("stopped", this.now());
                    e && this._state.cancel(e.time)
                }
            }
            get playbackRate() {
                return this._playbackRate
            }
            set playbackRate(e) {
                this._playbackRate = e;
                const t = this.now(),
                    n = this._state.getNextState("stopped", t);
                n && n.implicitEnd && (this._state.cancel(n.time), this._activeSources.forEach((e => e.cancelStop()))), this._activeSources.forEach((n => {
                    n.playbackRate.setValueAtTime(e, t)
                }))
            }
            get reverse() {
                return this._buffer.reverse
            }
            set reverse(e) {
                this._buffer.reverse = e
            }
            get loaded() {
                return this._buffer.loaded
            }
            dispose() {
                return super.dispose(), this._activeSources.forEach((e => e.dispose())), this._activeSources.clear(), this._buffer.dispose(), this
            }
        }
        zr([Di(0)], Ni.prototype, "fadeIn", void 0), zr([Di(0)], Ni.prototype, "fadeOut", void 0);
        class Ii extends gi {
            constructor() {
                super(...arguments), this.name = "GainToAudio", this._norm = new yi({
                    context: this.context,
                    mapping: e => 2 * Math.abs(e) - 1
                }), this.input = this._norm, this.output = this._norm
            }
            dispose() {
                return super.dispose(), this._norm.dispose(), this
            }
        }
        class Li extends qo {
            constructor() {
                super(Kr(Li.getDefaults(), arguments, ["attack", "decay", "sustain", "release"])), this.name = "Envelope", this._sig = new Wo({
                    context: this.context,
                    value: 0
                }), this.output = this._sig, this.input = void 0;
                const e = Kr(Li.getDefaults(), arguments, ["attack", "decay", "sustain", "release"]);
                this.attack = e.attack, this.decay = e.decay, this.sustain = e.sustain, this.release = e.release, this.attackCurve = e.attackCurve, this.releaseCurve = e.releaseCurve, this.decayCurve = e.decayCurve
            }
            static getDefaults() {
                return Object.assign(qo.getDefaults(), {
                    attack: .01,
                    attackCurve: "linear",
                    decay: .1,
                    decayCurve: "exponential",
                    release: 1,
                    releaseCurve: "exponential",
                    sustain: .5
                })
            }
            get value() {
                return this.getValueAtTime(this.now())
            }
            _getCurve(e, t) {
                if (jr(e)) return e;
                {
                    let n;
                    for (n in qi)
                        if (qi[n][t] === e) return n;
                    return e
                }
            }
            _setCurve(e, t, n) {
                if (jr(n) && Reflect.has(qi, n)) {
                    const r = qi[n];
                    Lr(r) ? "_decayCurve" !== e && (this[e] = r[t]) : this[e] = r
                } else {
                    if (!qr(n) || "_decayCurve" === e) throw new Error("Envelope: invalid curve: " + n);
                    this[e] = n
                }
            }
            get attackCurve() {
                return this._getCurve(this._attackCurve, "In")
            }
            set attackCurve(e) {
                this._setCurve("_attackCurve", "In", e)
            }
            get releaseCurve() {
                return this._getCurve(this._releaseCurve, "Out")
            }
            set releaseCurve(e) {
                this._setCurve("_releaseCurve", "Out", e)
            }
            get decayCurve() {
                return this._decayCurve
            }
            set decayCurve(e) {
                Or(["linear", "exponential"].some((t => t === e)), `Invalid envelope curve: ${e}`), this._decayCurve = e
            }
            triggerAttack(e, t = 1) {
                this.log("triggerAttack", e, t), e = this.toSeconds(e);
                let n = this.toSeconds(this.attack);
                const r = this.toSeconds(this.decay),
                    o = this.getValueAtTime(e);
                if (o > 0 && (n = (1 - o) / (1 / n)), n < this.sampleTime) this._sig.cancelScheduledValues(e), this._sig.setValueAtTime(t, e);
                else if ("linear" === this._attackCurve) this._sig.linearRampTo(t, n, e);
                else if ("exponential" === this._attackCurve) this._sig.targetRampTo(t, n, e);
                else {
                    this._sig.cancelAndHoldAtTime(e);
                    let r = this._attackCurve;
                    for (let e = 1; e < r.length; e++)
                        if (r[e - 1] <= o && o <= r[e]) {
                            r = this._attackCurve.slice(e), r[0] = o;
                            break
                        } this._sig.setValueCurveAtTime(r, e, n, t)
                }
                if (r && this.sustain < 1) {
                    const o = t * this.sustain,
                        i = e + n;
                    this.log("decay", i), "linear" === this._decayCurve ? this._sig.linearRampToValueAtTime(o, r + i) : this._sig.exponentialApproachValueAtTime(o, i, r)
                }
                return this
            }
            triggerRelease(e) {
                this.log("triggerRelease", e), e = this.toSeconds(e);
                const t = this.getValueAtTime(e);
                if (t > 0) {
                    const n = this.toSeconds(this.release);
                    n < this.sampleTime ? this._sig.setValueAtTime(0, e) : "linear" === this._releaseCurve ? this._sig.linearRampTo(0, n, e) : "exponential" === this._releaseCurve ? this._sig.targetRampTo(0, n, e) : (Or(qr(this._releaseCurve), "releaseCurve must be either 'linear', 'exponential' or an array"), this._sig.cancelAndHoldAtTime(e), this._sig.setValueCurveAtTime(this._releaseCurve, e, n, t))
                }
                return this
            }
            getValueAtTime(e) {
                return this._sig.getValueAtTime(e)
            }
            triggerAttackRelease(e, t, n = 1) {
                return t = this.toSeconds(t), this.triggerAttack(t, n), this.triggerRelease(t + this.toSeconds(e)), this
            }
            cancel(e) {
                return this._sig.cancelScheduledValues(this.toSeconds(e)), this
            }
            connect(e, t = 0, n = 0) {
                return Ho(this, e, t, n), this
            }
            asArray(e = 1024) {
                return Ur(this, void 0, void 0, (function*() {
                    const t = e / this.context.sampleRate,
                        n = new wo(1, t, this.context.sampleRate),
                        r = this.toSeconds(this.attack) + this.toSeconds(this.decay),
                        o = r + this.toSeconds(this.release),
                        i = .1 * o,
                        a = o + i,
                        s = new this.constructor(Object.assign(this.get(), {
                            attack: t * this.toSeconds(this.attack) / a,
                            decay: t * this.toSeconds(this.decay) / a,
                            release: t * this.toSeconds(this.release) / a,
                            context: n
                        }));
                    return s._sig.toDestination(), s.triggerAttackRelease(t * (r + i) / a, 0), (yield n.render()).getChannelData(0)
                }))
            }
            dispose() {
                return super.dispose(), this._sig.dispose(), this
            }
        }
        zr([Di(0)], Li.prototype, "attack", void 0), zr([Di(0)], Li.prototype, "decay", void 0), zr([Mi(0, 1)], Li.prototype, "sustain", void 0), zr([Di(0)], Li.prototype, "release", void 0);
        const qi = (() => {
            const e = 128;
            let t, n;
            const r = [];
            for (t = 0; t < e; t++) r[t] = Math.sin(t / 127 * (Math.PI / 2));
            const o = [];
            for (t = 0; t < 127; t++) {
                n = t / 127;
                const e = Math.sin(n * (2 * Math.PI) * 6.4 - Math.PI / 2) + 1;
                o[t] = e / 10 + .83 * n
            }
            o[127] = 1;
            const i = [];
            for (t = 0; t < e; t++) i[t] = Math.ceil(t / 127 * 5) / 5;
            const a = [];
            for (t = 0; t < e; t++) n = t / 127, a[t] = .5 * (1 - Math.cos(Math.PI * n));
            const s = [];
            for (t = 0; t < e; t++) {
                n = t / 127;
                const e = 4 * Math.pow(n, 3) + .2,
                    r = Math.cos(e * Math.PI * 2 * n);
                s[t] = Math.abs(r * (1 - n))
            }

            function l(e) {
                const t = new Array(e.length);
                for (let n = 0; n < e.length; n++) t[n] = 1 - e[n];
                return t
            }
            return {
                bounce: {
                    In: l(s),
                    Out: s
                },
                cosine: {
                    In: r,
                    Out: (u = r, u.slice(0).reverse())
                },
                exponential: "exponential",
                linear: "linear",
                ripple: {
                    In: o,
                    Out: l(o)
                },
                sine: {
                    In: a,
                    Out: l(a)
                },
                step: {
                    In: i,
                    Out: l(i)
                }
            };
            var u
        })();
        class ji extends qo {
            constructor() {
                super(Kr(ji.getDefaults(), arguments)), this._scheduledEvents = [], this._synced = !1, this._original_triggerAttack = this.triggerAttack, this._original_triggerRelease = this.triggerRelease;
                const e = Kr(ji.getDefaults(), arguments);
                this._volume = this.output = new ni({
                    context: this.context,
                    volume: e.volume
                }), this.volume = this._volume.volume, vo(this, "volume")
            }
            static getDefaults() {
                return Object.assign(qo.getDefaults(), {
                    volume: 0
                })
            }
            sync() {
                return this._syncState() && (this._syncMethod("triggerAttack", 1), this._syncMethod("triggerRelease", 0)), this
            }
            _syncState() {
                let e = !1;
                return this._synced || (this._synced = !0, e = !0), e
            }
            _syncMethod(e, t) {
                const n = this["_original_" + e] = this[e];
                this[e] = (...e) => {
                    const r = e[t],
                        o = this.context.transport.schedule((r => {
                            e[t] = r, n.apply(this, e)
                        }), r);
                    this._scheduledEvents.push(o)
                }
            }
            unsync() {
                return this._scheduledEvents.forEach((e => this.context.transport.clear(e))), this._scheduledEvents = [], this._synced && (this._synced = !1, this.triggerAttack = this._original_triggerAttack, this.triggerRelease = this._original_triggerRelease), this
            }
            triggerAttackRelease(e, t, n, r) {
                const o = this.toSeconds(n),
                    i = this.toSeconds(t);
                return this.triggerAttack(e, o, r), this.triggerRelease(o + i), this
            }
            dispose() {
                return super.dispose(), this._volume.dispose(), this.unsync(), this._scheduledEvents = [], this
            }
        }
        class Fi extends ji {
            constructor() {
                super(Kr(Fi.getDefaults(), arguments));
                const e = Kr(Fi.getDefaults(), arguments);
                this.portamento = e.portamento, this.onsilence = e.onsilence
            }
            static getDefaults() {
                return Object.assign(ji.getDefaults(), {
                    detune: 0,
                    onsilence: yo,
                    portamento: 0
                })
            }
            triggerAttack(e, t, n = 1) {
                this.log("triggerAttack", e, t, n);
                const r = this.toSeconds(t);
                return this._triggerEnvelopeAttack(r, n), this.setNote(e, r), this
            }
            triggerRelease(e) {
                this.log("triggerRelease", e);
                const t = this.toSeconds(e);
                return this._triggerEnvelopeRelease(t), this
            }
            setNote(e, t) {
                const n = this.toSeconds(t),
                    r = e instanceof Po ? e.toFrequency() : e;
                if (this.portamento > 0 && this.getLevelAtTime(n) > .05) {
                    const e = this.toSeconds(this.portamento);
                    this.frequency.exponentialRampTo(r, e, n)
                } else this.frequency.setValueAtTime(r, n);
                return this
            }
        }
        zr([Di(0)], Fi.prototype, "portamento", void 0);
        class Vi extends Li {
            constructor() {
                super(Kr(Vi.getDefaults(), arguments, ["attack", "decay", "sustain", "release"])), this.name = "AmplitudeEnvelope", this._gainNode = new Bo({
                    context: this.context,
                    gain: 0
                }), this.output = this._gainNode, this.input = this._gainNode, this._sig.connect(this._gainNode.gain), this.output = this._gainNode, this.input = this._gainNode
            }
            dispose() {
                return super.dispose(), this._gainNode.dispose(), this
            }
        }
        class Bi extends Fi {
            constructor() {
                super(Kr(Bi.getDefaults(), arguments)), this.name = "Synth";
                const e = Kr(Bi.getDefaults(), arguments);
                this.oscillator = new Ci(Object.assign({
                    context: this.context,
                    detune: e.detune,
                    onstop: () => this.onsilence(this)
                }, e.oscillator)), this.frequency = this.oscillator.frequency, this.detune = this.oscillator.detune, this.envelope = new Vi(Object.assign({
                    context: this.context
                }, e.envelope)), this.oscillator.chain(this.envelope, this.output), vo(this, ["oscillator", "frequency", "detune", "envelope"])
            }
            static getDefaults() {
                return Object.assign(Fi.getDefaults(), {
                    envelope: Object.assign(eo(Li.getDefaults(), Object.keys(qo.getDefaults())), {
                        attack: .005,
                        decay: .1,
                        release: 1,
                        sustain: .3
                    }),
                    oscillator: Object.assign(eo(Ci.getDefaults(), [...Object.keys(li.getDefaults()), "frequency", "detune"]), {
                        type: "triangle"
                    })
                })
            }
            _triggerEnvelopeAttack(e, t) {
                if (this.envelope.triggerAttack(e, t), this.oscillator.start(e), 0 === this.envelope.sustain) {
                    const t = this.toSeconds(this.envelope.attack),
                        n = this.toSeconds(this.envelope.decay);
                    this.oscillator.stop(e + t + n)
                }
            }
            _triggerEnvelopeRelease(e) {
                this.envelope.triggerRelease(e), this.oscillator.stop(e + this.toSeconds(this.envelope.release))
            }
            getLevelAtTime(e) {
                return e = this.toSeconds(e), this.envelope.getValueAtTime(e)
            }
            dispose() {
                return super.dispose(), this.oscillator.dispose(), this.envelope.dispose(), this
            }
        }
        class zi extends qo {
            constructor() {
                super(Kr(zi.getDefaults(), arguments, ["frequency", "type"])), this.name = "BiquadFilter";
                const e = Kr(zi.getDefaults(), arguments, ["frequency", "type"]);
                this._filter = this.context.createBiquadFilter(), this.input = this.output = this._filter, this.Q = new Lo({
                    context: this.context,
                    units: "number",
                    value: e.Q,
                    param: this._filter.Q
                }), this.frequency = new Lo({
                    context: this.context,
                    units: "frequency",
                    value: e.frequency,
                    param: this._filter.frequency
                }), this.detune = new Lo({
                    context: this.context,
                    units: "cents",
                    value: e.detune,
                    param: this._filter.detune
                }), this.gain = new Lo({
                    context: this.context,
                    units: "decibels",
                    convert: !1,
                    value: e.gain,
                    param: this._filter.gain
                }), this.type = e.type
            }
            static getDefaults() {
                return Object.assign(qo.getDefaults(), {
                    Q: 1,
                    type: "lowpass",
                    frequency: 350,
                    detune: 0,
                    gain: 0
                })
            }
            get type() {
                return this._filter.type
            }
            set type(e) {
                Or(-1 !== ["lowpass", "highpass", "bandpass", "lowshelf", "highshelf", "notch", "allpass", "peaking"].indexOf(e), `Invalid filter type: ${e}`), this._filter.type = e
            }
            getFrequencyResponse(e = 128) {
                const t = new Float32Array(e);
                for (let n = 0; n < e; n++) {
                    const r = 19980 * Math.pow(n / e, 2) + 20;
                    t[n] = r
                }
                const n = new Float32Array(e),
                    r = new Float32Array(e),
                    o = this.context.createBiquadFilter();
                return o.type = this.type, o.Q.value = this.Q.value, o.frequency.value = this.frequency.value, o.gain.value = this.gain.value, o.getFrequencyResponse(t, n, r), n
            }
            dispose() {
                return super.dispose(), this._filter.disconnect(), this.Q.dispose(), this.frequency.dispose(), this.gain.dispose(), this.detune.dispose(), this
            }
        }
        class Ui extends qo {
            constructor() {
                super(Kr(Ui.getDefaults(), arguments, ["frequency", "type", "rolloff"])), this.name = "Filter", this.input = new Bo({
                    context: this.context
                }), this.output = new Bo({
                    context: this.context
                }), this._filters = [];
                const e = Kr(Ui.getDefaults(), arguments, ["frequency", "type", "rolloff"]);
                this._filters = [], this.Q = new Wo({
                    context: this.context,
                    units: "positive",
                    value: e.Q
                }), this.frequency = new Wo({
                    context: this.context,
                    units: "frequency",
                    value: e.frequency
                }), this.detune = new Wo({
                    context: this.context,
                    units: "cents",
                    value: e.detune
                }), this.gain = new Wo({
                    context: this.context,
                    units: "decibels",
                    convert: !1,
                    value: e.gain
                }), this._type = e.type, this.rolloff = e.rolloff, vo(this, ["detune", "frequency", "gain", "Q"])
            }
            static getDefaults() {
                return Object.assign(qo.getDefaults(), {
                    Q: 1,
                    detune: 0,
                    frequency: 350,
                    gain: 0,
                    rolloff: -12,
                    type: "lowpass"
                })
            }
            get type() {
                return this._type
            }
            set type(e) {
                Or(-1 !== ["lowpass", "highpass", "bandpass", "lowshelf", "highshelf", "notch", "allpass", "peaking"].indexOf(e), `Invalid filter type: ${e}`), this._type = e, this._filters.forEach((t => t.type = e))
            }
            get rolloff() {
                return this._rolloff
            }
            set rolloff(e) {
                const t = Ir(e) ? e : parseInt(e, 10),
                    n = [-12, -24, -48, -96];
                let r = n.indexOf(t);
                Or(-1 !== r, `rolloff can only be ${n.join(", ")}`), r += 1, this._rolloff = t, this.input.disconnect(), this._filters.forEach((e => e.disconnect())), this._filters = new Array(r);
                for (let e = 0; e < r; e++) {
                    const t = new zi({
                        context: this.context
                    });
                    t.type = this._type, this.frequency.connect(t.frequency), this.detune.connect(t.detune), this.Q.connect(t.Q), this.gain.connect(t.gain), this._filters[e] = t
                }
                this._internalChannels = this._filters, jo(this.input, ...this._internalChannels, this.output)
            }
            getFrequencyResponse(e = 128) {
                const t = new zi({
                        frequency: this.frequency.value,
                        gain: this.gain.value,
                        Q: this.Q.value,
                        type: this._type,
                        detune: this.detune.value
                    }),
                    n = new Float32Array(e).map((() => 1));
                return this._filters.forEach((() => {
                    t.getFrequencyResponse(e).forEach(((e, t) => n[t] *= e))
                })), t.dispose(), n
            }
            dispose() {
                return super.dispose(), this._filters.forEach((e => {
                    e.dispose()
                })), go(this, ["detune", "frequency", "gain", "Q"]), this.frequency.dispose(), this.Q.dispose(), this.detune.dispose(), this.gain.dispose(), this
            }
        }
        class Wi extends Bi {
            constructor() {
                super(Kr(Wi.getDefaults(), arguments)), this.name = "MembraneSynth", this.portamento = 0;
                const e = Kr(Wi.getDefaults(), arguments);
                this.pitchDecay = e.pitchDecay, this.octaves = e.octaves, vo(this, ["oscillator", "envelope"])
            }
            static getDefaults() {
                return Xr(Fi.getDefaults(), Bi.getDefaults(), {
                    envelope: {
                        attack: .001,
                        attackCurve: "exponential",
                        decay: .4,
                        release: 1.4,
                        sustain: .01
                    },
                    octaves: 10,
                    oscillator: {
                        type: "sine"
                    },
                    pitchDecay: .05
                })
            }
            setNote(e, t) {
                const n = this.toSeconds(t),
                    r = this.toFrequency(e instanceof Po ? e.toFrequency() : e),
                    o = r * this.octaves;
                return this.oscillator.frequency.setValueAtTime(o, n), this.oscillator.frequency.exponentialRampToValueAtTime(r, n + this.toSeconds(this.pitchDecay)), this
            }
            dispose() {
                return super.dispose(), this
            }
        }
        zr([Mi(0)], Wi.prototype, "octaves", void 0), zr([Di(0)], Wi.prototype, "pitchDecay", void 0);
        const Hi = new Set;

        function Gi(e) {
            Hi.add(e)
        }

        function Qi(e, t) {
            const n = `registerProcessor("${e}", ${t})`;
            Hi.add(n)
        }
        Gi('\n\t/**\n\t * The base AudioWorkletProcessor for use in Tone.js. Works with the [[ToneAudioWorklet]]. \n\t */\n\tclass ToneAudioWorkletProcessor extends AudioWorkletProcessor {\n\n\t\tconstructor(options) {\n\t\t\t\n\t\t\tsuper(options);\n\t\t\t/**\n\t\t\t * If the processor was disposed or not. Keep alive until it\'s disposed.\n\t\t\t */\n\t\t\tthis.disposed = false;\n\t\t   \t/** \n\t\t\t * The number of samples in the processing block\n\t\t\t */\n\t\t\tthis.blockSize = 128;\n\t\t\t/**\n\t\t\t * the sample rate\n\t\t\t */\n\t\t\tthis.sampleRate = sampleRate;\n\n\t\t\tthis.port.onmessage = (event) => {\n\t\t\t\t// when it receives a dispose \n\t\t\t\tif (event.data === "dispose") {\n\t\t\t\t\tthis.disposed = true;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n'), Gi("\n\t/**\n\t * Abstract class for a single input/output processor. \n\t * has a 'generate' function which processes one sample at a time\n\t */\n\tclass SingleIOProcessor extends ToneAudioWorkletProcessor {\n\n\t\tconstructor(options) {\n\t\t\tsuper(Object.assign(options, {\n\t\t\t\tnumberOfInputs: 1,\n\t\t\t\tnumberOfOutputs: 1\n\t\t\t}));\n\t\t\t/**\n\t\t\t * Holds the name of the parameter and a single value of that\n\t\t\t * parameter at the current sample\n\t\t\t * @type { [name: string]: number }\n\t\t\t */\n\t\t\tthis.params = {}\n\t\t}\n\n\t\t/**\n\t\t * Generate an output sample from the input sample and parameters\n\t\t * @abstract\n\t\t * @param input number\n\t\t * @param channel number\n\t\t * @param parameters { [name: string]: number }\n\t\t * @returns number\n\t\t */\n\t\tgenerate(){}\n\n\t\t/**\n\t\t * Update the private params object with the \n\t\t * values of the parameters at the given index\n\t\t * @param parameters { [name: string]: Float32Array },\n\t\t * @param index number\n\t\t */\n\t\tupdateParams(parameters, index) {\n\t\t\tfor (const paramName in parameters) {\n\t\t\t\tconst param = parameters[paramName];\n\t\t\t\tif (param.length > 1) {\n\t\t\t\t\tthis.params[paramName] = parameters[paramName][index];\n\t\t\t\t} else {\n\t\t\t\t\tthis.params[paramName] = parameters[paramName][0];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Process a single frame of the audio\n\t\t * @param inputs Float32Array[][]\n\t\t * @param outputs Float32Array[][]\n\t\t */\n\t\tprocess(inputs, outputs, parameters) {\n\t\t\tconst input = inputs[0];\n\t\t\tconst output = outputs[0];\n\t\t\t// get the parameter values\n\t\t\tconst channelCount = Math.max(input && input.length || 0, output.length);\n\t\t\tfor (let sample = 0; sample < this.blockSize; sample++) {\n\t\t\t\tthis.updateParams(parameters, sample);\n\t\t\t\tfor (let channel = 0; channel < channelCount; channel++) {\n\t\t\t\t\tconst inputSample = input && input.length ? input[channel][sample] : 0;\n\t\t\t\t\toutput[channel][sample] = this.generate(inputSample, channel, this.params);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn !this.disposed;\n\t\t}\n\t};\n"), Gi("\n\t/**\n\t * A multichannel buffer for use within an AudioWorkletProcessor as a delay line\n\t */\n\tclass DelayLine {\n\t\t\n\t\tconstructor(size, channels) {\n\t\t\tthis.buffer = [];\n\t\t\tthis.writeHead = []\n\t\t\tthis.size = size;\n\n\t\t\t// create the empty channels\n\t\t\tfor (let i = 0; i < channels; i++) {\n\t\t\t\tthis.buffer[i] = new Float32Array(this.size);\n\t\t\t\tthis.writeHead[i] = 0;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Push a value onto the end\n\t\t * @param channel number\n\t\t * @param value number\n\t\t */\n\t\tpush(channel, value) {\n\t\t\tthis.writeHead[channel] += 1;\n\t\t\tif (this.writeHead[channel] > this.size) {\n\t\t\t\tthis.writeHead[channel] = 0;\n\t\t\t}\n\t\t\tthis.buffer[channel][this.writeHead[channel]] = value;\n\t\t}\n\n\t\t/**\n\t\t * Get the recorded value of the channel given the delay\n\t\t * @param channel number\n\t\t * @param delay number delay samples\n\t\t */\n\t\tget(channel, delay) {\n\t\t\tlet readHead = this.writeHead[channel] - Math.floor(delay);\n\t\t\tif (readHead < 0) {\n\t\t\t\treadHead += this.size;\n\t\t\t}\n\t\t\treturn this.buffer[channel][readHead];\n\t\t}\n\t}\n"), Qi("feedback-comb-filter", '\n\tclass FeedbackCombFilterWorklet extends SingleIOProcessor {\n\n\t\tconstructor(options) {\n\t\t\tsuper(options);\n\t\t\tthis.delayLine = new DelayLine(this.sampleRate, options.channelCount || 2);\n\t\t}\n\n\t\tstatic get parameterDescriptors() {\n\t\t\treturn [{\n\t\t\t\tname: "delayTime",\n\t\t\t\tdefaultValue: 0.1,\n\t\t\t\tminValue: 0,\n\t\t\t\tmaxValue: 1,\n\t\t\t\tautomationRate: "k-rate"\n\t\t\t}, {\n\t\t\t\tname: "feedback",\n\t\t\t\tdefaultValue: 0.5,\n\t\t\t\tminValue: 0,\n\t\t\t\tmaxValue: 0.9999,\n\t\t\t\tautomationRate: "k-rate"\n\t\t\t}];\n\t\t}\n\n\t\tgenerate(input, channel, parameters) {\n\t\t\tconst delayedSample = this.delayLine.get(channel, parameters.delayTime * this.sampleRate);\n\t\t\tthis.delayLine.push(channel, input + delayedSample * parameters.feedback);\n\t\t\treturn delayedSample;\n\t\t}\n\t}\n');
        class Yi extends ji {
            constructor() {
                super(Kr(Yi.getDefaults(), arguments, ["urls", "onload", "baseUrl"], "urls")), this.name = "Sampler", this._activeSources = new Map;
                const e = Kr(Yi.getDefaults(), arguments, ["urls", "onload", "baseUrl"], "urls"),
                    t = {};
                Object.keys(e.urls).forEach((n => {
                    const r = parseInt(n, 10);
                    if (Or(Fr(n) || Ir(r) && isFinite(r), `url key is neither a note or midi pitch: ${n}`), Fr(n)) {
                        const r = new Po(this.context, n).toMidi();
                        t[r] = e.urls[n]
                    } else Ir(r) && isFinite(r) && (t[r] = e.urls[r])
                })), this._buffers = new Xo({
                    urls: t,
                    onload: e.onload,
                    baseUrl: e.baseUrl,
                    onerror: e.onerror
                }), this.attack = e.attack, this.release = e.release, this.curve = e.curve, this._buffers.loaded && Promise.resolve().then(e.onload)
            }
            static getDefaults() {
                return Object.assign(ji.getDefaults(), {
                    attack: 0,
                    baseUrl: "",
                    curve: "exponential",
                    onload: yo,
                    onerror: yo,
                    release: .1,
                    urls: {}
                })
            }
            _findClosest(e) {
                let t = 0;
                for (; t < 96;) {
                    if (this._buffers.has(e + t)) return -t;
                    if (this._buffers.has(e - t)) return t;
                    t++
                }
                throw new Error(`No available buffers for note: ${e}`)
            }
            triggerAttack(e, t, n = 1) {
                return this.log("triggerAttack", e, t, n), Array.isArray(e) || (e = [e]), e.forEach((e => {
                    const r = Co(new Po(this.context, e).toFrequency()),
                        o = Math.round(r),
                        i = r - o,
                        a = this._findClosest(o),
                        s = o - a,
                        l = this._buffers.get(s),
                        u = So(a + i),
                        c = new ui({
                            url: l,
                            context: this.context,
                            curve: this.curve,
                            fadeIn: this.attack,
                            fadeOut: this.release,
                            playbackRate: u
                        }).connect(this.output);
                    c.start(t, 0, l.duration / u, n), qr(this._activeSources.get(o)) || this._activeSources.set(o, []), this._activeSources.get(o).push(c), c.onended = () => {
                        if (this._activeSources && this._activeSources.has(o)) {
                            const e = this._activeSources.get(o),
                                t = e.indexOf(c); - 1 !== t && e.splice(t, 1)
                        }
                    }
                })), this
            }
            triggerRelease(e, t) {
                return this.log("triggerRelease", e, t), Array.isArray(e) || (e = [e]), e.forEach((e => {
                    const n = new Po(this.context, e).toMidi();
                    if (this._activeSources.has(n) && this._activeSources.get(n).length) {
                        const e = this._activeSources.get(n);
                        t = this.toSeconds(t), e.forEach((e => {
                            e.stop(t)
                        })), this._activeSources.set(n, [])
                    }
                })), this
            }
            releaseAll(e) {
                const t = this.toSeconds(e);
                return this._activeSources.forEach((e => {
                    for (; e.length;) e.shift().stop(t)
                })), this
            }
            sync() {
                return this._syncState() && (this._syncMethod("triggerAttack", 1), this._syncMethod("triggerRelease", 1)), this
            }
            triggerAttackRelease(e, t, n, r = 1) {
                const o = this.toSeconds(n);
                return this.triggerAttack(e, o, r), qr(t) ? (Or(qr(e), "notes must be an array when duration is array"), e.forEach(((e, n) => {
                    const r = t[Math.min(n, t.length - 1)];
                    this.triggerRelease(e, o + this.toSeconds(r))
                }))) : this.triggerRelease(e, o + this.toSeconds(t)), this
            }
            add(e, t, n) {
                if (Or(Fr(e) || isFinite(e), `note must be a pitch or midi: ${e}`), Fr(e)) {
                    const r = new Po(this.context, e).toMidi();
                    this._buffers.add(r, t, n)
                } else this._buffers.add(e, t, n);
                return this
            }
            get loaded() {
                return this._buffers.loaded
            }
            dispose() {
                return super.dispose(), this._buffers.dispose(), this._activeSources.forEach((e => {
                    e.forEach((e => e.dispose()))
                })), this._activeSources.clear(), this
            }
        }
        zr([Di(0)], Yi.prototype, "attack", void 0), zr([Di(0)], Yi.prototype, "release", void 0);
        class $i extends qo {
            constructor() {
                super(Object.assign(Kr($i.getDefaults(), arguments, ["fade"]))), this.name = "CrossFade", this._panner = this.context.createStereoPanner(), this._split = this.context.createChannelSplitter(2), this._g2a = new Ii({
                    context: this.context
                }), this.a = new Bo({
                    context: this.context,
                    gain: 0
                }), this.b = new Bo({
                    context: this.context,
                    gain: 0
                }), this.output = new Bo({
                    context: this.context
                }), this._internalChannels = [this.a, this.b];
                const e = Kr($i.getDefaults(), arguments, ["fade"]);
                this.fade = new Wo({
                    context: this.context,
                    units: "normalRange",
                    value: e.fade
                }), vo(this, "fade"), this.context.getConstant(1).connect(this._panner), this._panner.connect(this._split), this._panner.channelCount = 1, this._panner.channelCountMode = "explicit", Fo(this._split, this.a.gain, 0), Fo(this._split, this.b.gain, 1), this.fade.chain(this._g2a, this._panner.pan), this.a.connect(this.output), this.b.connect(this.output)
            }
            static getDefaults() {
                return Object.assign(qo.getDefaults(), {
                    fade: .5
                })
            }
            dispose() {
                return super.dispose(), this.a.dispose(), this.b.dispose(), this.output.dispose(), this.fade.dispose(), this._g2a.dispose(), this._panner.disconnect(), this._split.disconnect(), this
            }
        }
        class Zi extends qo {
            constructor(e) {
                super(e), this.name = "Effect", this._dryWet = new $i({
                    context: this.context
                }), this.wet = this._dryWet.fade, this.effectSend = new Bo({
                    context: this.context
                }), this.effectReturn = new Bo({
                    context: this.context
                }), this.input = new Bo({
                    context: this.context
                }), this.output = this._dryWet, this.input.fan(this._dryWet.a, this.effectSend), this.effectReturn.connect(this._dryWet.b), this.wet.setValueAtTime(e.wet, 0), this._internalChannels = [this.effectReturn, this.effectSend], vo(this, "wet")
            }
            static getDefaults() {
                return Object.assign(qo.getDefaults(), {
                    wet: 1
                })
            }
            connectEffect(e) {
                return this._internalChannels.push(e), this.effectSend.chain(e, this.effectReturn), this
            }
            dispose() {
                return super.dispose(), this._dryWet.dispose(), this.effectSend.dispose(), this.effectReturn.dispose(), this.wet.dispose(), this
            }
        }
        class Xi extends qo {
            constructor() {
                super(Object.assign(Kr(Xi.getDefaults(), arguments, ["pan"]))), this.name = "Panner", this._panner = this.context.createStereoPanner(), this.input = this._panner, this.output = this._panner;
                const e = Kr(Xi.getDefaults(), arguments, ["pan"]);
                this.pan = new Lo({
                    context: this.context,
                    param: this._panner.pan,
                    value: e.pan,
                    minValue: -1,
                    maxValue: 1
                }), this._panner.channelCount = e.channelCount, this._panner.channelCountMode = "explicit", vo(this, "pan")
            }
            static getDefaults() {
                return Object.assign(qo.getDefaults(), {
                    pan: 0,
                    channelCount: 1
                })
            }
            dispose() {
                return super.dispose(), this._panner.disconnect(), this.pan.dispose(), this
            }
        }
        Qi("bit-crusher", "\n\tclass BitCrusherWorklet extends SingleIOProcessor {\n\n\t\tstatic get parameterDescriptors() {\n\t\t\treturn [{\n\t\t\t\tname: \"bits\",\n\t\t\t\tdefaultValue: 12,\n\t\t\t\tminValue: 1,\n\t\t\t\tmaxValue: 16,\n\t\t\t\tautomationRate: 'k-rate'\n\t\t\t}];\n\t\t}\n\n\t\tgenerate(input, _channel, parameters) {\n\t\t\tconst step = Math.pow(0.5, parameters.bits - 1);\n\t\t\tconst val = step * Math.floor(input / step + 0.5);\n\t\t\treturn val;\n\t\t}\n\t}\n");
        class Ki extends qo {
            constructor() {
                super(Kr(Ki.getDefaults(), arguments, ["channels"])), this.name = "Merge";
                const e = Kr(Ki.getDefaults(), arguments, ["channels"]);
                this._merger = this.output = this.input = this.context.createChannelMerger(e.channels)
            }
            static getDefaults() {
                return Object.assign(qo.getDefaults(), {
                    channels: 2
                })
            }
            dispose() {
                return super.dispose(), this._merger.disconnect(), this
            }
        }
        class Ji extends Zi {
            constructor(e) {
                super(e), this.name = "FeedbackEffect", this._feedbackGain = new Bo({
                    context: this.context,
                    gain: e.feedback,
                    units: "normalRange"
                }), this.feedback = this._feedbackGain.gain, vo(this, "feedback"), this.effectReturn.chain(this._feedbackGain, this.effectSend)
            }
            static getDefaults() {
                return Object.assign(Zi.getDefaults(), {
                    feedback: .125
                })
            }
            dispose() {
                return super.dispose(), this._feedbackGain.dispose(), this.feedback.dispose(), this
            }
        }
        class ea extends Ji {
            constructor() {
                super(Kr(ea.getDefaults(), arguments, ["pitch"])), this.name = "PitchShift";
                const e = Kr(ea.getDefaults(), arguments, ["pitch"]);
                this._frequency = new Wo({
                    context: this.context
                }), this._delayA = new Zo({
                    maxDelay: 1,
                    context: this.context
                }), this._lfoA = new Ri({
                    context: this.context,
                    min: 0,
                    max: .1,
                    type: "sawtooth"
                }).connect(this._delayA.delayTime), this._delayB = new Zo({
                    maxDelay: 1,
                    context: this.context
                }), this._lfoB = new Ri({
                    context: this.context,
                    min: 0,
                    max: .1,
                    type: "sawtooth",
                    phase: 180
                }).connect(this._delayB.delayTime), this._crossFade = new $i({
                    context: this.context
                }), this._crossFadeLFO = new Ri({
                    context: this.context,
                    min: 0,
                    max: 1,
                    type: "triangle",
                    phase: 90
                }).connect(this._crossFade.fade), this._feedbackDelay = new Zo({
                    delayTime: e.delayTime,
                    context: this.context
                }), this.delayTime = this._feedbackDelay.delayTime, vo(this, "delayTime"), this._pitch = e.pitch, this._windowSize = e.windowSize, this._delayA.connect(this._crossFade.a), this._delayB.connect(this._crossFade.b), this._frequency.fan(this._lfoA.frequency, this._lfoB.frequency, this._crossFadeLFO.frequency), this.effectSend.fan(this._delayA, this._delayB), this._crossFade.chain(this._feedbackDelay, this.effectReturn);
                const t = this.now();
                this._lfoA.start(t), this._lfoB.start(t), this._crossFadeLFO.start(t), this.windowSize = this._windowSize
            }
            static getDefaults() {
                return Object.assign(Ji.getDefaults(), {
                    pitch: 0,
                    windowSize: .1,
                    delayTime: 0,
                    feedback: 0
                })
            }
            get pitch() {
                return this._pitch
            }
            set pitch(e) {
                this._pitch = e;
                let t = 0;
                e < 0 ? (this._lfoA.min = 0, this._lfoA.max = this._windowSize, this._lfoB.min = 0, this._lfoB.max = this._windowSize, t = So(e - 1) + 1) : (this._lfoA.min = this._windowSize, this._lfoA.max = 0, this._lfoB.min = this._windowSize, this._lfoB.max = 0, t = So(e) - 1), this._frequency.value = t * (1.2 / this._windowSize)
            }
            get windowSize() {
                return this._windowSize
            }
            set windowSize(e) {
                this._windowSize = this.toSeconds(e), this.pitch = this._pitch
            }
            dispose() {
                return super.dispose(), this._frequency.dispose(), this._delayA.dispose(), this._delayB.dispose(), this._lfoA.dispose(), this._lfoB.dispose(), this._crossFade.dispose(), this._crossFadeLFO.dispose(), this._feedbackDelay.dispose(), this
            }
        }
        class ta extends Zi {
            constructor() {
                super(Kr(ta.getDefaults(), arguments, ["decay"])), this.name = "Reverb", this._convolver = this.context.createConvolver(), this.ready = Promise.resolve();
                const e = Kr(ta.getDefaults(), arguments, ["decay"]);
                this._decay = e.decay, this._preDelay = e.preDelay, this.generate(), this.connectEffect(this._convolver)
            }
            static getDefaults() {
                return Object.assign(Zi.getDefaults(), {
                    decay: 1.5,
                    preDelay: .01
                })
            }
            get decay() {
                return this._decay
            }
            set decay(e) {
                Ar(e = this.toSeconds(e), .001), this._decay = e, this.generate()
            }
            get preDelay() {
                return this._preDelay
            }
            set preDelay(e) {
                Ar(e = this.toSeconds(e), 0), this._preDelay = e, this.generate()
            }
            generate() {
                return Ur(this, void 0, void 0, (function*() {
                    const e = this.ready,
                        t = new wo(2, this._decay + this._preDelay, this.context.sampleRate),
                        n = new ci({
                            context: t
                        }),
                        r = new ci({
                            context: t
                        }),
                        o = new Ki({
                            context: t
                        });
                    n.connect(o, 0, 0), r.connect(o, 0, 1);
                    const i = new Bo({
                        context: t
                    }).toDestination();
                    o.connect(i), n.start(0), r.start(0), i.gain.setValueAtTime(0, 0), i.gain.setValueAtTime(1, this._preDelay), i.gain.exponentialApproachValueAtTime(0, this._preDelay, this.decay);
                    const a = t.render();
                    return this.ready = a.then(yo), yield e, this._convolver.buffer = (yield a).get(), this
                }))
            }
            dispose() {
                return super.dispose(), this._convolver.disconnect(), this
            }
        }
        class na extends qo {
            constructor() {
                super(Kr(na.getDefaults(), arguments, ["solo"])), this.name = "Solo";
                const e = Kr(na.getDefaults(), arguments, ["solo"]);
                this.input = this.output = new Bo({
                    context: this.context
                }), na._allSolos.has(this.context) || na._allSolos.set(this.context, new Set), na._allSolos.get(this.context).add(this), this.solo = e.solo
            }
            static getDefaults() {
                return Object.assign(qo.getDefaults(), {
                    solo: !1
                })
            }
            get solo() {
                return this._isSoloed()
            }
            set solo(e) {
                e ? this._addSolo() : this._removeSolo(), na._allSolos.get(this.context).forEach((e => e._updateSolo()))
            }
            get muted() {
                return 0 === this.input.gain.value
            }
            _addSolo() {
                na._soloed.has(this.context) || na._soloed.set(this.context, new Set), na._soloed.get(this.context).add(this)
            }
            _removeSolo() {
                na._soloed.has(this.context) && na._soloed.get(this.context).delete(this)
            }
            _isSoloed() {
                return na._soloed.has(this.context) && na._soloed.get(this.context).has(this)
            }
            _noSolos() {
                return !na._soloed.has(this.context) || na._soloed.has(this.context) && 0 === na._soloed.get(this.context).size
            }
            _updateSolo() {
                this._isSoloed() || this._noSolos() ? this.input.gain.value = 1 : this.input.gain.value = 0
            }
            dispose() {
                return super.dispose(), na._allSolos.get(this.context).delete(this), this._removeSolo(), this
            }
        }
        na._allSolos = new Map, na._soloed = new Map;
        class ra extends qo {
            constructor() {
                super(Kr(ra.getDefaults(), arguments, ["pan", "volume"])), this.name = "PanVol";
                const e = Kr(ra.getDefaults(), arguments, ["pan", "volume"]);
                this._panner = this.input = new Xi({
                    context: this.context,
                    pan: e.pan,
                    channelCount: e.channelCount
                }), this.pan = this._panner.pan, this._volume = this.output = new ni({
                    context: this.context,
                    volume: e.volume
                }), this.volume = this._volume.volume, this._panner.connect(this._volume), this.mute = e.mute, vo(this, ["pan", "volume"])
            }
            static getDefaults() {
                return Object.assign(qo.getDefaults(), {
                    mute: !1,
                    pan: 0,
                    volume: 0,
                    channelCount: 1
                })
            }
            get mute() {
                return this._volume.mute
            }
            set mute(e) {
                this._volume.mute = e
            }
            dispose() {
                return super.dispose(), this._panner.dispose(), this.pan.dispose(), this._volume.dispose(), this.volume.dispose(), this
            }
        }
        class oa extends qo {
            constructor() {
                super(Kr(oa.getDefaults(), arguments, ["volume", "pan"])), this.name = "Channel";
                const e = Kr(oa.getDefaults(), arguments, ["volume", "pan"]);
                this._solo = this.input = new na({
                    solo: e.solo,
                    context: this.context
                }), this._panVol = this.output = new ra({
                    context: this.context,
                    pan: e.pan,
                    volume: e.volume,
                    mute: e.mute,
                    channelCount: e.channelCount
                }), this.pan = this._panVol.pan, this.volume = this._panVol.volume, this._solo.connect(this._panVol), vo(this, ["pan", "volume"])
            }
            static getDefaults() {
                return Object.assign(qo.getDefaults(), {
                    pan: 0,
                    volume: 0,
                    mute: !1,
                    solo: !1,
                    channelCount: 1
                })
            }
            get solo() {
                return this._solo.solo
            }
            set solo(e) {
                this._solo.solo = e
            }
            get muted() {
                return this._solo.muted || this.mute
            }
            get mute() {
                return this._panVol.mute
            }
            set mute(e) {
                this._panVol.mute = e
            }
            _getBus(e) {
                return oa.buses.has(e) || oa.buses.set(e, new Bo({
                    context: this.context
                })), oa.buses.get(e)
            }
            send(e, t = 0) {
                const n = this._getBus(e),
                    r = new Bo({
                        context: this.context,
                        units: "decibels",
                        gain: t
                    });
                return this.connect(r), r.connect(n), r
            }
            receive(e) {
                return this._getBus(e).connect(this), this
            }
            dispose() {
                return super.dispose(), this._panVol.dispose(), this.pan.dispose(), this.volume.dispose(), this._solo.dispose(), this
            }
        }
        oa.buses = new Map;
        class ia extends qo {
            constructor() {
                super(Kr(ia.getDefaults(), arguments, ["lowFrequency", "highFrequency"])), this.name = "MultibandSplit", this.input = new Bo({
                    context: this.context
                }), this.output = void 0, this.low = new Ui({
                    context: this.context,
                    frequency: 0,
                    type: "lowpass"
                }), this._lowMidFilter = new Ui({
                    context: this.context,
                    frequency: 0,
                    type: "highpass"
                }), this.mid = new Ui({
                    context: this.context,
                    frequency: 0,
                    type: "lowpass"
                }), this.high = new Ui({
                    context: this.context,
                    frequency: 0,
                    type: "highpass"
                }), this._internalChannels = [this.low, this.mid, this.high];
                const e = Kr(ia.getDefaults(), arguments, ["lowFrequency", "highFrequency"]);
                this.lowFrequency = new Wo({
                    context: this.context,
                    units: "frequency",
                    value: e.lowFrequency
                }), this.highFrequency = new Wo({
                    context: this.context,
                    units: "frequency",
                    value: e.highFrequency
                }), this.Q = new Wo({
                    context: this.context,
                    units: "positive",
                    value: e.Q
                }), this.input.fan(this.low, this.high), this.input.chain(this._lowMidFilter, this.mid), this.lowFrequency.fan(this.low.frequency, this._lowMidFilter.frequency), this.highFrequency.fan(this.mid.frequency, this.high.frequency), this.Q.connect(this.low.Q), this.Q.connect(this._lowMidFilter.Q), this.Q.connect(this.mid.Q), this.Q.connect(this.high.Q), vo(this, ["high", "mid", "low", "highFrequency", "lowFrequency"])
            }
            static getDefaults() {
                return Object.assign(qo.getDefaults(), {
                    Q: 1,
                    highFrequency: 2500,
                    lowFrequency: 400
                })
            }
            dispose() {
                return super.dispose(), go(this, ["high", "mid", "low", "highFrequency", "lowFrequency"]), this.low.dispose(), this._lowMidFilter.dispose(), this.mid.dispose(), this.high.dispose(), this.lowFrequency.dispose(), this.highFrequency.dispose(), this.Q.dispose(), this
            }
        }
        class aa extends qo {
            constructor() {
                super(...arguments), this.name = "Listener", this.positionX = new Lo({
                    context: this.context,
                    param: this.context.rawContext.listener.positionX
                }), this.positionY = new Lo({
                    context: this.context,
                    param: this.context.rawContext.listener.positionY
                }), this.positionZ = new Lo({
                    context: this.context,
                    param: this.context.rawContext.listener.positionZ
                }), this.forwardX = new Lo({
                    context: this.context,
                    param: this.context.rawContext.listener.forwardX
                }), this.forwardY = new Lo({
                    context: this.context,
                    param: this.context.rawContext.listener.forwardY
                }), this.forwardZ = new Lo({
                    context: this.context,
                    param: this.context.rawContext.listener.forwardZ
                }), this.upX = new Lo({
                    context: this.context,
                    param: this.context.rawContext.listener.upX
                }), this.upY = new Lo({
                    context: this.context,
                    param: this.context.rawContext.listener.upY
                }), this.upZ = new Lo({
                    context: this.context,
                    param: this.context.rawContext.listener.upZ
                })
            }
            static getDefaults() {
                return Object.assign(qo.getDefaults(), {
                    positionX: 0,
                    positionY: 0,
                    positionZ: 0,
                    forwardX: 0,
                    forwardY: 0,
                    forwardZ: -1,
                    upX: 0,
                    upY: 1,
                    upZ: 0
                })
            }
            dispose() {
                return super.dispose(), this.positionX.dispose(), this.positionY.dispose(), this.positionZ.dispose(), this.forwardX.dispose(), this.forwardY.dispose(), this.forwardZ.dispose(), this.upX.dispose(), this.upY.dispose(), this.upZ.dispose(), this
            }
        }
        uo((e => {
            e.listener = new aa({
                context: e
            })
        })), ho((e => {
            e.listener.dispose()
        }));
        class sa extends qo {
            constructor() {
                super(Kr(sa.getDefaults(), arguments, ["low", "mid", "high"])), this.name = "EQ3", this.output = new Bo({
                    context: this.context
                }), this._internalChannels = [];
                const e = Kr(sa.getDefaults(), arguments, ["low", "mid", "high"]);
                this.input = this._multibandSplit = new ia({
                    context: this.context,
                    highFrequency: e.highFrequency,
                    lowFrequency: e.lowFrequency
                }), this._lowGain = new Bo({
                    context: this.context,
                    gain: e.low,
                    units: "decibels"
                }), this._midGain = new Bo({
                    context: this.context,
                    gain: e.mid,
                    units: "decibels"
                }), this._highGain = new Bo({
                    context: this.context,
                    gain: e.high,
                    units: "decibels"
                }), this.low = this._lowGain.gain, this.mid = this._midGain.gain, this.high = this._highGain.gain, this.Q = this._multibandSplit.Q, this.lowFrequency = this._multibandSplit.lowFrequency, this.highFrequency = this._multibandSplit.highFrequency, this._multibandSplit.low.chain(this._lowGain, this.output), this._multibandSplit.mid.chain(this._midGain, this.output), this._multibandSplit.high.chain(this._highGain, this.output), vo(this, ["low", "mid", "high", "lowFrequency", "highFrequency"]), this._internalChannels = [this._multibandSplit]
            }
            static getDefaults() {
                return Object.assign(qo.getDefaults(), {
                    high: 0,
                    highFrequency: 2500,
                    low: 0,
                    lowFrequency: 400,
                    mid: 0
                })
            }
            dispose() {
                return super.dispose(), go(this, ["low", "mid", "high", "lowFrequency", "highFrequency"]), this._multibandSplit.dispose(), this.lowFrequency.dispose(), this.highFrequency.dispose(), this._lowGain.dispose(), this._midGain.dispose(), this._highGain.dispose(), this.low.dispose(), this.mid.dispose(), this.high.dispose(), this.Q.dispose(), this
            }
        }
        Eo().transport, Eo().destination, Eo().destination, Eo().listener, Eo().draw, Eo();
        var la, ua = o(897);

        function ca() {
            return ca = Object.assign ? Object.assign.bind() : function(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var n = arguments[t];
                    for (var r in n) Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r])
                }
                return e
            }, ca.apply(this, arguments)
        }! function(e) {
            e.Pop = "POP", e.Push = "PUSH", e.Replace = "REPLACE"
        }(la || (la = {}));
        const ha = "popstate";

        function da(e, t) {
            if (!1 === e || null == e) throw new Error(t)
        }

        function fa(e, t) {
            if (!e) {
                "undefined" != typeof console && console.warn(t);
                try {
                    throw new Error(t)
                } catch (e) {}
            }
        }

        function pa(e, t) {
            return {
                usr: e.state,
                key: e.key,
                idx: t
            }
        }

        function ma(e, t, n, r) {
            return void 0 === n && (n = null), ca({
                pathname: "string" == typeof e ? e : e.pathname,
                search: "",
                hash: ""
            }, "string" == typeof t ? ga(t) : t, {
                state: n,
                key: t && t.key || r || Math.random().toString(36).substr(2, 8)
            })
        }

        function va(e) {
            let {
                pathname: t = "/",
                search: n = "",
                hash: r = ""
            } = e;
            return n && "?" !== n && (t += "?" === n.charAt(0) ? n : "?" + n), r && "#" !== r && (t += "#" === r.charAt(0) ? r : "#" + r), t
        }

        function ga(e) {
            let t = {};
            if (e) {
                let n = e.indexOf("#");
                n >= 0 && (t.hash = e.substr(n), e = e.substr(0, n));
                let r = e.indexOf("?");
                r >= 0 && (t.search = e.substr(r), e = e.substr(0, r)), e && (t.pathname = e)
            }
            return t
        }
        var ya;
        ! function(e) {
            e.data = "data", e.deferred = "deferred", e.redirect = "redirect", e.error = "error"
        }(ya || (ya = {}));
        const ba = new Set(["lazy", "caseSensitive", "path", "id", "index", "children"]);

        function wa(e, t, n, r) {
            return void 0 === n && (n = []), void 0 === r && (r = {}), e.map(((e, o) => {
                let i = [...n, o],
                    a = "string" == typeof e.id ? e.id : i.join("-");
                if (da(!0 !== e.index || !e.children, "Cannot specify children on an index route"), da(!r[a], 'Found a route id collision on id "' + a + "\".  Route id's must be globally unique within Data Router usages"), function(e) {
                        return !0 === e.index
                    }(e)) {
                    let n = ca({}, e, t(e), {
                        id: a
                    });
                    return r[a] = n, n
                } {
                    let n = ca({}, e, t(e), {
                        id: a,
                        children: void 0
                    });
                    return r[a] = n, e.children && (n.children = wa(e.children, t, i, r)), n
                }
            }))
        }

        function _a(e, t, n) {
            void 0 === n && (n = "/");
            let r = Pa(("string" == typeof t ? ga(t) : t).pathname || "/", n);
            if (null == r) return null;
            let o = xa(e);
            ! function(e) {
                e.sort(((e, t) => e.score !== t.score ? t.score - e.score : function(e, t) {
                    return e.length === t.length && e.slice(0, -1).every(((e, n) => e === t[n])) ? e[e.length - 1] - t[t.length - 1] : 0
                }(e.routesMeta.map((e => e.childrenIndex)), t.routesMeta.map((e => e.childrenIndex)))))
            }(o);
            let i = null;
            for (let e = 0; null == i && e < o.length; ++e) i = Ca(o[e], Aa(r));
            return i
        }

        function xa(e, t, n, r) {
            void 0 === t && (t = []), void 0 === n && (n = []), void 0 === r && (r = "");
            let o = (e, o, i) => {
                let a = {
                    relativePath: void 0 === i ? e.path || "" : i,
                    caseSensitive: !0 === e.caseSensitive,
                    childrenIndex: o,
                    route: e
                };
                a.relativePath.startsWith("/") && (da(a.relativePath.startsWith(r), 'Absolute route path "' + a.relativePath + '" nested under path "' + r + '" is not valid. An absolute child route path must start with the combined path of all its parent routes.'), a.relativePath = a.relativePath.slice(r.length));
                let s = Na([r, a.relativePath]),
                    l = n.concat(a);
                e.children && e.children.length > 0 && (da(!0 !== e.index, 'Index routes must not have child routes. Please remove all child routes from route path "' + s + '".'), xa(e.children, t, l, s)), (null != e.path || e.index) && t.push({
                    path: s,
                    score: Ta(s, e.index),
                    routesMeta: l
                })
            };
            return e.forEach(((e, t) => {
                var n;
                if ("" !== e.path && null != (n = e.path) && n.includes("?"))
                    for (let n of Ea(e.path)) o(e, t, n);
                else o(e, t)
            })), t
        }

        function Ea(e) {
            let t = e.split("/");
            if (0 === t.length) return [];
            let [n, ...r] = t, o = n.endsWith("?"), i = n.replace(/\?$/, "");
            if (0 === r.length) return o ? [i, ""] : [i];
            let a = Ea(r.join("/")),
                s = [];
            return s.push(...a.map((e => "" === e ? i : [i, e].join("/")))), o && s.push(...a), s.map((t => e.startsWith("/") && "" === t ? "/" : t))
        }
        const Sa = /^:\w+$/,
            ka = e => "*" === e;

        function Ta(e, t) {
            let n = e.split("/"),
                r = n.length;
            return n.some(ka) && (r += -2), t && (r += 2), n.filter((e => !ka(e))).reduce(((e, t) => e + (Sa.test(t) ? 3 : "" === t ? 1 : 10)), r)
        }

        function Ca(e, t) {
            let {
                routesMeta: n
            } = e, r = {}, o = "/", i = [];
            for (let e = 0; e < n.length; ++e) {
                let a = n[e],
                    s = e === n.length - 1,
                    l = "/" === o ? t : t.slice(o.length) || "/",
                    u = Oa({
                        path: a.relativePath,
                        caseSensitive: a.caseSensitive,
                        end: s
                    }, l);
                if (!u) return null;
                Object.assign(r, u.params);
                let c = a.route;
                i.push({
                    params: r,
                    pathname: Na([o, u.pathname]),
                    pathnameBase: Ia(Na([o, u.pathnameBase])),
                    route: c
                }), "/" !== u.pathnameBase && (o = Na([o, u.pathnameBase]))
            }
            return i
        }

        function Oa(e, t) {
            "string" == typeof e && (e = {
                path: e,
                caseSensitive: !1,
                end: !0
            });
            let [n, r] = function(e, t, n) {
                void 0 === t && (t = !1), void 0 === n && (n = !0), fa("*" === e || !e.endsWith("*") || e.endsWith("/*"), 'Route path "' + e + '" will be treated as if it were "' + e.replace(/\*$/, "/*") + '" because the `*` character must always follow a `/` in the pattern. To get rid of this warning, please change the route path to "' + e.replace(/\*$/, "/*") + '".');
                let r = [],
                    o = "^" + e.replace(/\/*\*?$/, "").replace(/^\/*/, "/").replace(/[\\.*+^${}|()[\]]/g, "\\$&").replace(/\/:(\w+)(\?)?/g, ((e, t, n) => (r.push({
                        paramName: t,
                        isOptional: null != n
                    }), n ? "/?([^\\/]+)?" : "/([^\\/]+)")));
                return e.endsWith("*") ? (r.push({
                    paramName: "*"
                }), o += "*" === e || "/*" === e ? "(.*)$" : "(?:\\/(.+)|\\/*)$") : n ? o += "\\/*$" : "" !== e && "/" !== e && (o += "(?:(?=\\/|$))"), [new RegExp(o, t ? void 0 : "i"), r]
            }(e.path, e.caseSensitive, e.end), o = t.match(n);
            if (!o) return null;
            let i = o[0],
                a = i.replace(/(.)\/+$/, "$1"),
                s = o.slice(1),
                l = r.reduce(((e, t, n) => {
                    let {
                        paramName: r,
                        isOptional: o
                    } = t;
                    if ("*" === r) {
                        let e = s[n] || "";
                        a = i.slice(0, i.length - e.length).replace(/(.)\/+$/, "$1")
                    }
                    const l = s[n];
                    return e[r] = o && !l ? void 0 : function(e, t) {
                        try {
                            return decodeURIComponent(e)
                        } catch (n) {
                            return fa(!1, 'The value for the URL param "' + t + '" will not be decoded because the string "' + e + '" is a malformed URL segment. This is probably due to a bad percent encoding (' + n + ")."), e
                        }
                    }(l || "", r), e
                }), {});
            return {
                params: l,
                pathname: i,
                pathnameBase: a,
                pattern: e
            }
        }

        function Aa(e) {
            try {
                return decodeURI(e)
            } catch (t) {
                return fa(!1, 'The URL path "' + e + '" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent encoding (' + t + ")."), e
            }
        }

        function Pa(e, t) {
            if ("/" === t) return e;
            if (!e.toLowerCase().startsWith(t.toLowerCase())) return null;
            let n = t.endsWith("/") ? t.length - 1 : t.length,
                r = e.charAt(n);
            return r && "/" !== r ? null : e.slice(n) || "/"
        }

        function Ra(e, t, n, r) {
            return "Cannot include a '" + e + "' character in a manually specified `to." + t + "` field [" + JSON.stringify(r) + "].  Please separate it out to the `to." + n + '` field. Alternatively you may provide the full path as a string in <Link to="..."> and the router will parse it for you.'
        }

        function Ma(e) {
            return e.filter(((e, t) => 0 === t || e.route.path && e.route.path.length > 0))
        }

        function Da(e, t, n, r) {
            let o;
            void 0 === r && (r = !1), "string" == typeof e ? o = ga(e) : (o = ca({}, e), da(!o.pathname || !o.pathname.includes("?"), Ra("?", "pathname", "search", o)), da(!o.pathname || !o.pathname.includes("#"), Ra("#", "pathname", "hash", o)), da(!o.search || !o.search.includes("#"), Ra("#", "search", "hash", o)));
            let i, a = "" === e || "" === o.pathname,
                s = a ? "/" : o.pathname;
            if (r || null == s) i = n;
            else {
                let e = t.length - 1;
                if (s.startsWith("..")) {
                    let t = s.split("/");
                    for (;
                        ".." === t[0];) t.shift(), e -= 1;
                    o.pathname = t.join("/")
                }
                i = e >= 0 ? t[e] : "/"
            }
            let l = function(e, t) {
                    void 0 === t && (t = "/");
                    let {
                        pathname: n,
                        search: r = "",
                        hash: o = ""
                    } = "string" == typeof e ? ga(e) : e, i = n ? n.startsWith("/") ? n : function(e, t) {
                        let n = t.replace(/\/+$/, "").split("/");
                        return e.split("/").forEach((e => {
                            ".." === e ? n.length > 1 && n.pop() : "." !== e && n.push(e)
                        })), n.length > 1 ? n.join("/") : "/"
                    }(n, t) : t;
                    return {
                        pathname: i,
                        search: La(r),
                        hash: qa(o)
                    }
                }(o, i),
                u = s && "/" !== s && s.endsWith("/"),
                c = (a || "." === s) && n.endsWith("/");
            return l.pathname.endsWith("/") || !u && !c || (l.pathname += "/"), l
        }
        const Na = e => e.join("/").replace(/\/\/+/g, "/"),
            Ia = e => e.replace(/\/+$/, "").replace(/^\/*/, "/"),
            La = e => e && "?" !== e ? e.startsWith("?") ? e : "?" + e : "",
            qa = e => e && "#" !== e ? e.startsWith("#") ? e : "#" + e : "";
        Error;
        class ja {
            constructor(e, t, n, r) {
                void 0 === r && (r = !1), this.status = e, this.statusText = t || "", this.internal = r, n instanceof Error ? (this.data = n.toString(), this.error = n) : this.data = n
            }
        }

        function Fa(e) {
            return null != e && "number" == typeof e.status && "string" == typeof e.statusText && "boolean" == typeof e.internal && "data" in e
        }
        const Va = ["post", "put", "patch", "delete"],
            Ba = new Set(Va),
            za = ["get", ...Va],
            Ua = new Set(za),
            Wa = new Set([301, 302, 303, 307, 308]),
            Ha = new Set([307, 308]),
            Ga = {
                state: "idle",
                location: void 0,
                formMethod: void 0,
                formAction: void 0,
                formEncType: void 0,
                formData: void 0,
                json: void 0,
                text: void 0
            },
            Qa = {
                state: "idle",
                data: void 0,
                formMethod: void 0,
                formAction: void 0,
                formEncType: void 0,
                formData: void 0,
                json: void 0,
                text: void 0
            },
            Ya = {
                state: "unblocked",
                proceed: void 0,
                reset: void 0,
                location: void 0
            },
            $a = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i,
            Za = e => ({
                hasErrorBoundary: Boolean(e.hasErrorBoundary)
            }),
            Xa = "remix-router-transitions";

        function Ka(e, t, n, r, o, i, a) {
            let s, l;
            if (null != i && "path" !== a) {
                s = [];
                for (let e of t)
                    if (s.push(e), e.route.id === i) {
                        l = e;
                        break
                    }
            } else s = t, l = t[t.length - 1];
            let u = Da(o || ".", Ma(s).map((e => e.pathnameBase)), Pa(e.pathname, n) || e.pathname, "path" === a);
            return null == o && (u.search = e.search, u.hash = e.hash), null != o && "" !== o && "." !== o || !l || !l.route.index || _s(u.search) || (u.search = u.search ? u.search.replace(/^\?/, "?index&") : "?index"), r && "/" !== n && (u.pathname = "/" === u.pathname ? n : Na([n, u.pathname])), va(u)
        }

        function Ja(e, t, n, r) {
            if (!r || ! function(e) {
                    return null != e && ("formData" in e && null != e.formData || "body" in e && void 0 !== e.body)
                }(r)) return {
                path: n
            };
            if (r.formMethod && (o = r.formMethod, !Ua.has(o.toLowerCase()))) return {
                path: n,
                error: ds(405, {
                    method: r.formMethod
                })
            };
            var o;
            let i, a, s = () => ({
                    path: n,
                    error: ds(400, {
                        type: "invalid-body"
                    })
                }),
                l = r.formMethod || "get",
                u = e ? l.toUpperCase() : l.toLowerCase(),
                c = ps(n);
            if (void 0 !== r.body) {
                if ("text/plain" === r.formEncType) {
                    if (!ys(u)) return s();
                    let e = "string" == typeof r.body ? r.body : r.body instanceof FormData || r.body instanceof URLSearchParams ? Array.from(r.body.entries()).reduce(((e, t) => {
                        let [n, r] = t;
                        return "" + e + n + "=" + r + "\n"
                    }), "") : String(r.body);
                    return {
                        path: n,
                        submission: {
                            formMethod: u,
                            formAction: c,
                            formEncType: r.formEncType,
                            formData: void 0,
                            json: void 0,
                            text: e
                        }
                    }
                }
                if ("application/json" === r.formEncType) {
                    if (!ys(u)) return s();
                    try {
                        let e = "string" == typeof r.body ? JSON.parse(r.body) : r.body;
                        return {
                            path: n,
                            submission: {
                                formMethod: u,
                                formAction: c,
                                formEncType: r.formEncType,
                                formData: void 0,
                                json: e,
                                text: void 0
                            }
                        }
                    } catch (e) {
                        return s()
                    }
                }
            }
            if (da("function" == typeof FormData, "FormData is not available in this environment"), r.formData) i = as(r.formData), a = r.formData;
            else if (r.body instanceof FormData) i = as(r.body), a = r.body;
            else if (r.body instanceof URLSearchParams) i = r.body, a = ss(i);
            else if (null == r.body) i = new URLSearchParams, a = new FormData;
            else try {
                i = new URLSearchParams(r.body), a = ss(i)
            } catch (e) {
                return s()
            }
            let h = {
                formMethod: u,
                formAction: c,
                formEncType: r && r.formEncType || "application/x-www-form-urlencoded",
                formData: a,
                json: void 0,
                text: void 0
            };
            if (ys(h.formMethod)) return {
                path: n,
                submission: h
            };
            let d = ga(n);
            return t && d.search && _s(d.search) && i.append("index", ""), d.search = "?" + i, {
                path: va(d),
                submission: h
            }
        }

        function es(e, t, n, r, o, i, a, s, l, u, c, h, d, f) {
            let p = f ? Object.values(f)[0] : d ? Object.values(d)[0] : void 0,
                m = e.createURL(t.location),
                v = e.createURL(o),
                g = f ? Object.keys(f)[0] : void 0,
                y = function(e, t) {
                    let n = e;
                    if (t) {
                        let r = e.findIndex((e => e.route.id === t));
                        r >= 0 && (n = e.slice(0, r))
                    }
                    return n
                }(n, g).filter(((e, n) => {
                    if (e.route.lazy) return !0;
                    if (null == e.route.loader) return !1;
                    if (function(e, t, n) {
                            let r = !t || n.route.id !== t.route.id,
                                o = void 0 === e[n.route.id];
                            return r || o
                        }(t.loaderData, t.matches[n], e) || a.some((t => t === e.route.id))) return !0;
                    let o = t.matches[n],
                        s = e;
                    return ns(e, ca({
                        currentUrl: m,
                        currentParams: o.params,
                        nextUrl: v,
                        nextParams: s.params
                    }, r, {
                        actionResult: p,
                        defaultShouldRevalidate: i || m.pathname + m.search === v.pathname + v.search || m.search !== v.search || ts(o, s)
                    }))
                })),
                b = [];
            return l.forEach(((e, o) => {
                if (!n.some((t => t.route.id === e.routeId))) return;
                let a = _a(c, e.path, h);
                if (!a) return void b.push({
                    key: o,
                    routeId: e.routeId,
                    path: e.path,
                    matches: null,
                    match: null,
                    controller: null
                });
                let l = t.fetchers.get(o),
                    d = xs(a, e.path),
                    f = !1;
                f = !u.has(o) && (!!s.includes(o) || (l && "idle" !== l.state && void 0 === l.data ? i : ns(d, ca({
                    currentUrl: m,
                    currentParams: t.matches[t.matches.length - 1].params,
                    nextUrl: v,
                    nextParams: n[n.length - 1].params
                }, r, {
                    actionResult: p,
                    defaultShouldRevalidate: i
                })))), f && b.push({
                    key: o,
                    routeId: e.routeId,
                    path: e.path,
                    matches: a,
                    match: d,
                    controller: new AbortController
                })
            })), [y, b]
        }

        function ts(e, t) {
            let n = e.route.path;
            return e.pathname !== t.pathname || null != n && n.endsWith("*") && e.params["*"] !== t.params["*"]
        }

        function ns(e, t) {
            if (e.route.shouldRevalidate) {
                let n = e.route.shouldRevalidate(t);
                if ("boolean" == typeof n) return n
            }
            return t.defaultShouldRevalidate
        }
        async function rs(e, t, n) {
            if (!e.lazy) return;
            let r = await e.lazy();
            if (!e.lazy) return;
            let o = n[e.id];
            da(o, "No route found in manifest");
            let i = {};
            for (let e in r) {
                let t = void 0 !== o[e] && "hasErrorBoundary" !== e;
                fa(!t, 'Route "' + o.id + '" has a static property "' + e + '" defined but its lazy function is also returning a value for this property. The lazy route property "' + e + '" will be ignored.'), t || ba.has(e) || (i[e] = r[e])
            }
            Object.assign(o, i), Object.assign(o, ca({}, t(o), {
                lazy: void 0
            }))
        }
        async function os(e, t, n, r, o, i, a, s) {
            let l, u, c;
            void 0 === s && (s = {});
            let h = e => {
                let r, o = new Promise(((e, t) => r = t));
                return c = () => r(), t.signal.addEventListener("abort", c), Promise.race([e({
                    request: t,
                    params: n.params,
                    context: s.requestContext
                }), o])
            };
            try {
                let r = n.route[e];
                if (n.route.lazy)
                    if (r) {
                        let e, t = await Promise.all([h(r).catch((t => {
                            e = t
                        })), rs(n.route, i, o)]);
                        if (e) throw e;
                        u = t[0]
                    } else {
                        if (await rs(n.route, i, o), r = n.route[e], !r) {
                            if ("action" === e) {
                                let e = new URL(t.url),
                                    r = e.pathname + e.search;
                                throw ds(405, {
                                    method: t.method,
                                    pathname: r,
                                    routeId: n.route.id
                                })
                            }
                            return {
                                type: ya.data,
                                data: void 0
                            }
                        }
                        u = await h(r)
                    }
                else {
                    if (!r) {
                        let e = new URL(t.url);
                        throw ds(404, {
                            pathname: e.pathname + e.search
                        })
                    }
                    u = await h(r)
                }
                da(void 0 !== u, "You defined " + ("action" === e ? "an action" : "a loader") + ' for route "' + n.route.id + "\" but didn't return anything from your `" + e + "` function. Please return a value or `null`.")
            } catch (e) {
                l = ya.error, u = e
            } finally {
                c && t.signal.removeEventListener("abort", c)
            }
            if (null != (d = u) && "number" == typeof d.status && "string" == typeof d.statusText && "object" == typeof d.headers && void 0 !== d.body) {
                let e, o = u.status;
                if (Wa.has(o)) {
                    let e = u.headers.get("Location");
                    if (da(e, "Redirects returned/thrown from loaders/actions must have a Location header"), $a.test(e)) {
                        if (!s.isStaticRequest) {
                            let n = new URL(t.url),
                                r = e.startsWith("//") ? new URL(n.protocol + e) : new URL(e),
                                o = null != Pa(r.pathname, a);
                            r.origin === n.origin && o && (e = r.pathname + r.search + r.hash)
                        }
                    } else e = Ka(new URL(t.url), r.slice(0, r.indexOf(n) + 1), a, !0, e);
                    if (s.isStaticRequest) throw u.headers.set("Location", e), u;
                    return {
                        type: ya.redirect,
                        status: o,
                        location: e,
                        revalidate: null !== u.headers.get("X-Remix-Revalidate"),
                        reloadDocument: null !== u.headers.get("X-Remix-Reload-Document")
                    }
                }
                if (s.isRouteRequest) throw {
                    type: l === ya.error ? ya.error : ya.data,
                    response: u
                };
                let i = u.headers.get("Content-Type");
                return e = i && /\bapplication\/json\b/.test(i) ? await u.json() : await u.text(), l === ya.error ? {
                    type: l,
                    error: new ja(o, u.statusText, e),
                    headers: u.headers
                } : {
                    type: ya.data,
                    data: e,
                    statusCode: u.status,
                    headers: u.headers
                }
            }
            var d, f, p;
            return l === ya.error ? {
                type: l,
                error: u
            } : function(e) {
                let t = e;
                return t && "object" == typeof t && "object" == typeof t.data && "function" == typeof t.subscribe && "function" == typeof t.cancel && "function" == typeof t.resolveData
            }(u) ? {
                type: ya.deferred,
                deferredData: u,
                statusCode: null == (f = u.init) ? void 0 : f.status,
                headers: (null == (p = u.init) ? void 0 : p.headers) && new Headers(u.init.headers)
            } : {
                type: ya.data,
                data: u
            }
        }

        function is(e, t, n, r) {
            let o = e.createURL(ps(t)).toString(),
                i = {
                    signal: n
                };
            if (r && ys(r.formMethod)) {
                let {
                    formMethod: e,
                    formEncType: t
                } = r;
                i.method = e.toUpperCase(), "application/json" === t ? (i.headers = new Headers({
                    "Content-Type": t
                }), i.body = JSON.stringify(r.json)) : "text/plain" === t ? i.body = r.text : "application/x-www-form-urlencoded" === t && r.formData ? i.body = as(r.formData) : i.body = r.formData
            }
            return new Request(o, i)
        }

        function as(e) {
            let t = new URLSearchParams;
            for (let [n, r] of e.entries()) t.append(n, "string" == typeof r ? r : r.name);
            return t
        }

        function ss(e) {
            let t = new FormData;
            for (let [n, r] of e.entries()) t.append(n, r);
            return t
        }

        function ls(e, t, n, r, o, i, a, s) {
            let {
                loaderData: l,
                errors: u
            } = function(e, t, n, r, o) {
                let i, a = {},
                    s = null,
                    l = !1,
                    u = {};
                return n.forEach(((n, c) => {
                    let h = t[c].route.id;
                    if (da(!gs(n), "Cannot handle redirect results in processLoaderData"), vs(n)) {
                        let t = cs(e, h),
                            o = n.error;
                        r && (o = Object.values(r)[0], r = void 0), s = s || {}, null == s[t.route.id] && (s[t.route.id] = o), a[h] = void 0, l || (l = !0, i = Fa(n.error) ? n.error.status : 500), n.headers && (u[h] = n.headers)
                    } else ms(n) ? (o.set(h, n.deferredData), a[h] = n.deferredData.data) : a[h] = n.data, null == n.statusCode || 200 === n.statusCode || l || (i = n.statusCode), n.headers && (u[h] = n.headers)
                })), r && (s = r, a[Object.keys(r)[0]] = void 0), {
                    loaderData: a,
                    errors: s,
                    statusCode: i || 200,
                    loaderHeaders: u
                }
            }(t, n, r, o, s);
            for (let t = 0; t < i.length; t++) {
                let {
                    key: n,
                    match: r,
                    controller: o
                } = i[t];
                da(void 0 !== a && void 0 !== a[t], "Did not find corresponding fetcher result");
                let s = a[t];
                if (!o || !o.signal.aborted)
                    if (vs(s)) {
                        let t = cs(e.matches, null == r ? void 0 : r.route.id);
                        u && u[t.route.id] || (u = ca({}, u, {
                            [t.route.id]: s.error
                        })), e.fetchers.delete(n)
                    } else if (gs(s)) da(!1, "Unhandled fetcher revalidation redirect");
                else if (ms(s)) da(!1, "Unhandled fetcher deferred data");
                else {
                    let t = Ts(s.data);
                    e.fetchers.set(n, t)
                }
            }
            return {
                loaderData: l,
                errors: u
            }
        }

        function us(e, t, n, r) {
            let o = ca({}, t);
            for (let i of n) {
                let n = i.route.id;
                if (t.hasOwnProperty(n) ? void 0 !== t[n] && (o[n] = t[n]) : void 0 !== e[n] && i.route.loader && (o[n] = e[n]), r && r.hasOwnProperty(n)) break
            }
            return o
        }

        function cs(e, t) {
            return (t ? e.slice(0, e.findIndex((e => e.route.id === t)) + 1) : [...e]).reverse().find((e => !0 === e.route.hasErrorBoundary)) || e[0]
        }

        function hs(e) {
            let t = 1 === e.length ? e[0] : e.find((e => e.index || !e.path || "/" === e.path)) || {
                id: "__shim-error-route__"
            };
            return {
                matches: [{
                    params: {},
                    pathname: "",
                    pathnameBase: "",
                    route: t
                }],
                route: t
            }
        }

        function ds(e, t) {
            let {
                pathname: n,
                routeId: r,
                method: o,
                type: i
            } = void 0 === t ? {} : t, a = "Unknown Server Error", s = "Unknown @remix-run/router error";
            return 400 === e ? (a = "Bad Request", o && n && r ? s = "You made a " + o + ' request to "' + n + '" but did not provide a `loader` for route "' + r + '", so there is no way to handle the request.' : "defer-action" === i ? s = "defer() is not supported in actions" : "invalid-body" === i && (s = "Unable to encode submission body")) : 403 === e ? (a = "Forbidden", s = 'Route "' + r + '" does not match URL "' + n + '"') : 404 === e ? (a = "Not Found", s = 'No route matches URL "' + n + '"') : 405 === e && (a = "Method Not Allowed", o && n && r ? s = "You made a " + o.toUpperCase() + ' request to "' + n + '" but did not provide an `action` for route "' + r + '", so there is no way to handle the request.' : o && (s = 'Invalid request method "' + o.toUpperCase() + '"')), new ja(e || 500, a, new Error(s), !0)
        }

        function fs(e) {
            for (let t = e.length - 1; t >= 0; t--) {
                let n = e[t];
                if (gs(n)) return {
                    result: n,
                    idx: t
                }
            }
        }

        function ps(e) {
            return va(ca({}, "string" == typeof e ? ga(e) : e, {
                hash: ""
            }))
        }

        function ms(e) {
            return e.type === ya.deferred
        }

        function vs(e) {
            return e.type === ya.error
        }

        function gs(e) {
            return (e && e.type) === ya.redirect
        }

        function ys(e) {
            return Ba.has(e.toLowerCase())
        }
        async function bs(e, t, n, r, o, i) {
            for (let a = 0; a < n.length; a++) {
                let s = n[a],
                    l = t[a];
                if (!l) continue;
                let u = e.find((e => e.route.id === l.route.id)),
                    c = null != u && !ts(u, l) && void 0 !== (i && i[l.route.id]);
                if (ms(s) && (o || c)) {
                    let e = r[a];
                    da(e, "Expected an AbortSignal for revalidating fetcher deferred result"), await ws(s, e, o).then((e => {
                        e && (n[a] = e || n[a])
                    }))
                }
            }
        }
        async function ws(e, t, n) {
            if (void 0 === n && (n = !1), !await e.deferredData.resolveData(t)) {
                if (n) try {
                    return {
                        type: ya.data,
                        data: e.deferredData.unwrappedData
                    }
                } catch (e) {
                    return {
                        type: ya.error,
                        error: e
                    }
                }
                return {
                    type: ya.data,
                    data: e.deferredData.data
                }
            }
        }

        function _s(e) {
            return new URLSearchParams(e).getAll("index").some((e => "" === e))
        }

        function xs(e, t) {
            let n = "string" == typeof t ? ga(t).search : t.search;
            if (e[e.length - 1].route.index && _s(n || "")) return e[e.length - 1];
            let r = Ma(e);
            return r[r.length - 1]
        }

        function Es(e) {
            let {
                formMethod: t,
                formAction: n,
                formEncType: r,
                text: o,
                formData: i,
                json: a
            } = e;
            if (t && n && r) return null != o ? {
                formMethod: t,
                formAction: n,
                formEncType: r,
                formData: void 0,
                json: void 0,
                text: o
            } : null != i ? {
                formMethod: t,
                formAction: n,
                formEncType: r,
                formData: i,
                json: void 0,
                text: void 0
            } : void 0 !== a ? {
                formMethod: t,
                formAction: n,
                formEncType: r,
                formData: void 0,
                json: a,
                text: void 0
            } : void 0
        }

        function Ss(e, t) {
            return t ? {
                state: "loading",
                location: e,
                formMethod: t.formMethod,
                formAction: t.formAction,
                formEncType: t.formEncType,
                formData: t.formData,
                json: t.json,
                text: t.text
            } : {
                state: "loading",
                location: e,
                formMethod: void 0,
                formAction: void 0,
                formEncType: void 0,
                formData: void 0,
                json: void 0,
                text: void 0
            }
        }

        function ks(e, t) {
            return e ? {
                state: "loading",
                formMethod: e.formMethod,
                formAction: e.formAction,
                formEncType: e.formEncType,
                formData: e.formData,
                json: e.json,
                text: e.text,
                data: t
            } : {
                state: "loading",
                formMethod: void 0,
                formAction: void 0,
                formEncType: void 0,
                formData: void 0,
                json: void 0,
                text: void 0,
                data: t
            }
        }

        function Ts(e) {
            return {
                state: "idle",
                formMethod: void 0,
                formAction: void 0,
                formEncType: void 0,
                formData: void 0,
                json: void 0,
                text: void 0,
                data: e
            }
        }

        function Cs() {
            return Cs = Object.assign ? Object.assign.bind() : function(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var n = arguments[t];
                    for (var r in n) Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r])
                }
                return e
            }, Cs.apply(this, arguments)
        }
        Symbol("deferred");
        const Os = e.createContext(null),
            As = e.createContext(null),
            Ps = e.createContext(null),
            Rs = e.createContext(null),
            Ms = e.createContext({
                outlet: null,
                matches: [],
                isDataRoute: !1
            }),
            Ds = e.createContext(null);

        function Ns() {
            return null != e.useContext(Rs)
        }

        function Is() {
            return Ns() || da(!1), e.useContext(Rs).location
        }

        function Ls(t) {
            Ns() || da(!1);
            let {
                pathname: n
            } = Is();
            return e.useMemo((() => Oa(t, n)), [n, t])
        }

        function qs(t) {
            e.useContext(Ps).static || e.useLayoutEffect(t)
        }

        function js() {
            let {
                isDataRoute: t
            } = e.useContext(Ms);
            return t ? function() {
                let {
                    router: t
                } = function(t) {
                    let n = e.useContext(Os);
                    return n || da(!1), n
                }(Gs.UseNavigateStable), n = Ys(Qs.UseNavigateStable), r = e.useRef(!1);
                return qs((() => {
                    r.current = !0
                })), e.useCallback((function(e, o) {
                    void 0 === o && (o = {}), r.current && ("number" == typeof e ? t.navigate(e) : t.navigate(e, Cs({
                        fromRouteId: n
                    }, o)))
                }), [t, n])
            }() : function() {
                Ns() || da(!1);
                let t = e.useContext(Os),
                    {
                        basename: n,
                        navigator: r
                    } = e.useContext(Ps),
                    {
                        matches: o
                    } = e.useContext(Ms),
                    {
                        pathname: i
                    } = Is(),
                    a = JSON.stringify(Ma(o).map((e => e.pathnameBase))),
                    s = e.useRef(!1);
                return qs((() => {
                    s.current = !0
                })), e.useCallback((function(e, o) {
                    if (void 0 === o && (o = {}), !s.current) return;
                    if ("number" == typeof e) return void r.go(e);
                    let l = Da(e, JSON.parse(a), i, "path" === o.relative);
                    null == t && "/" !== n && (l.pathname = "/" === l.pathname ? n : Na([n, l.pathname])), (o.replace ? r.replace : r.push)(l, o.state, o)
                }), [n, r, a, i, t])
            }()
        }
        const Fs = e.createContext(null);

        function Vs() {
            return e.useContext(Fs)
        }

        function Bs(t, n) {
            let {
                relative: r
            } = void 0 === n ? {} : n, {
                matches: o
            } = e.useContext(Ms), {
                pathname: i
            } = Is(), a = JSON.stringify(Ma(o).map((e => e.pathnameBase)));
            return e.useMemo((() => Da(t, JSON.parse(a), i, "path" === r)), [t, a, i, r])
        }

        function zs(t, n, r) {
            Ns() || da(!1);
            let {
                navigator: o
            } = e.useContext(Ps), {
                matches: i
            } = e.useContext(Ms), a = i[i.length - 1], s = a ? a.params : {}, l = (a && a.pathname, a ? a.pathnameBase : "/");
            a && a.route;
            let u, c = Is();
            if (n) {
                var h;
                let e = "string" == typeof n ? ga(n) : n;
                "/" === l || (null == (h = e.pathname) ? void 0 : h.startsWith(l)) || da(!1), u = e
            } else u = c;
            let d = u.pathname || "/",
                f = _a(t, {
                    pathname: "/" === l ? d : d.slice(l.length) || "/"
                }),
                p = function(t, n, r) {
                    var o;
                    if (void 0 === n && (n = []), void 0 === r && (r = null), null == t) {
                        var i;
                        if (null == (i = r) || !i.errors) return null;
                        t = r.matches
                    }
                    let a = t,
                        s = null == (o = r) ? void 0 : o.errors;
                    if (null != s) {
                        let e = a.findIndex((e => e.route.id && (null == s ? void 0 : s[e.route.id])));
                        e >= 0 || da(!1), a = a.slice(0, Math.min(a.length, e + 1))
                    }
                    return a.reduceRight(((t, o, i) => {
                        let l = o.route.id ? null == s ? void 0 : s[o.route.id] : null,
                            u = null;
                        r && (u = o.route.errorElement || Us);
                        let c = n.concat(a.slice(0, i + 1)),
                            h = () => {
                                let n;
                                return n = l ? u : o.route.Component ? e.createElement(o.route.Component, null) : o.route.element ? o.route.element : t, e.createElement(Hs, {
                                    match: o,
                                    routeContext: {
                                        outlet: t,
                                        matches: c,
                                        isDataRoute: null != r
                                    },
                                    children: n
                                })
                            };
                        return r && (o.route.ErrorBoundary || o.route.errorElement || 0 === i) ? e.createElement(Ws, {
                            location: r.location,
                            revalidation: r.revalidation,
                            component: u,
                            error: l,
                            children: h(),
                            routeContext: {
                                outlet: null,
                                matches: c,
                                isDataRoute: !0
                            }
                        }) : h()
                    }), null)
                }(f && f.map((e => Object.assign({}, e, {
                    params: Object.assign({}, s, e.params),
                    pathname: Na([l, o.encodeLocation ? o.encodeLocation(e.pathname).pathname : e.pathname]),
                    pathnameBase: "/" === e.pathnameBase ? l : Na([l, o.encodeLocation ? o.encodeLocation(e.pathnameBase).pathname : e.pathnameBase])
                }))), i, r);
            return n && p ? e.createElement(Rs.Provider, {
                value: {
                    location: Cs({
                        pathname: "/",
                        search: "",
                        hash: "",
                        state: null,
                        key: "default"
                    }, u),
                    navigationType: la.Pop
                }
            }, p) : p
        }
        const Us = e.createElement((function() {
            let t = function() {
                    var t;
                    let n = e.useContext(Ds),
                        r = function(t) {
                            let n = e.useContext(As);
                            return n || da(!1), n
                        }(Qs.UseRouteError),
                        o = Ys(Qs.UseRouteError);
                    return n || (null == (t = r.errors) ? void 0 : t[o])
                }(),
                n = Fa(t) ? t.status + " " + t.statusText : t instanceof Error ? t.message : JSON.stringify(t),
                r = t instanceof Error ? t.stack : null;
            return e.createElement(e.Fragment, null, e.createElement("h2", null, "Unexpected Application Error!"), e.createElement("h3", {
                style: {
                    fontStyle: "italic"
                }
            }, n), r ? e.createElement("pre", {
                style: {
                    padding: "0.5rem",
                    backgroundColor: "rgba(200,200,200, 0.5)"
                }
            }, r) : null, null)
        }), null);
        class Ws extends e.Component {
            constructor(e) {
                super(e), this.state = {
                    location: e.location,
                    revalidation: e.revalidation,
                    error: e.error
                }
            }
            static getDerivedStateFromError(e) {
                return {
                    error: e
                }
            }
            static getDerivedStateFromProps(e, t) {
                return t.location !== e.location || "idle" !== t.revalidation && "idle" === e.revalidation ? {
                    error: e.error,
                    location: e.location,
                    revalidation: e.revalidation
                } : {
                    error: e.error || t.error,
                    location: t.location,
                    revalidation: e.revalidation || t.revalidation
                }
            }
            componentDidCatch(e, t) {
                console.error("React Router caught the following error during render", e, t)
            }
            render() {
                return this.state.error ? e.createElement(Ms.Provider, {
                    value: this.props.routeContext
                }, e.createElement(Ds.Provider, {
                    value: this.state.error,
                    children: this.props.component
                })) : this.props.children
            }
        }

        function Hs(t) {
            let {
                routeContext: n,
                match: r,
                children: o
            } = t, i = e.useContext(Os);
            return i && i.static && i.staticContext && (r.route.errorElement || r.route.ErrorBoundary) && (i.staticContext._deepestRenderedBoundaryId = r.route.id), e.createElement(Ms.Provider, {
                value: n
            }, o)
        }
        var Gs = function(e) {
                return e.UseBlocker = "useBlocker", e.UseRevalidator = "useRevalidator", e.UseNavigateStable = "useNavigate", e
            }(Gs || {}),
            Qs = function(e) {
                return e.UseBlocker = "useBlocker", e.UseLoaderData = "useLoaderData", e.UseActionData = "useActionData", e.UseRouteError = "useRouteError", e.UseNavigation = "useNavigation", e.UseRouteLoaderData = "useRouteLoaderData", e.UseMatches = "useMatches", e.UseRevalidator = "useRevalidator", e.UseNavigateStable = "useNavigate", e.UseRouteId = "useRouteId", e
            }(Qs || {});

        function Ys(t) {
            let n = function(t) {
                    let n = e.useContext(Ms);
                    return n || da(!1), n
                }(),
                r = n.matches[n.matches.length - 1];
            return r.route.id || da(!1), r.route.id
        }

        function $s(t) {
            let {
                to: n,
                replace: r,
                state: o,
                relative: i
            } = t;
            Ns() || da(!1);
            let {
                matches: a
            } = e.useContext(Ms), {
                pathname: s
            } = Is(), l = js(), u = Da(n, Ma(a).map((e => e.pathnameBase)), s, "path" === i), c = JSON.stringify(u);
            return e.useEffect((() => l(JSON.parse(c), {
                replace: r,
                state: o,
                relative: i
            })), [l, c, i, r, o]), null
        }

        function Zs(t) {
            return function(t) {
                let n = e.useContext(Ms).outlet;
                return n ? e.createElement(Fs.Provider, {
                    value: t
                }, n) : n
            }(t.context)
        }

        function Xs(t) {
            let {
                basename: n = "/",
                children: r = null,
                location: o,
                navigationType: i = la.Pop,
                navigator: a,
                static: s = !1
            } = t;
            Ns() && da(!1);
            let l = n.replace(/^\/*/, "/"),
                u = e.useMemo((() => ({
                    basename: l,
                    navigator: a,
                    static: s
                })), [l, a, s]);
            "string" == typeof o && (o = ga(o));
            let {
                pathname: c = "/",
                search: h = "",
                hash: d = "",
                state: f = null,
                key: p = "default"
            } = o, m = e.useMemo((() => {
                let e = Pa(c, l);
                return null == e ? null : {
                    location: {
                        pathname: e,
                        search: h,
                        hash: d,
                        state: f,
                        key: p
                    },
                    navigationType: i
                }
            }), [l, c, h, d, f, p, i]);
            return null == m ? null : e.createElement(Ps.Provider, {
                value: u
            }, e.createElement(Rs.Provider, {
                children: r,
                value: m
            }))
        }
        t.startTransition, new Promise((() => {}));
        e.Component;

        function Ks() {
            return Ks = Object.assign ? Object.assign.bind() : function(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var n = arguments[t];
                    for (var r in n) Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r])
                }
                return e
            }, Ks.apply(this, arguments)
        }

        function Js(e, t) {
            if (null == e) return {};
            var n, r, o = {},
                i = Object.keys(e);
            for (r = 0; r < i.length; r++) n = i[r], t.indexOf(n) >= 0 || (o[n] = e[n]);
            return o
        }

        function el(e) {
            return void 0 === e && (e = ""), new URLSearchParams("string" == typeof e || Array.isArray(e) || e instanceof URLSearchParams ? e : Object.keys(e).reduce(((t, n) => {
                let r = e[n];
                return t.concat(Array.isArray(r) ? r.map((e => [n, e])) : [
                    [n, r]
                ])
            }), []))
        }
        new Set(["application/x-www-form-urlencoded", "multipart/form-data", "text/plain"]);
        const tl = ["onClick", "relative", "reloadDocument", "replace", "state", "target", "to", "preventScrollReset", "unstable_viewTransition"],
            nl = ["aria-current", "caseSensitive", "className", "end", "style", "to", "unstable_viewTransition", "children"];

        function rl(e) {
            if (!e) return null;
            let t = Object.entries(e),
                n = {};
            for (let [r, o] of t)
                if (o && "RouteErrorResponse" === o.__type) n[r] = new ja(o.status, o.statusText, o.data, !0 === o.internal);
                else if (o && "Error" === o.__type) {
                if (o.__subType) {
                    let t = window[o.__subType];
                    if ("function" == typeof t) try {
                        let e = new t(o.message);
                        e.stack = "", n[r] = e
                    } catch (e) {}
                }
                if (null == n[r]) {
                    let e = new Error(o.message);
                    e.stack = "", n[r] = e
                }
            } else n[r] = o;
            return n
        }
        const ol = e.createContext({
                isTransitioning: !1
            }),
            il = e.createContext(new Map),
            al = t.startTransition;
        class sl {
            constructor() {
                this.status = "pending", this.promise = new Promise(((e, t) => {
                    this.resolve = t => {
                        "pending" === this.status && (this.status = "resolved", e(t))
                    }, this.reject = e => {
                        "pending" === this.status && (this.status = "rejected", t(e))
                    }
                }))
            }
        }

        function ll(t) {
            let {
                fallbackElement: n,
                router: r,
                future: o
            } = t, [i, a] = e.useState(r.state), [s, l] = e.useState(), [u, c] = e.useState({
                isTransitioning: !1
            }), [h, d] = e.useState(), [f, p] = e.useState(), [m, v] = e.useState(), g = e.useRef(new Map), {
                v7_startTransition: y
            } = o || {}, b = e.useCallback((e => {
                y ? function(e) {
                    al ? al(e) : e()
                }(e) : e()
            }), [y]), w = e.useCallback(((e, t) => {
                let {
                    deletedFetchers: n,
                    unstable_viewTransitionOpts: o
                } = t;
                n.forEach((e => g.current.delete(e))), e.fetchers.forEach(((e, t) => {
                    void 0 !== e.data && g.current.set(t, e.data)
                })), o && null != r.window && "function" == typeof r.window.document.startViewTransition ? f && h ? (h.resolve(), f.skipTransition(), v({
                    state: e,
                    currentLocation: o.currentLocation,
                    nextLocation: o.nextLocation
                })) : (l(e), c({
                    isTransitioning: !0,
                    currentLocation: o.currentLocation,
                    nextLocation: o.nextLocation
                })) : b((() => a(e)))
            }), [r.window, f, h, g, b]);
            e.useLayoutEffect((() => r.subscribe(w)), [r, w]), e.useEffect((() => {
                u.isTransitioning && d(new sl)
            }), [u.isTransitioning]), e.useEffect((() => {
                if (h && s && r.window) {
                    let e = s,
                        t = h.promise,
                        n = r.window.document.startViewTransition((async () => {
                            b((() => a(e))), await t
                        }));
                    n.finished.finally((() => {
                        d(void 0), p(void 0), l(void 0), c({
                            isTransitioning: !1
                        })
                    })), p(n)
                }
            }), [b, s, h, r.window]), e.useEffect((() => {
                h && s && i.location.key === s.location.key && h.resolve()
            }), [h, f, i.location, s]), e.useEffect((() => {
                !u.isTransitioning && m && (l(m.state), c({
                    isTransitioning: !0,
                    currentLocation: m.currentLocation,
                    nextLocation: m.nextLocation
                }), v(void 0))
            }), [u.isTransitioning, m]);
            let _ = e.useMemo((() => ({
                    createHref: r.createHref,
                    encodeLocation: r.encodeLocation,
                    go: e => r.navigate(e),
                    push: (e, t, n) => r.navigate(e, {
                        state: t,
                        preventScrollReset: null == n ? void 0 : n.preventScrollReset
                    }),
                    replace: (e, t, n) => r.navigate(e, {
                        replace: !0,
                        state: t,
                        preventScrollReset: null == n ? void 0 : n.preventScrollReset
                    })
                })), [r]),
                x = r.basename || "/",
                E = e.useMemo((() => ({
                    router: r,
                    navigator: _,
                    static: !1,
                    basename: x
                })), [r, _, x]);
            return e.createElement(e.Fragment, null, e.createElement(Os.Provider, {
                value: E
            }, e.createElement(As.Provider, {
                value: i
            }, e.createElement(il.Provider, {
                value: g.current
            }, e.createElement(ol.Provider, {
                value: u
            }, e.createElement(Xs, {
                basename: x,
                location: i.location,
                navigationType: i.historyAction,
                navigator: _
            }, i.initialized ? e.createElement(ul, {
                routes: r.routes,
                state: i
            }) : n))))), null)
        }

        function ul(e) {
            let {
                routes: t,
                state: n
            } = e;
            return zs(t, void 0, n)
        }
        const cl = "undefined" != typeof window && void 0 !== window.document && void 0 !== window.document.createElement,
            hl = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i,
            dl = e.forwardRef((function(t, n) {
                let r, {
                        onClick: o,
                        relative: i,
                        reloadDocument: a,
                        replace: s,
                        state: l,
                        target: u,
                        to: c,
                        preventScrollReset: h,
                        unstable_viewTransition: d
                    } = t,
                    f = Js(t, tl),
                    {
                        basename: p
                    } = e.useContext(Ps),
                    m = !1;
                if ("string" == typeof c && hl.test(c) && (r = c, cl)) try {
                    let e = new URL(window.location.href),
                        t = c.startsWith("//") ? new URL(e.protocol + c) : new URL(c),
                        n = Pa(t.pathname, p);
                    t.origin === e.origin && null != n ? c = n + t.search + t.hash : m = !0
                } catch (e) {}
                let v = function(t, n) {
                        let {
                            relative: r
                        } = void 0 === n ? {} : n;
                        Ns() || da(!1);
                        let {
                            basename: o,
                            navigator: i
                        } = e.useContext(Ps), {
                            hash: a,
                            pathname: s,
                            search: l
                        } = Bs(t, {
                            relative: r
                        }), u = s;
                        return "/" !== o && (u = "/" === s ? o : Na([o, s])), i.createHref({
                            pathname: u,
                            search: l,
                            hash: a
                        })
                    }(c, {
                        relative: i
                    }),
                    g = function(t, n) {
                        let {
                            target: r,
                            replace: o,
                            state: i,
                            preventScrollReset: a,
                            relative: s,
                            unstable_viewTransition: l
                        } = void 0 === n ? {} : n, u = js(), c = Is(), h = Bs(t, {
                            relative: s
                        });
                        return e.useCallback((e => {
                            if (function(e, t) {
                                    return !(0 !== e.button || t && "_self" !== t || function(e) {
                                        return !!(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey)
                                    }(e))
                                }(e, r)) {
                                e.preventDefault();
                                let n = void 0 !== o ? o : va(c) === va(h);
                                u(t, {
                                    replace: n,
                                    state: i,
                                    preventScrollReset: a,
                                    relative: s,
                                    unstable_viewTransition: l
                                })
                            }
                        }), [c, u, h, o, i, r, t, a, s, l])
                    }(c, {
                        replace: s,
                        state: l,
                        target: u,
                        preventScrollReset: h,
                        relative: i,
                        unstable_viewTransition: d
                    });
                return e.createElement("a", Ks({}, f, {
                    href: r || v,
                    onClick: m || a ? o : function(e) {
                        o && o(e), e.defaultPrevented || g(e)
                    },
                    ref: n,
                    target: u
                }))
            })),
            fl = e.forwardRef((function(t, n) {
                let {
                    "aria-current": r = "page",
                    caseSensitive: o = !1,
                    className: i = "",
                    end: a = !1,
                    style: s,
                    to: l,
                    unstable_viewTransition: u,
                    children: c
                } = t, h = Js(t, nl), d = Bs(l, {
                    relative: h.relative
                }), f = Is(), p = e.useContext(As), {
                    navigator: m
                } = e.useContext(Ps), v = null != p && function(t, n) {
                    void 0 === n && (n = {});
                    let r = e.useContext(ol);
                    null == r && da(!1);
                    let {
                        basename: o
                    } = function(t) {
                        let n = e.useContext(Os);
                        return n || da(!1), n
                    }(pl.useViewTransitionState), i = Bs(t, {
                        relative: n.relative
                    });
                    if (!r.isTransitioning) return !1;
                    let a = Pa(r.currentLocation.pathname, o) || r.currentLocation.pathname,
                        s = Pa(r.nextLocation.pathname, o) || r.nextLocation.pathname;
                    return null != Oa(i.pathname, s) || null != Oa(i.pathname, a)
                }(d) && !0 === u, g = m.encodeLocation ? m.encodeLocation(d).pathname : d.pathname, y = f.pathname, b = p && p.navigation && p.navigation.location ? p.navigation.location.pathname : null;
                o || (y = y.toLowerCase(), b = b ? b.toLowerCase() : null, g = g.toLowerCase());
                let w, _ = y === g || !a && y.startsWith(g) && "/" === y.charAt(g.length),
                    x = null != b && (b === g || !a && b.startsWith(g) && "/" === b.charAt(g.length)),
                    E = {
                        isActive: _,
                        isPending: x,
                        isTransitioning: v
                    },
                    S = _ ? r : void 0;
                w = "function" == typeof i ? i(E) : [i, _ ? "active" : null, x ? "pending" : null, v ? "transitioning" : null].filter(Boolean).join(" ");
                let k = "function" == typeof s ? s(E) : s;
                return e.createElement(dl, Ks({}, h, {
                    "aria-current": S,
                    className: w,
                    ref: n,
                    style: k,
                    to: l,
                    unstable_viewTransition: u
                }), "function" == typeof c ? c(E) : c)
            }));
        var pl, ml;

        function vl(t) {
            let n = e.useRef(el(t)),
                r = e.useRef(!1),
                o = Is(),
                i = e.useMemo((() => function(e, t) {
                    let n = el(e);
                    return t && t.forEach(((e, r) => {
                        n.has(r) || t.getAll(r).forEach((e => {
                            n.append(r, e)
                        }))
                    })), n
                }(o.search, r.current ? null : n.current)), [o.search]),
                a = js(),
                s = e.useCallback(((e, t) => {
                    const n = el("function" == typeof e ? e(i) : e);
                    r.current = !0, a("?" + n, t)
                }), [a, i]);
            return [i, s]
        }(function(e) {
            e.UseScrollRestoration = "useScrollRestoration", e.UseSubmit = "useSubmit", e.UseSubmitFetcher = "useSubmitFetcher", e.UseFetcher = "useFetcher", e.useViewTransitionState = "useViewTransitionState"
        })(pl || (pl = {})),
        function(e) {
            e.UseFetcher = "useFetcher", e.UseFetchers = "useFetchers", e.UseScrollRestoration = "useScrollRestoration"
        }(ml || (ml = {}));
        const gl = (0, e.createContext)({
                isFetching: !1,
                isActive: !1,
                setLicenseKey: function() {},
                licenseKey: "",
                managementHref: "",
                isCorrectFormat: !1,
                fetchFailure: void 0,
                clearLicenseKey: function() {},
                endDate: void 0
            }),
            yl = function() {
                return (0, e.useContext)(gl)
            };
        var bl, wl, _l, xl, El = o(74),
            Sl = o.n(El),
            kl = o(139),
            Tl = o.n(kl),
            Cl = o(126),
            Ol = o.n(Cl),
            Al = o(347),
            Pl = o.n(Al),
            Rl = "bodyAttributes",
            Ml = "htmlAttributes",
            Dl = {
                BASE: "base",
                BODY: "body",
                HEAD: "head",
                HTML: "html",
                LINK: "link",
                META: "meta",
                NOSCRIPT: "noscript",
                SCRIPT: "script",
                STYLE: "style",
                TITLE: "title"
            },
            Nl = (Object.keys(Dl).map((function(e) {
                return Dl[e]
            })), "charset"),
            Il = "cssText",
            Ll = "href",
            ql = "innerHTML",
            jl = "itemprop",
            Fl = "rel",
            Vl = {
                accesskey: "accessKey",
                charset: "charSet",
                class: "className",
                contenteditable: "contentEditable",
                contextmenu: "contextMenu",
                "http-equiv": "httpEquiv",
                itemprop: "itemProp",
                tabindex: "tabIndex"
            },
            Bl = Object.keys(Vl).reduce((function(e, t) {
                return e[Vl[t]] = t, e
            }), {}),
            zl = [Dl.NOSCRIPT, Dl.SCRIPT, Dl.STYLE],
            Ul = "data-react-helmet",
            Wl = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                return typeof e
            } : function(e) {
                return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
            },
            Hl = function() {
                function e(e, t) {
                    for (var n = 0; n < t.length; n++) {
                        var r = t[n];
                        r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, r.key, r)
                    }
                }
                return function(t, n, r) {
                    return n && e(t.prototype, n), r && e(t, r), t
                }
            }(),
            Gl = Object.assign || function(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var n = arguments[t];
                    for (var r in n) Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r])
                }
                return e
            },
            Ql = function(e, t) {
                var n = {};
                for (var r in e) t.indexOf(r) >= 0 || Object.prototype.hasOwnProperty.call(e, r) && (n[r] = e[r]);
                return n
            },
            Yl = function(e) {
                return !1 === (!(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1]) ? String(e) : String(e).replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#x27;")
            },
            $l = function(e) {
                var t = eu(e, Dl.TITLE),
                    n = eu(e, "titleTemplate");
                if (n && t) return n.replace(/%s/g, (function() {
                    return Array.isArray(t) ? t.join("") : t
                }));
                var r = eu(e, "defaultTitle");
                return t || r || void 0
            },
            Zl = function(e) {
                return eu(e, "onChangeClientState") || function() {}
            },
            Xl = function(e, t) {
                return t.filter((function(t) {
                    return void 0 !== t[e]
                })).map((function(t) {
                    return t[e]
                })).reduce((function(e, t) {
                    return Gl({}, e, t)
                }), {})
            },
            Kl = function(e, t) {
                return t.filter((function(e) {
                    return void 0 !== e[Dl.BASE]
                })).map((function(e) {
                    return e[Dl.BASE]
                })).reverse().reduce((function(t, n) {
                    if (!t.length)
                        for (var r = Object.keys(n), o = 0; o < r.length; o++) {
                            var i = r[o].toLowerCase();
                            if (-1 !== e.indexOf(i) && n[i]) return t.concat(n)
                        }
                    return t
                }), [])
            },
            Jl = function(e, t, n) {
                var r = {};
                return n.filter((function(t) {
                    return !!Array.isArray(t[e]) || (void 0 !== t[e] && iu("Helmet: " + e + ' should be of type "Array". Instead found type "' + Wl(t[e]) + '"'), !1)
                })).map((function(t) {
                    return t[e]
                })).reverse().reduce((function(e, n) {
                    var o = {};
                    n.filter((function(e) {
                        for (var n = void 0, i = Object.keys(e), a = 0; a < i.length; a++) {
                            var s = i[a],
                                l = s.toLowerCase(); - 1 === t.indexOf(l) || n === Fl && "canonical" === e[n].toLowerCase() || l === Fl && "stylesheet" === e[l].toLowerCase() || (n = l), -1 === t.indexOf(s) || s !== ql && s !== Il && s !== jl || (n = s)
                        }
                        if (!n || !e[n]) return !1;
                        var u = e[n].toLowerCase();
                        return r[n] || (r[n] = {}), o[n] || (o[n] = {}), !r[n][u] && (o[n][u] = !0, !0)
                    })).reverse().forEach((function(t) {
                        return e.push(t)
                    }));
                    for (var i = Object.keys(o), a = 0; a < i.length; a++) {
                        var s = i[a],
                            l = Pl()({}, r[s], o[s]);
                        r[s] = l
                    }
                    return e
                }), []).reverse()
            },
            eu = function(e, t) {
                for (var n = e.length - 1; n >= 0; n--) {
                    var r = e[n];
                    if (r.hasOwnProperty(t)) return r[t]
                }
                return null
            },
            tu = (bl = Date.now(), function(e) {
                var t = Date.now();
                t - bl > 16 ? (bl = t, e(t)) : setTimeout((function() {
                    tu(e)
                }), 0)
            }),
            nu = function(e) {
                return clearTimeout(e)
            },
            ru = "undefined" != typeof window ? window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || tu : o.g.requestAnimationFrame || tu,
            ou = "undefined" != typeof window ? window.cancelAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || nu : o.g.cancelAnimationFrame || nu,
            iu = function(e) {
                return console && "function" == typeof console.warn && console.warn(e)
            },
            au = null,
            su = function(e, t) {
                var n = e.baseTag,
                    r = e.bodyAttributes,
                    o = e.htmlAttributes,
                    i = e.linkTags,
                    a = e.metaTags,
                    s = e.noscriptTags,
                    l = e.onChangeClientState,
                    u = e.scriptTags,
                    c = e.styleTags,
                    h = e.title,
                    d = e.titleAttributes;
                cu(Dl.BODY, r), cu(Dl.HTML, o), uu(h, d);
                var f = {
                        baseTag: hu(Dl.BASE, n),
                        linkTags: hu(Dl.LINK, i),
                        metaTags: hu(Dl.META, a),
                        noscriptTags: hu(Dl.NOSCRIPT, s),
                        scriptTags: hu(Dl.SCRIPT, u),
                        styleTags: hu(Dl.STYLE, c)
                    },
                    p = {},
                    m = {};
                Object.keys(f).forEach((function(e) {
                    var t = f[e],
                        n = t.newTags,
                        r = t.oldTags;
                    n.length && (p[e] = n), r.length && (m[e] = f[e].oldTags)
                })), t && t(), l(e, p, m)
            },
            lu = function(e) {
                return Array.isArray(e) ? e.join("") : e
            },
            uu = function(e, t) {
                void 0 !== e && document.title !== e && (document.title = lu(e)), cu(Dl.TITLE, t)
            },
            cu = function(e, t) {
                var n = document.getElementsByTagName(e)[0];
                if (n) {
                    for (var r = n.getAttribute(Ul), o = r ? r.split(",") : [], i = [].concat(o), a = Object.keys(t), s = 0; s < a.length; s++) {
                        var l = a[s],
                            u = t[l] || "";
                        n.getAttribute(l) !== u && n.setAttribute(l, u), -1 === o.indexOf(l) && o.push(l);
                        var c = i.indexOf(l); - 1 !== c && i.splice(c, 1)
                    }
                    for (var h = i.length - 1; h >= 0; h--) n.removeAttribute(i[h]);
                    o.length === i.length ? n.removeAttribute(Ul) : n.getAttribute(Ul) !== a.join(",") && n.setAttribute(Ul, a.join(","))
                }
            },
            hu = function(e, t) {
                var n = document.head || document.querySelector(Dl.HEAD),
                    r = n.querySelectorAll(e + "[" + Ul + "]"),
                    o = Array.prototype.slice.call(r),
                    i = [],
                    a = void 0;
                return t && t.length && t.forEach((function(t) {
                    var n = document.createElement(e);
                    for (var r in t)
                        if (t.hasOwnProperty(r))
                            if (r === ql) n.innerHTML = t.innerHTML;
                            else if (r === Il) n.styleSheet ? n.styleSheet.cssText = t.cssText : n.appendChild(document.createTextNode(t.cssText));
                    else {
                        var s = void 0 === t[r] ? "" : t[r];
                        n.setAttribute(r, s)
                    }
                    n.setAttribute(Ul, "true"), o.some((function(e, t) {
                        return a = t, n.isEqualNode(e)
                    })) ? o.splice(a, 1) : i.push(n)
                })), o.forEach((function(e) {
                    return e.parentNode.removeChild(e)
                })), i.forEach((function(e) {
                    return n.appendChild(e)
                })), {
                    oldTags: o,
                    newTags: i
                }
            },
            du = function(e) {
                return Object.keys(e).reduce((function(t, n) {
                    var r = void 0 !== e[n] ? n + '="' + e[n] + '"' : "" + n;
                    return t ? t + " " + r : r
                }), "")
            },
            fu = function(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                return Object.keys(e).reduce((function(t, n) {
                    return t[Vl[n] || n] = e[n], t
                }), t)
            },
            pu = function(t, n, r) {
                switch (t) {
                    case Dl.TITLE:
                        return {
                            toComponent: function() {
                                return t = n.title, r = n.titleAttributes, (o = {
                                    key: t
                                })[Ul] = !0, i = fu(r, o), [e.createElement(Dl.TITLE, i, t)];
                                var t, r, o, i
                            }, toString: function() {
                                return function(e, t, n, r) {
                                    var o = du(n),
                                        i = lu(t);
                                    return o ? "<" + e + " " + Ul + '="true" ' + o + ">" + Yl(i, r) + "</" + e + ">" : "<" + e + " " + Ul + '="true">' + Yl(i, r) + "</" + e + ">"
                                }(t, n.title, n.titleAttributes, r)
                            }
                        };
                    case Rl:
                    case Ml:
                        return {
                            toComponent: function() {
                                return fu(n)
                            }, toString: function() {
                                return du(n)
                            }
                        };
                    default:
                        return {
                            toComponent: function() {
                                return function(t, n) {
                                    return n.map((function(n, r) {
                                        var o, i = ((o = {
                                            key: r
                                        })[Ul] = !0, o);
                                        return Object.keys(n).forEach((function(e) {
                                            var t = Vl[e] || e;
                                            if (t === ql || t === Il) {
                                                var r = n.innerHTML || n.cssText;
                                                i.dangerouslySetInnerHTML = {
                                                    __html: r
                                                }
                                            } else i[t] = n[e]
                                        })), e.createElement(t, i)
                                    }))
                                }(t, n)
                            }, toString: function() {
                                return function(e, t, n) {
                                    return t.reduce((function(t, r) {
                                        var o = Object.keys(r).filter((function(e) {
                                                return !(e === ql || e === Il)
                                            })).reduce((function(e, t) {
                                                var o = void 0 === r[t] ? t : t + '="' + Yl(r[t], n) + '"';
                                                return e ? e + " " + o : o
                                            }), ""),
                                            i = r.innerHTML || r.cssText || "",
                                            a = -1 === zl.indexOf(e);
                                        return t + "<" + e + " " + Ul + '="true" ' + o + (a ? "/>" : ">" + i + "</" + e + ">")
                                    }), "")
                                }(t, n, r)
                            }
                        }
                }
            },
            mu = function(e) {
                var t = e.baseTag,
                    n = e.bodyAttributes,
                    r = e.encode,
                    o = e.htmlAttributes,
                    i = e.linkTags,
                    a = e.metaTags,
                    s = e.noscriptTags,
                    l = e.scriptTags,
                    u = e.styleTags,
                    c = e.title,
                    h = void 0 === c ? "" : c,
                    d = e.titleAttributes;
                return {
                    base: pu(Dl.BASE, t, r),
                    bodyAttributes: pu(Rl, n, r),
                    htmlAttributes: pu(Ml, o, r),
                    link: pu(Dl.LINK, i, r),
                    meta: pu(Dl.META, a, r),
                    noscript: pu(Dl.NOSCRIPT, s, r),
                    script: pu(Dl.SCRIPT, l, r),
                    style: pu(Dl.STYLE, u, r),
                    title: pu(Dl.TITLE, {
                        title: h,
                        titleAttributes: d
                    }, r)
                }
            },
            vu = Tl()((function(e) {
                return {
                    baseTag: Kl([Ll, "target"], e),
                    bodyAttributes: Xl(Rl, e),
                    defer: eu(e, "defer"),
                    encode: eu(e, "encodeSpecialCharacters"),
                    htmlAttributes: Xl(Ml, e),
                    linkTags: Jl(Dl.LINK, [Fl, Ll], e),
                    metaTags: Jl(Dl.META, ["name", Nl, "http-equiv", "property", jl], e),
                    noscriptTags: Jl(Dl.NOSCRIPT, [ql], e),
                    onChangeClientState: Zl(e),
                    scriptTags: Jl(Dl.SCRIPT, ["src", ql], e),
                    styleTags: Jl(Dl.STYLE, [Il], e),
                    title: $l(e),
                    titleAttributes: Xl("titleAttributes", e)
                }
            }), (function(e) {
                au && ou(au), e.defer ? au = ru((function() {
                    su(e, (function() {
                        au = null
                    }))
                })) : (su(e), au = null)
            }), mu)((function() {
                return null
            })),
            gu = (wl = vu, xl = _l = function(t) {
                function n() {
                    return function(e, t) {
                            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                        }(this, n),
                        function(e, t) {
                            if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                            return !t || "object" != typeof t && "function" != typeof t ? e : t
                        }(this, t.apply(this, arguments))
                }
                return function(e, t) {
                    if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
                    e.prototype = Object.create(t && t.prototype, {
                        constructor: {
                            value: e,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
                }(n, t), n.prototype.shouldComponentUpdate = function(e) {
                    return !Ol()(this.props, e)
                }, n.prototype.mapNestedChildrenToProps = function(e, t) {
                    if (!t) return null;
                    switch (e.type) {
                        case Dl.SCRIPT:
                        case Dl.NOSCRIPT:
                            return {
                                innerHTML: t
                            };
                        case Dl.STYLE:
                            return {
                                cssText: t
                            }
                    }
                    throw new Error("<" + e.type + " /> elements are self-closing and can not contain children. Refer to our API for more information.")
                }, n.prototype.flattenArrayTypeChildren = function(e) {
                    var t, n = e.child,
                        r = e.arrayTypeChildren,
                        o = e.newChildProps,
                        i = e.nestedChildren;
                    return Gl({}, r, ((t = {})[n.type] = [].concat(r[n.type] || [], [Gl({}, o, this.mapNestedChildrenToProps(n, i))]), t))
                }, n.prototype.mapObjectTypeChildren = function(e) {
                    var t, n, r = e.child,
                        o = e.newProps,
                        i = e.newChildProps,
                        a = e.nestedChildren;
                    switch (r.type) {
                        case Dl.TITLE:
                            return Gl({}, o, ((t = {})[r.type] = a, t.titleAttributes = Gl({}, i), t));
                        case Dl.BODY:
                            return Gl({}, o, {
                                bodyAttributes: Gl({}, i)
                            });
                        case Dl.HTML:
                            return Gl({}, o, {
                                htmlAttributes: Gl({}, i)
                            })
                    }
                    return Gl({}, o, ((n = {})[r.type] = Gl({}, i), n))
                }, n.prototype.mapArrayTypeChildrenToProps = function(e, t) {
                    var n = Gl({}, t);
                    return Object.keys(e).forEach((function(t) {
                        var r;
                        n = Gl({}, n, ((r = {})[t] = e[t], r))
                    })), n
                }, n.prototype.warnOnInvalidChildren = function(e, t) {
                    return !0
                }, n.prototype.mapChildrenToProps = function(t, n) {
                    var r = this,
                        o = {};
                    return e.Children.forEach(t, (function(e) {
                        if (e && e.props) {
                            var t = e.props,
                                i = t.children,
                                a = function(e) {
                                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                                    return Object.keys(e).reduce((function(t, n) {
                                        return t[Bl[n] || n] = e[n], t
                                    }), t)
                                }(Ql(t, ["children"]));
                            switch (r.warnOnInvalidChildren(e, i), e.type) {
                                case Dl.LINK:
                                case Dl.META:
                                case Dl.NOSCRIPT:
                                case Dl.SCRIPT:
                                case Dl.STYLE:
                                    o = r.flattenArrayTypeChildren({
                                        child: e,
                                        arrayTypeChildren: o,
                                        newChildProps: a,
                                        nestedChildren: i
                                    });
                                    break;
                                default:
                                    n = r.mapObjectTypeChildren({
                                        child: e,
                                        newProps: n,
                                        newChildProps: a,
                                        nestedChildren: i
                                    })
                            }
                        }
                    })), n = this.mapArrayTypeChildrenToProps(o, n)
                }, n.prototype.render = function() {
                    var t = this.props,
                        n = t.children,
                        r = Ql(t, ["children"]),
                        o = Gl({}, r);
                    return n && (o = this.mapChildrenToProps(n, o)), e.createElement(wl, o)
                }, Hl(n, null, [{
                    key: "canUseDOM",
                    set: function(e) {
                        wl.canUseDOM = e
                    }
                }]), n
            }(e.Component), _l.propTypes = {
                base: Sl().object,
                bodyAttributes: Sl().object,
                children: Sl().oneOfType([Sl().arrayOf(Sl().node), Sl().node]),
                defaultTitle: Sl().string,
                defer: Sl().bool,
                encodeSpecialCharacters: Sl().bool,
                htmlAttributes: Sl().object,
                link: Sl().arrayOf(Sl().object),
                meta: Sl().arrayOf(Sl().object),
                noscript: Sl().arrayOf(Sl().object),
                onChangeClientState: Sl().func,
                script: Sl().arrayOf(Sl().object),
                style: Sl().arrayOf(Sl().object),
                title: Sl().string,
                titleAttributes: Sl().object,
                titleTemplate: Sl().string
            }, _l.defaultProps = {
                defer: !0,
                encodeSpecialCharacters: !0
            }, _l.peek = wl.peek, _l.rewind = function() {
                var e = wl.rewind();
                return e || (e = mu({
                    baseTag: [],
                    bodyAttributes: {},
                    encodeSpecialCharacters: !0,
                    htmlAttributes: {},
                    linkTags: [],
                    metaTags: [],
                    noscriptTags: [],
                    scriptTags: [],
                    styleTags: [],
                    title: "",
                    titleAttributes: {}
                })), e
            }, xl);
        gu.renderStatic = gu.rewind;
        var yu = {
                title: "❤️",
                description: "Instantly remix your favorite tracks across tons of websites with this free browser extension."
            },
            bu = .8,
            wu = .4,
            _u = 2147483647,
            xu = "ABCD1234-E5F6G7H8-9012IJKL-3M4N5O6P";
        const Eu = function(t) {
            var n = t.title,
                r = void 0 === n ? "Make Slowed+Reverb, Sped Up, Daycore, and Nightcore Remixes" : n,
                o = t.description,
                i = void 0 === o ? "The easiest way to slow down, speed up, add reverb, and change the pitch of songs in a free, online generator." : o;
            return e.createElement(gu, null, e.createElement("title", null, r), e.createElement("meta", {
                name: "description",
                content: i
            }), e.createElement("meta", {
                property: "og:title",
                content: r
            }), e.createElement("meta", {
                property: "og:description",
                content: i
            }), e.createElement("meta", {
                property: "twitter:title",
                content: r
            }), e.createElement("meta", {
                property: "twitter:description",
                content: i
            }))
        };
        var Su = {
            "0.5x": 12,
            "1x": 24,
            "2x": 48
        };
        const ku = function(t) {
                var n = t.size,
                    r = Su[void 0 === n ? "1x" : n];
                return e.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    height: r,
                    viewBox: "0 -960 960 960",
                    width: r,
                    fill: "currentColor"
                }, e.createElement("path", {
                    d: "M480-80q-82 0-155-31.5t-127.5-86Q143-252 111.5-325T80-480q0-83 31.5-155.5t86-127Q252-817 325-848.5T480-880q17 0 28.5 11.5T520-840q0 17-11.5 28.5T480-800q-133 0-226.5 93.5T160-480q0 133 93.5 226.5T480-160q133 0 226.5-93.5T800-480q0-17 11.5-28.5T840-520q17 0 28.5 11.5T880-480q0 82-31.5 155t-86 127.5q-54.5 54.5-127 86T480-80Z"
                }))
            },
            Tu = function(t) {
                return e.createElement("span", {
                    className: "OGe07rXAblHKkLZdD9Vh"
                }, e.createElement(ku, t))
            };
        var Cu = o(703),
            Ou = o.n(Cu);
        const Au = function() {
                return e.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    height: "24px",
                    viewBox: "0 -960 960 960",
                    width: "24px",
                    fill: "currentColor"
                }, e.createElement("path", {
                    d: "m424-408-86-86q-11-11-28-11t-28 11q-11 11-11 28t11 28l114 114q12 12 28 12t28-12l226-226q11-11 11-28t-11-28q-11-11-28-11t-28 11L424-408Zm56 328q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Z"
                }))
            },
            Pu = function() {
                return e.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    height: "24px",
                    viewBox: "0 -960 960 960",
                    width: "24px",
                    fill: "currentColor"
                }, e.createElement("path", {
                    d: "m382-354 339-339q12-12 28-12t28 12q12 12 12 28.5T777-636L410-268q-12 12-28 12t-28-12L182-440q-12-12-11.5-28.5T183-497q12-12 28.5-12t28.5 12l142 143Z"
                }))
            },
            Ru = {
                button: "FyWNg9dmrY7mdYTbECrV",
                "button--is-disabled": "UqSipdrLfK3FjEf4VtON",
                "button--cta": "RtgfQWbH1Ud2w0S7NbK6",
                "background-wipe": "_mFY7d2tCaoCJ7uNYBE2",
                "button--primary": "hew8wU5dSqq5H1dr5lyD"
            },
            Mu = function(t) {
                var n = t.children,
                    r = t.onClick,
                    o = t.isDisabled,
                    i = t.to,
                    a = t.variant,
                    s = t.className,
                    l = t.shouldAppearDisabled,
                    u = void 0 === l ? o : l,
                    c = Ou()(Ru.button, s, u && Ru["button--is-disabled"], a && Ru["button--".concat(a)]);
                return i ? e.createElement(fl, {
                    to: i,
                    className: c,
                    onClick: !o && r
                }, n) : e.createElement("button", {
                    type: "button",
                    className: c,
                    onClick: function() {
                        return o || r()
                    },
                    "aria-disabled": o
                }, n)
            },
            Du = function(t) {
                var n = t.children,
                    r = t.onClick;
                return e.createElement("button", {
                    type: "button",
                    className: "y9sLhZH6ivkp_hOrKie0",
                    onClick: r
                }, n)
            };
        var Nu, Iu, Lu;
        const qu = "function" == typeof(null === (Nu = window.navigator.storage) || void 0 === Nu ? void 0 : Nu.getDirectory) && ("function" == typeof(null === (Iu = window.FileSystemFileHandle) || void 0 === Iu || null === (Lu = Iu.prototype) || void 0 === Lu ? void 0 : Lu.createWritable) || Boolean(window.Worker));
        var ju = "slowedandreverb.studio-site",
            Fu = "https://uounkdlleuaodzckcrba6ltkui0wvblj.lambda-url.us-east-2.on.aws/",
            Vu = function() {
                return /firefox/i.test(navigator.userAgent)
            };
        const Bu = function(e) {
                var t = (arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}).isBeforeExit,
                    n = void 0 !== t && t;
                if ("https://slowedandreverb.studio" === location.origin) {
                    var r = JSON.stringify({
                        "source@version": [ju, "3.3.0"].join("@"),
                        events: e
                    });
                    return n && Vu && navigator.sendBeacon ? navigator.sendBeacon(Fu, r) : fetch(Fu, {
                        keepalive: n,
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json"
                        },
                        body: r
                    }).catch((function(e) {
                        console.error(e)
                    }))
                }
            },
            zu = (0, e.createContext)(void 0),
            Uu = function() {
                return (0, e.useContext)(zu)
            },
            Wu = function(t) {
                var n = t.placeholder,
                    r = t.value,
                    o = t.onChange,
                    i = t.onKeyUp,
                    a = t.isReadOnly;
                return e.createElement("input", {
                    className: "zyZF4dh_lkSonCIqK2x8",
                    type: "text",
                    placeholder: n,
                    value: r || "",
                    onChange: o,
                    onKeyUp: i,
                    readOnly: a
                })
            },
            Hu = o.p + "6684ad4ef0c1354cd3a50484e04c1256.png",
            Gu = o.p + "7b3de42fe82155ed885eaf8e6c2fd379.png",
            Qu = o.p + "d4519116d70fa52a1151657ab65558db.png",
            Yu = {
                activate: "jcUvqjzAcvEfRRvYe7aU",
                activate__content: "E8IPPsMmijCYbsLCUnQM",
                activate__content__screenshots: "oN1bOmG7qd5nhQ5ljtrV",
                activate__content__screenshot: "sC1HAdJLBT9hWVWtENPT",
                "activate__content__screenshot--mobile-only": "KBXqRIfVG7E1xmhtOhbi",
                "activate__content__screenshot--desktop": "_7kb5uHLq7hhmr96eT9XQ",
                activate__content__info: "slTWfTLbS8HvKQDNaI75",
                activate__content__info__price: "sfhAoxFqGyX2c2UHymlv",
                activate__content__info__price__value: "aN_1DiERmSdHh27LJ9Oi",
                activate__content__info__price__period: "qS6YKXgVUoVsI_rVmGUg",
                activate__content__info__qualifier: "rSmbw5HRuAIlogslb8pg",
                "activate__content__info__qualifier__support--is-supported": "eyTCmUE5NBAv47O4lMmw",
                activate__content__info__cta: "m4fCnAvM5SNdkN_e5LX5",
                activate__content__info__cta__help: "VXP_3Cz8fJCsCR25nr9S",
                "activation-error": "Dgqibh4ZANh3lrMFbNTG",
                badge: "Os9Msi4sbqDgj1OUCzgy",
                "bonus-badge": "d4oUtsLpL_UX8V18cFN1",
                "beta-badge": "XROeVJwAJpSV0rDTzhcx"
            };

        function $u(e, t) {
            return function(e) {
                if (Array.isArray(e)) return e
            }(e) || function(e, t) {
                var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                if (null != n) {
                    var r, o, i, a, s = [],
                        l = !0,
                        u = !1;
                    try {
                        if (i = (n = n.call(e)).next, 0 === t) {
                            if (Object(n) !== n) return;
                            l = !1
                        } else
                            for (; !(l = (r = i.call(n)).done) && (s.push(r.value), s.length !== t); l = !0);
                    } catch (e) {
                        u = !0, o = e
                    } finally {
                        try {
                            if (!l && null != n.return && (a = n.return(), Object(a) !== a)) return
                        } finally {
                            if (u) throw o
                        }
                    }
                    return s
                }
            }(e, t) || function(e, t) {
                if (e) {
                    if ("string" == typeof e) return Zu(e, t);
                    var n = Object.prototype.toString.call(e).slice(8, -1);
                    return "Object" === n && e.constructor && (n = e.constructor.name), "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Zu(e, t) : void 0
                }
            }(e, t) || function() {
                throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
            }()
        }

        function Zu(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
            return r
        }
        var Xu = function(t) {
            var n = t.isMarked,
                r = t.children;
            return n ? e.createElement("mark", null, r) : e.createElement(e.Fragment, null, r)
        };
        const Ku = function() {
                var t = $u(vl(), 1)[0],
                    n = Is().state,
                    r = null == n ? void 0 : n.perkId,
                    o = Uu(),
                    i = o.pricing,
                    a = o.isFetching,
                    s = yl(),
                    l = s.isFetching,
                    u = s.isActive,
                    c = s.setLicenseKey,
                    h = s.licenseKey,
                    d = s.managementHref,
                    f = s.isCorrectFormat,
                    p = s.fetchFailure,
                    m = $u((0, e.useState)(h || ""), 2),
                    v = m[0],
                    g = m[1],
                    y = Boolean(h),
                    b = !l && y && !u,
                    w = (0, e.useState)(b || function(e) {
                        return e.has("enterKey") && "TRUE" === e.get("enterKey").toUpperCase()
                    }(t)),
                    _ = $u(w, 2),
                    x = _[0],
                    E = _[1],
                    S = function() {
                        v && c(v)
                    },
                    k = function() {
                        Bu([{
                            name: "checkout-start"
                        }], {
                            isBeforeExit: !0
                        })
                    };
                return e.createElement("div", {
                    className: Yu.activate
                }, e.createElement("h1", null, "SlowedAndReverb.Studio Pro"), e.createElement("div", {
                    className: Yu.activate__content
                }, e.createElement("div", {
                    className: Yu.activate__content__screenshots
                }, e.createElement("img", {
                    src: Hu,
                    className: Ou()(Yu.activate__content__screenshot, Yu["activate__content__screenshot--mobile"], Yu["activate__content__screenshot--mobile-only"])
                }), e.createElement("img", {
                    src: Qu,
                    className: Ou()(Yu.activate__content__screenshot, Yu["activate__content__screenshot--desktop"])
                }), e.createElement("img", {
                    src: Gu,
                    className: Ou()(Yu.activate__content__screenshot, Yu["activate__content__screenshot--mobile"])
                })), e.createElement("div", {
                    className: Yu.activate__content__info
                }, e.createElement("div", {
                    className: Yu.activate__content__info__price
                }, a ? e.createElement(Tu, null) : i && e.createElement(e.Fragment, null, e.createElement("div", {
                    className: Yu.activate__content__info__price__value
                }, "$", i.pro.priceUSD), e.createElement("div", {
                    className: Yu.activate__content__info__price__period
                }, "per month"))), e.createElement("ul", null, e.createElement("li", null, e.createElement(Au, null), e.createElement(Xu, {
                    isMarked: "multiple-remixes" === r
                }, "Create multiple remixes at once")), e.createElement("li", null, e.createElement(Au, null), e.createElement(Xu, {
                    isMarked: "precise-controls" === r
                }, "Use precise remix controls")), e.createElement("li", null, e.createElement(Au, null), e.createElement(Xu, {
                    isMarked: "mp3-downloads" === r
                }, "Download MP3 and WAV files")), e.createElement("li", null, e.createElement(Au, null), e.createElement("span", null, e.createElement(Xu, {
                    isMarked: "independent-pitch" === r
                }, "Change pitch and speed separately"), e.createElement("span", {
                    className: [Yu["beta-badge"], Yu.badge].join(" ")
                }, "Beta"))), e.createElement("li", null, e.createElement(Au, null), e.createElement(Xu, {
                    isMarked: "eq" === r
                }, "Boost bass")), e.createElement("li", null, e.createElement(Au, null), e.createElement(Xu, {
                    isMarked: "trim" === r
                }, "Trim remix start and end")), e.createElement("li", null, e.createElement(Au, null), "Automatically save remixes in the app*"), e.createElement("li", null, e.createElement(Au, null), e.createElement(Xu, {
                    isMarked: "custom-defaults" === r
                }, "Set custom default settings for remixes")), e.createElement("li", null, e.createElement(Au, null), "No ads"), e.createElement("li", null, e.createElement(Au, null), e.createElement(Xu, {
                    isMarked: "dark-theme" === r
                }, "Dark theme")), e.createElement("li", null, e.createElement(Au, null), e.createElement("span", null, e.createElement("span", {
                    className: [Yu["bonus-badge"], Yu.badge].join(" ")
                }, "Bonus!"), " ", "Includes Pro ", e.createElement(dl, {
                    to: "/extension"
                }, "browser extension")))), e.createElement("div", {
                    className: Yu.activate__content__info__qualifier
                }, "* In-app storage supported in most modern browsers", qu ? e.createElement(e.Fragment, null, ",", " ", e.createElement("span", {
                    className: Yu["activate__content__info__qualifier__support--is-supported"]
                }, "like the one you're using now.", e.createElement(Pu, null))) : "."), e.createElement("div", {
                    className: Yu.activate__content__info__cta
                }, x ? e.createElement(e.Fragment, null, e.createElement("div", {
                    className: Yu.activate__content__info__cta__help
                }, "Paste your license key below and press the button to unlock SlowedAndReverb.Studio Pro."), e.createElement(Wu, {
                    placeholder: "License key...",
                    value: v,
                    onKeyUp: function(e) {
                        "Enter" === e.key && S()
                    },
                    onChange: function(e) {
                        g(e.target.value.trim().split(" ").filter((function(e) {
                            return e
                        })).join("").toUpperCase())
                    }
                }), e.createElement(Mu, {
                    onClick: function() {
                        S()
                    },
                    isDisabled: !v,
                    variant: "primary"
                }, l ? "Checking your key..." : "Unlock with license key"), b && e.createElement("div", {
                    className: Yu["activation-error"],
                    ref: function(e) {
                        setTimeout((function() {
                            null == e || e.scrollIntoView()
                        }), 50)
                    }
                }, !f && e.createElement(e.Fragment, null, "Sorry, that doesn't look like a license key. License keys look like this:", e.createElement("br", null), xu), f && h === xu && "lmao, nice try. You'll need to get your own license key.", f && h !== xu && p && e.createElement(e.Fragment, null, "We're having trouble verifying your license key. Please ensure you have access to the internet from this device and try again in a few minutes. If the issue persists, contact", " ", e.createElement("a", {
                    href: "mailto:support@slowedandreverb.studio"
                }, "support@slowedandreverb.studio"), "."), f && h !== xu && !p && e.createElement(e.Fragment, null, "Sorry, we couldn't verify that license key. If it's new, please try again in a few minutes. If you purchased this key but can't unlock Pro features, send an email to", " ", e.createElement("a", {
                    href: "mailto:support@slowedandreverb.studio"
                }, "support@slowedandreverb.studio"), ".")), d && e.createElement("a", {
                    href: d
                }, "Manage subscription"), e.createElement("a", {
                    href: "/",
                    onClick: k
                }, "Get a license key for SlowedAndReverb.Studio Pro")) : e.createElement(e.Fragment, null, e.createElement("div", {
                    className: Yu.activate__content__info__cta__help
                }, "You'll receive a license key that unlocks the Pro versions of SlowedAndReverb.Studio and the", " ", e.createElement(dl, {
                    to: "/extension"
                }, "browser extension."), " Cancel anytime."), e.createElement(Mu, {
                    to: "/",
                    onClick: k,
                    variant: "primary"
                }, "Get SlowedAndReverb.Studio Pro"), e.createElement(Du, {
                    onClick: function() {
                        E(!0)
                    }
                }, "I already have a Pro license key"))))))
            },
            Ju = function() {
                var t = yl(),
                    n = t.isFetching,
                    r = t.isActive,
                    o = t.licenseKey,
                    i = Boolean(o),
                    a = !n && i && !r;
                return e.createElement(e.Fragment, null, e.createElement(Eu, {
                    title: "Slowed+Reverb/Sped Up/Nightcore Player & Batch Remixer",
                    description: "Play and remix an entire playlist with configurable speed and reverb for each track. Download as WAV or MP3."
                }), e.createElement("div", {
                    className: "XzFtAaxr5BQyDexhdEWQ"
                }, n || !i || a ? e.createElement("div", {
                    className: "JJi0KqKEPBib7GFdisF1"
                }, n ? e.createElement(Tu, null) : e.createElement(Ku, null)) : e.createElement($s, {
                    to: "/",
                    replace: !0
                })))
            },
            ec = function() {
                return e.createElement("div", {
                    className: "m0fCbmHs9Q_v57eC0cX0"
                }, e.createElement("h1", null, "Privacy Policy"), e.createElement("h4", null, "Last update: January 10, 2024"), e.createElement("h2", null, "1. Information We Collect"), e.createElement("p", null, "We collect usage data to improve the user experience on SlowedAndReverb.Studio. This data may include non-personal information such as IP addresses, browser information, and interactions with the website."), e.createElement("p", null, "SlowedAndReverb.Studio does ", e.createElement("b", null, "not"), " collect identifiable information related to the files you grant access to, such as audio data or filenames."), e.createElement("h2", null, "2. Third-Party Advertising & Cookie Usage"), e.createElement("p", null, "SlowedAndReverb.Studio may display advertisements using Google AdSense. This means that third-party vendors, including Google, may use cookies to serve ads based on your prior visits to this and other sites on the internet. You can opt out of personalized advertising by updating your", " ", e.createElement("a", {
                    href: "https://www.google.com/settings/ads"
                }, "Ads Settings"), " with Google, or by visiting", " ", e.createElement("a", {
                    href: "http://www.aboutads.info/choices/"
                }, "www.aboutads.info"), "."), e.createElement("h2", null, "3. Third-Party Links"), e.createElement("p", null, "Our website may contain links to third-party websites. We are not responsible for the privacy practices or content of these third-party sites. We encourage you to review the privacy policies of these websites before providing any personal information."), e.createElement("h2", null, "4. Security"), e.createElement("p", null, "We take reasonable precautions to protect the information collected on SlowedAndReverb.Studio. However, no method of transmission over the internet or electronic storage is completely secure. Therefore, we cannot guarantee absolute security."), e.createElement("h2", null, "5. Changes to this Privacy Policy"), e.createElement("p", null, "We may update our Privacy Policy from time to time. Any changes will be posted on this page, and the date of the latest revision will be indicated at the top of the page."), e.createElement("hr", null), e.createElement("p", null, "By using SlowedAndReverb.Studio, you agree to the terms outlined in this Privacy Policy."))
            },
            tc = o.p + "7571664c3428780efc0b7116fad31882.png",
            nc = {
                "blog-post": "OIzI3sjdPOjacmJIztTV",
                "blog-post__screenshot": "Xgpx677t8JWcd4Xe3Se6"
            },
            rc = function(t) {
                var n = t.title,
                    r = t.pageTitle,
                    o = t.pageDescription,
                    i = t.children;
                return e.createElement(e.Fragment, null, e.createElement(Eu, {
                    title: r,
                    description: o
                }), e.createElement("div", {
                    className: nc["blog-post"]
                }, e.createElement(dl, {
                    to: "/"
                }, e.createElement("img", {
                    src: tc,
                    alt: "Cover image for SlowedAndReverb.Studio"
                })), e.createElement("h1", {
                    className: nc["blog-post__title"]
                }, n), i))
            },
            oc = function() {
                return e.createElement(rc, {
                    title: "How To Make Slowed+Reverb and Daycore Music",
                    pageTitle: "How To Make Slowed+Reverb Music (No App Required)",
                    pageDescription: "This tutorial shows the easiest way to make slowed+reverb/daycore tracks for free without any programs or apps to download."
                }, e.createElement("p", null, e.createElement("i", null, "Want to make sped up/nightcore music instead?", " ", e.createElement(dl, {
                    to: "/blog/sped-up-nightcore-tutorial"
                }, "Click here."))), e.createElement("h3", null, "What you'll need"), e.createElement("ul", null, e.createElement("li", null, 'An audio file with the song you want to slow down and add reverb to, in MP3 or WAV format (the name should end with ".mp3" or ".wav").')), e.createElement("h3", null, "Steps"), e.createElement("ol", null, e.createElement("li", null, "Go to", " ", e.createElement(dl, {
                    to: "/",
                    target: "_blank"
                }, "SlowedAndReverb.Studio"), " ", "(opens in a new tab) and add your audio file."), e.createElement("li", null, "Hit play. The track will play slower and with added reverb, and you can adjust the playback speed and reverb amount using the sliders."), e.createElement("li", null, "(Optional) When you like the way it sounds, save your remix as an audio file.")))
            },
            ic = function() {
                return e.createElement(rc, {
                    title: "How To Speed Up Music and Make Nightcore",
                    pageTitle: "How To Speed Up Music and Make Nightcore (No App Required)",
                    pageDescription: "This tutorial explains the easiest way to make sped up/nightcore songs for free without downloading any programs or apps."
                }, e.createElement("p", null, e.createElement("i", null, "Want to make slowed+reverb/daycore music instead?", " ", e.createElement(dl, {
                    to: "/blog/slowed-reverb-tutorial"
                }, "Click here."))), e.createElement("h3", null, "What you'll need"), e.createElement("ul", null, e.createElement("li", null, 'An audio file with the song you want to speed up, in MP3 or WAV format (the name should end with ".mp3" or ".wav").')), e.createElement("h3", null, "Steps"), e.createElement("ol", null, e.createElement("li", null, "Go to", " ", e.createElement(dl, {
                    to: "/nightcore",
                    target: "_blank"
                }, "SlowedAndReverb.Studio/nightcore"), " ", "(opens in a new tab) and add your audio file."), e.createElement("li", null, "Hit play. The track will play faster than normal, but you can adjust the speed using the slider. You can also add reverb if you'd like."), e.createElement("li", null, "(Optional) When you like the way it sounds, save your remix as an audio file.")))
            };

        function ac(e) {
            return ac = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                return typeof e
            } : function(e) {
                return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
            }, ac(e)
        }

        function sc() {
            sc = function() {
                return e
            };
            var e = {},
                t = Object.prototype,
                n = t.hasOwnProperty,
                r = Object.defineProperty || function(e, t, n) {
                    e[t] = n.value
                },
                o = "function" == typeof Symbol ? Symbol : {},
                i = o.iterator || "@@iterator",
                a = o.asyncIterator || "@@asyncIterator",
                s = o.toStringTag || "@@toStringTag";

            function l(e, t, n) {
                return Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }), e[t]
            }
            try {
                l({}, "")
            } catch (e) {
                l = function(e, t, n) {
                    return e[t] = n
                }
            }

            function u(e, t, n, o) {
                var i = t && t.prototype instanceof d ? t : d,
                    a = Object.create(i.prototype),
                    s = new k(o || []);
                return r(a, "_invoke", {
                    value: _(e, n, s)
                }), a
            }

            function c(e, t, n) {
                try {
                    return {
                        type: "normal",
                        arg: e.call(t, n)
                    }
                } catch (e) {
                    return {
                        type: "throw",
                        arg: e
                    }
                }
            }
            e.wrap = u;
            var h = {};

            function d() {}

            function f() {}

            function p() {}
            var m = {};
            l(m, i, (function() {
                return this
            }));
            var v = Object.getPrototypeOf,
                g = v && v(v(T([])));
            g && g !== t && n.call(g, i) && (m = g);
            var y = p.prototype = d.prototype = Object.create(m);

            function b(e) {
                ["next", "throw", "return"].forEach((function(t) {
                    l(e, t, (function(e) {
                        return this._invoke(t, e)
                    }))
                }))
            }

            function w(e, t) {
                function o(r, i, a, s) {
                    var l = c(e[r], e, i);
                    if ("throw" !== l.type) {
                        var u = l.arg,
                            h = u.value;
                        return h && "object" == ac(h) && n.call(h, "__await") ? t.resolve(h.__await).then((function(e) {
                            o("next", e, a, s)
                        }), (function(e) {
                            o("throw", e, a, s)
                        })) : t.resolve(h).then((function(e) {
                            u.value = e, a(u)
                        }), (function(e) {
                            return o("throw", e, a, s)
                        }))
                    }
                    s(l.arg)
                }
                var i;
                r(this, "_invoke", {
                    value: function(e, n) {
                        function r() {
                            return new t((function(t, r) {
                                o(e, n, t, r)
                            }))
                        }
                        return i = i ? i.then(r, r) : r()
                    }
                })
            }

            function _(e, t, n) {
                var r = "suspendedStart";
                return function(o, i) {
                    if ("executing" === r) throw new Error("Generator is already running");
                    if ("completed" === r) {
                        if ("throw" === o) throw i;
                        return {
                            value: void 0,
                            done: !0
                        }
                    }
                    for (n.method = o, n.arg = i;;) {
                        var a = n.delegate;
                        if (a) {
                            var s = x(a, n);
                            if (s) {
                                if (s === h) continue;
                                return s
                            }
                        }
                        if ("next" === n.method) n.sent = n._sent = n.arg;
                        else if ("throw" === n.method) {
                            if ("suspendedStart" === r) throw r = "completed", n.arg;
                            n.dispatchException(n.arg)
                        } else "return" === n.method && n.abrupt("return", n.arg);
                        r = "executing";
                        var l = c(e, t, n);
                        if ("normal" === l.type) {
                            if (r = n.done ? "completed" : "suspendedYield", l.arg === h) continue;
                            return {
                                value: l.arg,
                                done: n.done
                            }
                        }
                        "throw" === l.type && (r = "completed", n.method = "throw", n.arg = l.arg)
                    }
                }
            }

            function x(e, t) {
                var n = t.method,
                    r = e.iterator[n];
                if (void 0 === r) return t.delegate = null, "throw" === n && e.iterator.return && (t.method = "return", t.arg = void 0, x(e, t), "throw" === t.method) || "return" !== n && (t.method = "throw", t.arg = new TypeError("The iterator does not provide a '" + n + "' method")), h;
                var o = c(r, e.iterator, t.arg);
                if ("throw" === o.type) return t.method = "throw", t.arg = o.arg, t.delegate = null, h;
                var i = o.arg;
                return i ? i.done ? (t[e.resultName] = i.value, t.next = e.nextLoc, "return" !== t.method && (t.method = "next", t.arg = void 0), t.delegate = null, h) : i : (t.method = "throw", t.arg = new TypeError("iterator result is not an object"), t.delegate = null, h)
            }

            function E(e) {
                var t = {
                    tryLoc: e[0]
                };
                1 in e && (t.catchLoc = e[1]), 2 in e && (t.finallyLoc = e[2], t.afterLoc = e[3]), this.tryEntries.push(t)
            }

            function S(e) {
                var t = e.completion || {};
                t.type = "normal", delete t.arg, e.completion = t
            }

            function k(e) {
                this.tryEntries = [{
                    tryLoc: "root"
                }], e.forEach(E, this), this.reset(!0)
            }

            function T(e) {
                if (e) {
                    var t = e[i];
                    if (t) return t.call(e);
                    if ("function" == typeof e.next) return e;
                    if (!isNaN(e.length)) {
                        var r = -1,
                            o = function t() {
                                for (; ++r < e.length;)
                                    if (n.call(e, r)) return t.value = e[r], t.done = !1, t;
                                return t.value = void 0, t.done = !0, t
                            };
                        return o.next = o
                    }
                }
                return {
                    next: C
                }
            }

            function C() {
                return {
                    value: void 0,
                    done: !0
                }
            }
            return f.prototype = p, r(y, "constructor", {
                value: p,
                configurable: !0
            }), r(p, "constructor", {
                value: f,
                configurable: !0
            }), f.displayName = l(p, s, "GeneratorFunction"), e.isGeneratorFunction = function(e) {
                var t = "function" == typeof e && e.constructor;
                return !!t && (t === f || "GeneratorFunction" === (t.displayName || t.name))
            }, e.mark = function(e) {
                return Object.setPrototypeOf ? Object.setPrototypeOf(e, p) : (e.__proto__ = p, l(e, s, "GeneratorFunction")), e.prototype = Object.create(y), e
            }, e.awrap = function(e) {
                return {
                    __await: e
                }
            }, b(w.prototype), l(w.prototype, a, (function() {
                return this
            })), e.AsyncIterator = w, e.async = function(t, n, r, o, i) {
                void 0 === i && (i = Promise);
                var a = new w(u(t, n, r, o), i);
                return e.isGeneratorFunction(n) ? a : a.next().then((function(e) {
                    return e.done ? e.value : a.next()
                }))
            }, b(y), l(y, s, "Generator"), l(y, i, (function() {
                return this
            })), l(y, "toString", (function() {
                return "[object Generator]"
            })), e.keys = function(e) {
                var t = Object(e),
                    n = [];
                for (var r in t) n.push(r);
                return n.reverse(),
                    function e() {
                        for (; n.length;) {
                            var r = n.pop();
                            if (r in t) return e.value = r, e.done = !1, e
                        }
                        return e.done = !0, e
                    }
            }, e.values = T, k.prototype = {
                constructor: k,
                reset: function(e) {
                    if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(S), !e)
                        for (var t in this) "t" === t.charAt(0) && n.call(this, t) && !isNaN(+t.slice(1)) && (this[t] = void 0)
                },
                stop: function() {
                    this.done = !0;
                    var e = this.tryEntries[0].completion;
                    if ("throw" === e.type) throw e.arg;
                    return this.rval
                },
                dispatchException: function(e) {
                    if (this.done) throw e;
                    var t = this;

                    function r(n, r) {
                        return a.type = "throw", a.arg = e, t.next = n, r && (t.method = "next", t.arg = void 0), !!r
                    }
                    for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                        var i = this.tryEntries[o],
                            a = i.completion;
                        if ("root" === i.tryLoc) return r("end");
                        if (i.tryLoc <= this.prev) {
                            var s = n.call(i, "catchLoc"),
                                l = n.call(i, "finallyLoc");
                            if (s && l) {
                                if (this.prev < i.catchLoc) return r(i.catchLoc, !0);
                                if (this.prev < i.finallyLoc) return r(i.finallyLoc)
                            } else if (s) {
                                if (this.prev < i.catchLoc) return r(i.catchLoc, !0)
                            } else {
                                if (!l) throw new Error("try statement without catch or finally");
                                if (this.prev < i.finallyLoc) return r(i.finallyLoc)
                            }
                        }
                    }
                },
                abrupt: function(e, t) {
                    for (var r = this.tryEntries.length - 1; r >= 0; --r) {
                        var o = this.tryEntries[r];
                        if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                            var i = o;
                            break
                        }
                    }
                    i && ("break" === e || "continue" === e) && i.tryLoc <= t && t <= i.finallyLoc && (i = null);
                    var a = i ? i.completion : {};
                    return a.type = e, a.arg = t, i ? (this.method = "next", this.next = i.finallyLoc, h) : this.complete(a)
                },
                complete: function(e, t) {
                    if ("throw" === e.type) throw e.arg;
                    return "break" === e.type || "continue" === e.type ? this.next = e.arg : "return" === e.type ? (this.rval = this.arg = e.arg, this.method = "return", this.next = "end") : "normal" === e.type && t && (this.next = t), h
                },
                finish: function(e) {
                    for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                        var n = this.tryEntries[t];
                        if (n.finallyLoc === e) return this.complete(n.completion, n.afterLoc), S(n), h
                    }
                },
                catch: function(e) {
                    for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                        var n = this.tryEntries[t];
                        if (n.tryLoc === e) {
                            var r = n.completion;
                            if ("throw" === r.type) {
                                var o = r.arg;
                                S(n)
                            }
                            return o
                        }
                    }
                    throw new Error("illegal catch attempt")
                },
                delegateYield: function(e, t, n) {
                    return this.delegate = {
                        iterator: T(e),
                        resultName: t,
                        nextLoc: n
                    }, "next" === this.method && (this.arg = void 0), h
                }
            }, e
        }

        function lc(e, t, n, r, o, i, a) {
            try {
                var s = e[i](a),
                    l = s.value
            } catch (e) {
                return void n(e)
            }
            s.done ? t(l) : Promise.resolve(l).then(r, o)
        }
        var uc = function(e) {
            return new Promise((function(t) {
                return setTimeout(t, e)
            }))
        };
        const cc = function e(t) {
            var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 2,
                r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 500;
            return fetch("https://api.gumroad.com/v2/licenses/verify", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    product_id: "wkv8pA33JKzo8MO7OLibfQ==",
                    license_key: t,
                    increment_uses_count: "localhost" !== window.location.hostname
                })
            }).then((function(e) {
                return e.ok && e.json()
            })).catch(function() {
                var o = function(e) {
                    return function() {
                        var t = this,
                            n = arguments;
                        return new Promise((function(r, o) {
                            var i = e.apply(t, n);

                            function a(e) {
                                lc(i, r, o, a, s, "next", e)
                            }

                            function s(e) {
                                lc(i, r, o, a, s, "throw", e)
                            }
                            a(void 0)
                        }))
                    }
                }(sc().mark((function o(i) {
                    return sc().wrap((function(o) {
                        for (;;) switch (o.prev = o.next) {
                            case 0:
                                if (!(n <= 0)) {
                                    o.next = 3;
                                    break
                                }
                                throw console.error(i), i;
                            case 3:
                                return o.next = 5, uc(r);
                            case 5:
                                return o.abrupt("return", e(t, n - 1, 3 * r));
                            case 6:
                            case "end":
                                return o.stop()
                        }
                    }), o)
                })));
                return function(e) {
                    return o.apply(this, arguments)
                }
            }())
        };
        var hc = function(e) {
                try {
                    var t;
                    return null === (t = window.localStorage) || void 0 === t ? void 0 : t.getItem(e)
                } catch (e) {
                    return console.error(e), null
                }
            },
            dc = function(e, t) {
                try {
                    var n;
                    return null === (n = window.localStorage) || void 0 === n ? void 0 : n.setItem(e, t)
                } catch (e) {
                    return console.error(e), null
                }
            },
            fc = "licenseKey";

        function pc(e, t) {
            return function(e) {
                if (Array.isArray(e)) return e
            }(e) || function(e, t) {
                var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                if (null != n) {
                    var r, o, i, a, s = [],
                        l = !0,
                        u = !1;
                    try {
                        if (i = (n = n.call(e)).next, 0 === t) {
                            if (Object(n) !== n) return;
                            l = !1
                        } else
                            for (; !(l = (r = i.call(n)).done) && (s.push(r.value), s.length !== t); l = !0);
                    } catch (e) {
                        u = !0, o = e
                    } finally {
                        try {
                            if (!l && null != n.return && (a = n.return(), Object(a) !== a)) return
                        } finally {
                            if (u) throw o
                        }
                    }
                    return s
                }
            }(e, t) || function(e, t) {
                if (e) {
                    if ("string" == typeof e) return mc(e, t);
                    var n = Object.prototype.toString.call(e).slice(8, -1);
                    return "Object" === n && e.constructor && (n = e.constructor.name), "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? mc(e, t) : void 0
                }
            }(e, t) || function() {
                throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
            }()
        }

        function mc(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
            return r
        }
        var vc = "licensekey";
        const gc = "bkLeEYaNW8og4XGPdgM9";
        var yc = function(t) {
            var n = t.title,
                r = t.summary,
                o = t.path;
            return e.createElement(dl, {
                to: o,
                className: "fLjX8KA3GkbNV_uelgHl"
            }, e.createElement("div", {
                className: "nZqkUY99OzYBC4LiQHTN"
            }, n), e.createElement("div", {
                className: "PE14G8nb2V8QQ1a7PIAl"
            }, r))
        };
        const bc = function() {
                return e.createElement("div", {
                    className: "vGWVsY4S5hcPt1x2rXhm"
                }, e.createElement("h1", null, "Posts"), e.createElement("ul", {
                    className: "m3TBp_W4jdrrMQ_6tzRv"
                }, e.createElement("li", {
                    className: gc
                }, e.createElement(yc, {
                    path: "/blog/slowed-reverb-tutorial",
                    title: "How To Make Slowed+Reverb and Daycore Music",
                    summary: "This guide explains how to make slowed+reverb and daycore music without any extra apps or programs."
                })), e.createElement("li", {
                    className: gc
                }, e.createElement(yc, {
                    path: "/blog/sped-up-nightcore-tutorial",
                    title: "How To Speed Up Music and Make Nightcore",
                    summary: "This guide explains how to speed up music and make nightcore without any extra apps or programs."
                }))))
            },
            wc = {
                "version-badge": "mGIDCV4c_Utm8qEAJEwW",
                "version-badge--pro": "dh6oxzn9aPi_aFCj3wlL",
                "version-badge--is-previewing": "BmHjh0Ors5QFoqzFPBbB",
                emphasize: "Ns_Kkcx6_cHCqEgGbhJB",
                "version-badge--free": "JgVmFtQrR3KulYrVTBBh",
                "bonus-badge": "btboqEkpDoPkxKja0S1Y"
            };
        var _c = function(t) {
                var n = t.badgeClass,
                    r = t.label;
                return e.createElement("span", {
                    className: [wc["version-badge"], n].join(" ")
                }, r)
            },
            xc = function() {
                return e.createElement(_c, {
                    badgeClass: wc["version-badge--free"],
                    label: "Free"
                })
            },
            Ec = function(t) {
                var n = t.isPreviewing,
                    r = void 0 !== n && n;
                return e.createElement(_c, {
                    badgeClass: Ou()(wc["version-badge--pro"], r && wc["version-badge--is-previewing"]),
                    label: "Pro"
                })
            },
            Sc = function() {
                return e.createElement("span", {
                    className: wc["bonus-badge"]
                }, "Bonus!")
            },
            kc = function(t) {
                var n = t.date,
                    r = t.children;
                return e.createElement("div", {
                    className: "yFn2vrZjKtIHAal55E2g"
                }, e.createElement("div", {
                    className: "oIh89pq3GEEw1MxXgs4V"
                }, n), e.createElement("ul", {
                    className: "mJgvRQhrzXDHi27klhAk"
                }, r))
            },
            Tc = function(t) {
                var n = t.children;
                return e.createElement("li", null, n)
            };
        const Cc = "jvEtldVZITPka4pu8He7";
        var Oc = function(t) {
                var n = t.children;
                return e.createElement("ul", null, n)
            },
            Ac = function(t) {
                var n = t.children;
                return e.createElement("li", null, e.createElement(Au, null), n)
            },
            Pc = function(t) {
                var n = t.children;
                return e.createElement("div", {
                    className: "f3dODDXBg8zZKAl8jUEq"
                }, n)
            },
            Rc = function(t) {
                var n = t.children;
                return e.createElement("div", {
                    className: "KK4AEUgctdn7XXYYdklk"
                }, n)
            };
        const Mc = function(t) {
                var n = t.children,
                    r = t.hasPrice,
                    o = void 0 === r || r,
                    i = Uu(),
                    a = i.pricing,
                    s = i.isFetching;
                return e.createElement("div", {
                    className: "iIdci_e5yx_GnGYYoMHU"
                }, o && (s ? e.createElement(Tu, null) : a && e.createElement("div", {
                    className: "K6Xz8LcU3qpTSFXIktQ9"
                }, e.createElement("div", {
                    className: "yF18EYjwRPyYmASHuK38"
                }, "$", a.pro.priceUSD), e.createElement("div", {
                    className: "hvyoaGrfVyHqIHDI_ueM"
                }, "per month"))), n)
            },
            Dc = o.p + "f8f87f1079c779b3de3822f9eab2844c.png",
            Nc = o.p + "1506b4e1efe96420be5b1f190e528d18.png",
            Ic = o.p + "256ae970c147bf248988da8dd58ce8e9.png",
            Lc = o.p + "75319a20b3430744784f4971707e2c38.png",
            qc = "zzW_g8pjXNG39A0Svbfw",
            jc = "_yuffYfRSsnXcL5Ja31E",
            Fc = "O1Kv0Otyrl0OWcUevJyF",
            Vc = "TnPg_S__iPf3Q5Jbdtia",
            Bc = "nBZ2y34CM8PRo0AsCeJS",
            zc = function() {
                var t = yl().isActive;
                return e.createElement(e.Fragment, null, e.createElement(Eu, yu), e.createElement("div", {
                    className: "dKH136df4U8pP69jB1ff"
                }, e.createElement("section", {
                    className: qc
                }, e.createElement("div", {
                    className: Fc
                }, e.createElement("h1", {
                    className: Vc
                }, "The SlowedAndReverb.Studio Browser Extension"), e.createElement("div", {
                    className: jc
                }, e.createElement("img", {
                    className: Bc,
                    src: Dc
                }), e.createElement("div", null, e.createElement("p", null, "Instantly remix your favorite tracks on other websites."), e.createElement("p", null, "Download and use for free."), e.createElement("div", {
                    className: "s3LJMMobSXqsCc7WKijF"
                }, e.createElement("a", {
                    href: "https://chromewebstore.google.com/detail/slowedandreverbstudio/flphhdfbcpebbehnmphjoaoffhgcjafi"
                }, e.createElement("img", {
                    src: Nc
                })), e.createElement("a", {
                    href: "https://addons.mozilla.org/firefox/addon/slowedandreverb-studio"
                }, e.createElement("img", {
                    src: Ic
                }))))))), e.createElement("section", {
                    id: "pro",
                    className: Ou()(qc, "toYpzyOhc3TctswjvOV5")
                }, e.createElement("div", {
                    className: Fc
                }, e.createElement("h1", {
                    className: Vc
                }, "Do more with Pro"), e.createElement("p", null, t ? "Unlock Pro features when you add your license key to the SlowedAndReverb.Studio extension." : "Unlock extra features when you upgrade to SlowedAndReverb.Studio Pro."), e.createElement("div", {
                    className: jc
                }, e.createElement("img", {
                    className: Bc,
                    src: Lc
                }), e.createElement(Mc, {
                    hasPrice: !t
                }, e.createElement(Oc, null, e.createElement(Ac, null, "Create custom presets"), e.createElement(Ac, null, "Use precise speed & reverb controls"), e.createElement(Ac, null, "Set custom default settings"), e.createElement(Ac, null, "Keep original pitch with different speeds"), e.createElement(Ac, null, "Dark theme"), !t && e.createElement(Ac, null, e.createElement("span", null, e.createElement(Sc, null), " Remix files in the", " ", e.createElement(dl, {
                    to: "/pro"
                }, "Pro web app")))), !t && e.createElement(Pc, null, e.createElement(Rc, null, "You'll receive a license key that unlocks the Pro versions of the browser extension and the", " ", e.createElement(dl, {
                    to: "/pro"
                }, "web app"), ". Cancel anytime."), e.createElement(Mu, {
                    to: "".concat("/", "&referrer=https://browserextension.slowedandreverb.studio"),
                    onClick: function() {
                        Bu([{
                            name: "checkout-start"
                        }], {
                            isBeforeExit: !0
                        })
                    },
                    variant: "primary"
                }, "Get SlowedAndReverb.Studio Pro"))))))))
            };

        function Uc(e, t) {
            return function(e) {
                if (Array.isArray(e)) return e
            }(e) || function(e, t) {
                var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                if (null != n) {
                    var r, o, i, a, s = [],
                        l = !0,
                        u = !1;
                    try {
                        if (i = (n = n.call(e)).next, 0 === t) {
                            if (Object(n) !== n) return;
                            l = !1
                        } else
                            for (; !(l = (r = i.call(n)).done) && (s.push(r.value), s.length !== t); l = !0);
                    } catch (e) {
                        u = !0, o = e
                    } finally {
                        try {
                            if (!l && null != n.return && (a = n.return(), Object(a) !== a)) return
                        } finally {
                            if (u) throw o
                        }
                    }
                    return s
                }
            }(e, t) || function(e, t) {
                if (e) {
                    if ("string" == typeof e) return Wc(e, t);
                    var n = Object.prototype.toString.call(e).slice(8, -1);
                    return "Object" === n && e.constructor && (n = e.constructor.name), "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Wc(e, t) : void 0
                }
            }(e, t) || function() {
                throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
            }()
        }

        function Wc(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
            return r
        }
        const Hc = (0, e.createContext)([{
                remixes: [],
                pendingRenderCount: 0,
                renderedRemixCount: 0,
                gain: .9,
                loopMode: "all",
                defaults: {
                    playbackRate: bu,
                    reverbWetMix: wu,
                    lowBandDecibels: 0
                },
                preferences: {
                    dropdownChoiceCache: {}
                }
            }, function() {}]),
            Gc = function() {
                return (0, e.useContext)(Hc)
            };
        var Qc, Yc = function(e) {
            return "number" == typeof e.currentRemixIndex
        };
        ! function(e) {
            e[e.AppendRemixes = 0] = "AppendRemixes", e[e.DecodeSuccess = 1] = "DecodeSuccess", e[e.DecodeFailure = 2] = "DecodeFailure", e[e.Play = 3] = "Play", e[e.Pause = 4] = "Pause", e[e.SkipNext = 5] = "SkipNext", e[e.SkipPrevious = 6] = "SkipPrevious", e[e.ChangePlaybackRate = 7] = "ChangePlaybackRate", e[e.ChangeReverbWetMix = 8] = "ChangeReverbWetMix", e[e.IncrementPlaybackTime = 9] = "IncrementPlaybackTime", e[e.Seek = 10] = "Seek", e[e.PlaybackFinished = 11] = "PlaybackFinished", e[e.StartRendering = 12] = "StartRendering", e[e.RemixRendered = 13] = "RemixRendered", e[e.RemixRenderingFailed = 14] = "RemixRenderingFailed", e[e.RemoveRemix = 15] = "RemoveRemix", e[e.RemoveAllRemixes = 16] = "RemoveAllRemixes", e[e.ChangeAll = 17] = "ChangeAll", e[e.ChangeGain = 18] = "ChangeGain", e[e.ChangeLoopMode = 19] = "ChangeLoopMode", e[e.SetDefaults = 20] = "SetDefaults", e[e.SetRemixes = 21] = "SetRemixes", e[e.ReplaceState = 22] = "ReplaceState", e[e.ChangeRemixSettings = 23] = "ChangeRemixSettings", e[e.ChangeTargetPitchFrequencyRatio = 24] = "ChangeTargetPitchFrequencyRatio", e[e.SelectDropdownOption = 25] = "SelectDropdownOption", e[e.PutRemix = 26] = "PutRemix", e[e.ChangeStartOffsetSeconds = 27] = "ChangeStartOffsetSeconds", e[e.ChangeEndOffsetSeconds = 28] = "ChangeEndOffsetSeconds", e[e.StartTrim = 29] = "StartTrim", e[e.StopTrim = 30] = "StopTrim", e[e.EndProPreview = 31] = "EndProPreview", e[e.ChangeLowBandDecibels = 32] = "ChangeLowBandDecibels"
        }(Qc || (Qc = {}));
        const $c = function(e) {
                if (Yc(e)) return e.remixes[e.currentRemixIndex]
            },
            Zc = function(e) {
                return e.pendingRenderCount > 0
            },
            Xc = function() {
                return e.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    height: "24",
                    viewBox: "0 -960 960 960",
                    width: "24",
                    fill: "currentColor"
                }, e.createElement("path", {
                    d: "M200-120q-33 0-56.5-23.5T120-200v-560q0-33 23.5-56.5T200-840h240q17 0 28.5 11.5T480-800q0 17-11.5 28.5T440-760H200v560h560v-240q0-17 11.5-28.5T800-480q17 0 28.5 11.5T840-440v240q0 33-23.5 56.5T760-120H200Zm560-584L416-360q-11 11-28 11t-28-11q-11-11-11-28t11-28l344-344H600q-17 0-28.5-11.5T560-800q0-17 11.5-28.5T600-840h240v240q0 17-11.5 28.5T800-560q-17 0-28.5-11.5T760-600v-104Z"
                }))
            },
            Kc = function() {
                var e = Ls("/nightcore");
                return Ls("/nightcore.html") || e
            },
            Jc = o.p + "a7e53c2202b1d2bbae13e8f22d305f6b.png",
            eh = "BDLp2IAgsBQAyfheCt7Y",
            th = "Fvzr5HK2PqAZZE7Vk7MQ";

        function nh(e, t) {
            return function(e) {
                if (Array.isArray(e)) return e
            }(e) || function(e, t) {
                var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                if (null != n) {
                    var r, o, i, a, s = [],
                        l = !0,
                        u = !1;
                    try {
                        if (i = (n = n.call(e)).next, 0 === t) {
                            if (Object(n) !== n) return;
                            l = !1
                        } else
                            for (; !(l = (r = i.call(n)).done) && (s.push(r.value), s.length !== t); l = !0);
                    } catch (e) {
                        u = !0, o = e
                    } finally {
                        try {
                            if (!l && null != n.return && (a = n.return(), Object(a) !== a)) return
                        } finally {
                            if (u) throw o
                        }
                    }
                    return s
                }
            }(e, t) || function(e, t) {
                if (e) {
                    if ("string" == typeof e) return rh(e, t);
                    var n = Object.prototype.toString.call(e).slice(8, -1);
                    return "Object" === n && e.constructor && (n = e.constructor.name), "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? rh(e, t) : void 0
                }
            }(e, t) || function() {
                throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
            }()
        }

        function rh(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
            return r
        }
        var oh = function(t) {
            var n = t.to,
                r = t.children,
                o = t.forceActive,
                i = t.hasNewContent;
            return e.createElement(fl, {
                to: n,
                className: function(e) {
                    var t = e.isActive;
                    return Ou()(th, (o || t) && "vv332XrbaakpXY3fSe1_", i && !t && !o && "pO48HPOgSVE1QgJC7eol")
                }
            }, r)
        };
        const ih = function(t) {
            var n = t.isOpen,
                r = t.onDismiss,
                o = (0, e.useRef)(null),
                i = (0, e.useRef)(null),
                a = nh(Gc(), 1)[0],
                s = Zc(a),
                l = nh((0, e.useState)(0), 2),
                u = l[0],
                c = l[1],
                h = yl(),
                d = h.isActive,
                f = h.licenseKey,
                p = h.isCorrectFormat,
                m = h.managementHref,
                v = Kc(),
                g = (0, e.useRef)(),
                y = (0, e.useRef)();
            return e.createElement("div", {
                className: Ou()("LmaljbxPoiRQ4WIZL0LR", n && "TScBFWwABUq7HJdyXeqw"),
                ref: o,
                onPointerDown: function(e) {
                    var t;
                    "mouse" !== e.pointerType && (o.current.setPointerCapture(e.pointerId), g.current = null === (t = i.current) || void 0 === t ? void 0 : t.getBoundingClientRect(), y.current = e.clientX)
                },
                onPointerMove: function(e) {
                    if (o.current.hasPointerCapture(e.pointerId)) {
                        var t = g.current.width;
                        c(Math.max((Math.min(t, y.current) - e.clientX) / t, 0))
                    }
                },
                onPointerUp: function(e) {
                    o.current.releasePointerCapture(e.pointerId), c(0), u >= .5 && r()
                },
                onClick: r,
                style: n && u ? {
                    background: "rgba(0,0,0,".concat(.25 * (1 - u), ")")
                } : {}
            }, e.createElement("div", {
                className: "LgUadkODiQlFFojmrdNs",
                ref: i,
                onClick: function(e) {
                    return e.stopPropagation()
                },
                style: n && u ? {
                    transform: "translateX(-".concat(100 * u, "%)")
                } : {}
            }, e.createElement("div", {
                className: "ng0U0Toc4iJyssmS3BM0"
            }, e.createElement("img", {
                className: "gJwxR9A6tSqxQPro8DbA",
                src: Jc
            })), e.createElement("nav", {
                className: Ou()(eh, "s6MxIb0KBPtpt4nJ_4oH")
            }, e.createElement(oh, {
                forceActive: Boolean(v),
                to: "/"
            }, "Remix"), e.createElement(oh, {
                to: "/settings"
            }, "Settings"), e.createElement(oh, {
                to: "/extension"
            }, "Extension"), e.createElement(oh, {
                to: "/faq"
            }, "FAQ"), e.createElement(oh, {
                to: "/changelog"
            }, "Updates"), e.createElement(oh, {
                to: "/blog"
            }, "Blog"), !d && e.createElement(Mu, {
                to: "/pro",
                variant: "cta",
                className: "Aob3r_Ki1k6Db77oQXCD"
            }, "trying to crack ts")), e.createElement("nav", {
                className: eh
            }, f !== xu && p ? e.createElement(fl, {
                className: th,
                to: "help"
            }, "Help & feedback") : e.createElement("a", {
                href: "https://gumroad.com/license-key-lookup",
                className: th
            }, "Recover license key"), m && e.createElement("a", {
                href: m,
                className: th
            }, "Manage subscription"), e.createElement(fl, {
                className: th,
                to: "/privacy"
            }, "Privacy policy"), e.createElement("a", {
                href: "https://alexbainter.com",
                className: Ou()(th),
                target: s ? "_blank" : ""
            }, "Made by Alex Bainter ", e.createElement(Xc, null)))))
        };
        var ah = ["children", "hasIndicator", "isMuted", "isDisabled", "onClick", "shouldAppearDisabled"];

        function sh() {
            return sh = Object.assign ? Object.assign.bind() : function(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var n = arguments[t];
                    for (var r in n) Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r])
                }
                return e
            }, sh.apply(this, arguments)
        }
        const lh = (0, e.forwardRef)((function(t, n) {
                var r = t.children,
                    o = t.hasIndicator,
                    i = t.isMuted,
                    a = t.isDisabled,
                    s = t.onClick,
                    l = t.shouldAppearDisabled,
                    u = void 0 === l ? a : l,
                    c = function(e, t) {
                        if (null == e) return {};
                        var n, r, o = function(e, t) {
                            if (null == e) return {};
                            var n, r, o = {},
                                i = Object.keys(e);
                            for (r = 0; r < i.length; r++) n = i[r], t.indexOf(n) >= 0 || (o[n] = e[n]);
                            return o
                        }(e, t);
                        if (Object.getOwnPropertySymbols) {
                            var i = Object.getOwnPropertySymbols(e);
                            for (r = 0; r < i.length; r++) n = i[r], t.indexOf(n) >= 0 || Object.prototype.propertyIsEnumerable.call(e, n) && (o[n] = e[n])
                        }
                        return o
                    }(t, ah);
                return e.createElement("button", sh({
                    type: "button",
                    "aria-disabled": a,
                    className: Ou()("Fht4HBFEY8se7lQiAhCV", o && "JUidJpY9yG2ngohLy5Ec", (i || u) && "karhGX5p1vgZNaEPl8CB", a && "HAXpGfssMiBsnoFbxc60"),
                    onClick: function(e) {
                        return a || s(e)
                    },
                    ref: n
                }, c), r)
            })),
            uh = function() {
                return e.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    height: "24",
                    viewBox: "0 -960 960 960",
                    width: "24",
                    fill: "currentColor"
                }, e.createElement("path", {
                    d: "M160-240q-17 0-28.5-11.5T120-280q0-17 11.5-28.5T160-320h640q17 0 28.5 11.5T840-280q0 17-11.5 28.5T800-240H160Zm0-200q-17 0-28.5-11.5T120-480q0-17 11.5-28.5T160-520h640q17 0 28.5 11.5T840-480q0 17-11.5 28.5T800-440H160Zm0-200q-17 0-28.5-11.5T120-680q0-17 11.5-28.5T160-720h640q17 0 28.5 11.5T840-680q0 17-11.5 28.5T800-640H160Z"
                }))
            },
            ch = function(t) {
                var n = t.onMenuClick;
                return e.createElement("div", {
                    className: "HbnQ2WOl9RJxJfhWQd8G"
                }, e.createElement(lh, {
                    onClick: n
                }, e.createElement(uh, null)))
            },
            hh = function() {
                return e.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    height: "24",
                    viewBox: "0 -960 960 960",
                    width: "24",
                    fill: "currentColor"
                }, e.createElement("path", {
                    d: "M320-273v-414q0-17 12-28.5t28-11.5q5 0 10.5 1.5T381-721l326 207q9 6 13.5 15t4.5 19q0 10-4.5 19T707-446L381-239q-5 3-10.5 4.5T360-233q-16 0-28-11.5T320-273Z"
                }))
            },
            dh = function() {
                return e.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    height: "24",
                    viewBox: "0 -960 960 960",
                    width: "24",
                    fill: "currentColor"
                }, e.createElement("path", {
                    d: "M640-200q-33 0-56.5-23.5T560-280v-400q0-33 23.5-56.5T640-760q33 0 56.5 23.5T720-680v400q0 33-23.5 56.5T640-200Zm-320 0q-33 0-56.5-23.5T240-280v-400q0-33 23.5-56.5T320-760q33 0 56.5 23.5T400-680v400q0 33-23.5 56.5T320-200Z"
                }))
            },
            fh = function() {
                return e.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    height: "48",
                    viewBox: "0 -960 960 960",
                    width: "48",
                    fill: "currentColor"
                }, e.createElement("path", {
                    d: "m426-330 195-125q14-9 14-25t-14-25L426-630q-15-10-30.5-1.5T380-605v250q0 18 15.5 26.5T426-330Zm54 250q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Z"
                }))
            },
            ph = function() {
                return e.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    height: "48",
                    viewBox: "0 -960 960 960",
                    width: "48",
                    fill: "currentColor"
                }, e.createElement("path", {
                    d: "M400-320q17 0 28.5-11.5T440-360v-240q0-17-11.5-28.5T400-640q-17 0-28.5 11.5T360-600v240q0 17 11.5 28.5T400-320Zm160 0q17 0 28.5-11.5T600-360v-240q0-17-11.5-28.5T560-640q-17 0-28.5 11.5T520-600v240q0 17 11.5 28.5T560-320ZM480-80q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Z"
                }))
            },
            mh = function() {
                return e.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    height: "24",
                    viewBox: "0 -960 960 960",
                    width: "24",
                    fill: "currentColor"
                }, e.createElement("path", {
                    d: "M220-280v-400q0-17 11.5-28.5T260-720q17 0 28.5 11.5T300-680v400q0 17-11.5 28.5T260-240q-17 0-28.5-11.5T220-280Zm458-1L430-447q-9-6-13.5-14.5T412-480q0-10 4.5-18.5T430-513l248-166q5-4 11-5t11-1q16 0 28 11t12 29v330q0 18-12 29t-28 11q-5 0-11-1t-11-5Z"
                }))
            },
            vh = function() {
                return e.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    height: "24",
                    viewBox: "0 -960 960 960",
                    width: "24",
                    fill: "currentColor"
                }, e.createElement("path", {
                    d: "M660-280v-400q0-17 11.5-28.5T700-720q17 0 28.5 11.5T740-680v400q0 17-11.5 28.5T700-240q-17 0-28.5-11.5T660-280Zm-440-35v-330q0-18 12-29t28-11q5 0 11 1t11 5l248 166q9 6 13.5 14.5T548-480q0 10-4.5 18.5T530-447L282-281q-5 4-11 5t-11 1q-16 0-28-11t-12-29Z"
                }))
            },
            gh = function() {
                return e.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    height: "24",
                    viewBox: "0 -960 960 960",
                    width: "24",
                    fill: "currentColor"
                }, e.createElement("path", {
                    d: "m274-200 34 34q12 12 11.5 28T308-110q-12 12-28.5 12.5T251-109L148-212q-6-6-8.5-13t-2.5-15q0-8 2.5-15t8.5-13l103-103q12-12 28.5-11.5T308-370q11 12 11.5 28T308-314l-34 34h406v-120q0-17 11.5-28.5T720-440q17 0 28.5 11.5T760-400v120q0 33-23.5 56.5T680-200H274Zm412-480H280v120q0 17-11.5 28.5T240-520q-17 0-28.5-11.5T200-560v-120q0-33 23.5-56.5T280-760h406l-34-34q-12-12-11.5-28t11.5-28q12-12 28.5-12.5T709-851l103 103q6 6 8.5 13t2.5 15q0 8-2.5 15t-8.5 13L709-589q-12 12-28.5 11.5T652-590q-11-12-11.5-28t11.5-28l34-34Z"
                }))
            },
            yh = function() {
                return e.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    height: "24",
                    viewBox: "0 -960 960 960",
                    width: "24",
                    fill: "currentColor"
                }, e.createElement("path", {
                    d: "M460-540h-30q-13 0-21.5-8.5T400-570q0-13 8.5-21.5T430-600h50q17 0 28.5 11.5T520-560v170q0 13-8.5 21.5T490-360q-13 0-21.5-8.5T460-390v-150ZM274-200l34 34q12 12 11.5 28T308-110q-12 12-28.5 12.5T251-109L148-212q-6-6-8.5-13t-2.5-15q0-8 2.5-15t8.5-13l103-103q12-12 28.5-11.5T308-370q11 12 11.5 28T308-314l-34 34h406v-120q0-17 11.5-28.5T720-440q17 0 28.5 11.5T760-400v120q0 33-23.5 56.5T680-200H274Zm412-480H280v120q0 17-11.5 28.5T240-520q-17 0-28.5-11.5T200-560v-120q0-33 23.5-56.5T280-760h406l-34-34q-12-12-11.5-28t11.5-28q12-12 28.5-12.5T709-851l103 103q6 6 8.5 13t2.5 15q0 8-2.5 15t-8.5 13L709-589q-12 12-28.5 11.5T652-590q-11-12-11.5-28t11.5-28l34-34Z"
                }))
            },
            bh = function(e) {
                return e.preventDefault()
            };
        var wh = function(e) {
            return Math.max(Math.min(e, 1), 0)
        };
        const _h = function(t) {
                var n = t.value,
                    r = t.min,
                    o = t.max,
                    i = t.onChange,
                    a = t.step,
                    s = t.shouldChangeOnDrag,
                    l = void 0 === s || s,
                    u = t.shouldAlwaysShowHandle,
                    c = void 0 === u || u,
                    h = t.shouldShowStepMarkers,
                    d = void 0 === h ? "number" == typeof a : h,
                    f = wh((n - r) / (o - r)),
                    p = (0, e.useRef)(null),
                    m = (0, e.useRef)(null),
                    v = a && (o - r) / a + 1,
                    g = function(e) {
                        if (m.current) {
                            var t = m.current.getBoundingClientRect(),
                                s = t.x,
                                l = t.width,
                                u = function(e, t) {
                                    return t ? Math.round(e / t) * t : e
                                }(wh((e.clientX - s) / l) * (o - r) + r, a);
                            u !== n && i(u)
                        }
                    };
                return e.createElement("div", {
                    className: Ou()("Rp7ZADrjFa6lN4UZefzw"),
                    onPointerDown: function(e) {
                        e.stopPropagation(), p.current && (p.current.setPointerCapture(e.pointerId), g(e))
                    },
                    onPointerMove: function(e) {
                        l && p.current.hasPointerCapture(e.pointerId) && (e.stopPropagation(), g(e))
                    },
                    onPointerUp: function(e) {
                        e.stopPropagation(), p.current && p.current.releasePointerCapture(e.pointerId)
                    },
                    onDragStart: bh,
                    ref: p
                }, e.createElement("div", {
                    className: "bGurUxNQBUb4UzHDhjvc",
                    ref: m
                }, e.createElement("div", {
                    className: "n4yPbKoxobVVAKnhADsI",
                    style: {
                        width: "".concat(100 * f, "%")
                    }
                }), d && Array.from({
                    length: v - 2
                }, (function(t, n) {
                    var r = 100 / (v - 1),
                        o = n + 1;
                    return e.createElement("div", {
                        key: n,
                        className: Ou()("_9sCYhtwT5LCgTIUD1nw2"),
                        style: {
                            left: "".concat(o * r, "%")
                        }
                    })
                })), c && e.createElement("div", {
                    className: "pCG2ncFWxqOf2zp_O5Qd",
                    style: {
                        left: "".concat(100 * f, "%")
                    }
                })))
            },
            xh = function() {
                return e.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    height: "24",
                    viewBox: "0 -960 960 960",
                    width: "24",
                    fill: "currentColor"
                }, e.createElement("path", {
                    d: "M760-481q0-83-44-151.5T598-735q-15-7-22-21.5t-2-29.5q6-16 21.5-23t31.5 0q97 43 155 131.5T840-481q0 108-58 196.5T627-153q-16 7-31.5 0T574-176q-5-15 2-29.5t22-21.5q74-34 118-102.5T760-481ZM280-360H160q-17 0-28.5-11.5T120-400v-160q0-17 11.5-28.5T160-600h120l132-132q19-19 43.5-8.5T480-703v446q0 27-24.5 37.5T412-228L280-360Zm380-120q0 42-19 79.5T591-339q-10 6-20.5.5T560-356v-250q0-12 10.5-17.5t20.5.5q31 25 50 63t19 80Z"
                }))
            },
            Eh = function() {
                return e.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    height: "24",
                    viewBox: "0 -960 960 960",
                    width: "24",
                    fill: "currentColor"
                }, e.createElement("path", {
                    d: "m720-424-76 76q-11 11-28 11t-28-11q-11-11-11-28t11-28l76-76-76-76q-11-11-11-28t11-28q11-11 28-11t28 11l76 76 76-76q11-11 28-11t28 11q11 11 11 28t-11 28l-76 76 76 76q11 11 11 28t-11 28q-11 11-28 11t-28-11l-76-76Zm-440 64H160q-17 0-28.5-11.5T120-400v-160q0-17 11.5-28.5T160-600h120l132-132q19-19 43.5-8.5T480-703v446q0 27-24.5 37.5T412-228L280-360Z"
                }))
            };

        function Sh(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
            return r
        }
        const kh = function() {
                var t = (0, e.useRef)(0),
                    n = function(e, t) {
                        return function(e) {
                            if (Array.isArray(e)) return e
                        }(e) || function(e, t) {
                            var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                            if (null != n) {
                                var r, o, i, a, s = [],
                                    l = !0,
                                    u = !1;
                                try {
                                    for (i = (n = n.call(e)).next, 0; !(l = (r = i.call(n)).done) && (s.push(r.value), 2 !== s.length); l = !0);
                                } catch (e) {
                                    u = !0, o = e
                                } finally {
                                    try {
                                        if (!l && null != n.return && (a = n.return(), Object(a) !== a)) return
                                    } finally {
                                        if (u) throw o
                                    }
                                }
                                return s
                            }
                        }(e) || function(e, t) {
                            if (e) {
                                if ("string" == typeof e) return Sh(e, 2);
                                var n = Object.prototype.toString.call(e).slice(8, -1);
                                return "Object" === n && e.constructor && (n = e.constructor.name), "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Sh(e, 2) : void 0
                            }
                        }(e) || function() {
                            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                        }()
                    }(Gc()),
                    r = n[0],
                    o = n[1];
                return e.createElement("div", {
                    className: "ieV0Ug_r60S41Go8DzEF"
                }, e.createElement(lh, {
                    onClick: function() {
                        0 !== r.gain ? (t.current = r.gain, o({
                            type: Qc.ChangeGain,
                            payload: 0
                        })) : o({
                            type: Qc.ChangeGain,
                            payload: t.current
                        })
                    }
                }, r.gain > 0 ? e.createElement(xh, null) : e.createElement(Eh, null)), e.createElement(_h, {
                    value: r.gain,
                    min: 0,
                    max: 1,
                    onChange: function(e) {
                        t.current = e, o({
                            type: Qc.ChangeGain,
                            payload: e
                        })
                    }
                }))
            },
            Th = function(e) {
                return e.stopPropagation()
            };

        function Ch(e, t) {
            return function(e) {
                if (Array.isArray(e)) return e
            }(e) || function(e, t) {
                var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                if (null != n) {
                    var r, o, i, a, s = [],
                        l = !0,
                        u = !1;
                    try {
                        if (i = (n = n.call(e)).next, 0 === t) {
                            if (Object(n) !== n) return;
                            l = !1
                        } else
                            for (; !(l = (r = i.call(n)).done) && (s.push(r.value), s.length !== t); l = !0);
                    } catch (e) {
                        u = !0, o = e
                    } finally {
                        try {
                            if (!l && null != n.return && (a = n.return(), Object(a) !== a)) return
                        } finally {
                            if (u) throw o
                        }
                    }
                    return s
                }
            }(e, t) || function(e, t) {
                if (e) {
                    if ("string" == typeof e) return Oh(e, t);
                    var n = Object.prototype.toString.call(e).slice(8, -1);
                    return "Object" === n && e.constructor && (n = e.constructor.name), "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Oh(e, t) : void 0
                }
            }(e, t) || function() {
                throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
            }()
        }

        function Oh(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
            return r
        }
        var Ah = ["xs", "sm", "md", "lg", "xl", "2xl"],
            Ph = Object.entries({
                sm: 640,
                md: 768,
                lg: 1024,
                xl: 1280,
                "2xl": 1536
            }).sort((function(e, t) {
                var n = Ch(e, 2)[1];
                return Ch(t, 2)[1] - n
            })),
            Rh = function() {
                return (Ph.find((function(e) {
                    var t = Ch(e, 2)[1];
                    return document.documentElement.clientWidth >= t
                })) || ["xs"])[0]
            };
        const Mh = function() {
            var t = Ch((0, e.useState)(Rh()), 2),
                n = t[0],
                r = t[1];
            (0, e.useEffect)((function() {
                var e = function() {
                    r(Rh())
                };
                return window.addEventListener("resize", e),
                    function() {
                        window.removeEventListener("resize", e)
                    }
            }), []);
            var o = Ah.indexOf(n);
            return Ah.reduce((function(e, t, n) {
                return e[t] = o >= n, e
            }), {})
        };
        var Dh = function(e) {
            return void 0 !== (null == e ? void 0 : e.audioBuffer)
        };
        const Nh = "FmIom97veLUjv8gha8wL";

        function Ih(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
            return r
        }
        var Lh = {
            none: "all",
            all: "one",
            one: "none"
        };
        const qh = function(t) {
                var n = t.onClick,
                    r = function(e, t) {
                        return function(e) {
                            if (Array.isArray(e)) return e
                        }(e) || function(e, t) {
                            var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                            if (null != n) {
                                var r, o, i, a, s = [],
                                    l = !0,
                                    u = !1;
                                try {
                                    for (i = (n = n.call(e)).next, 0; !(l = (r = i.call(n)).done) && (s.push(r.value), 2 !== s.length); l = !0);
                                } catch (e) {
                                    u = !0, o = e
                                } finally {
                                    try {
                                        if (!l && null != n.return && (a = n.return(), Object(a) !== a)) return
                                    } finally {
                                        if (u) throw o
                                    }
                                }
                                return s
                            }
                        }(e) || function(e, t) {
                            if (e) {
                                if ("string" == typeof e) return Ih(e, 2);
                                var n = Object.prototype.toString.call(e).slice(8, -1);
                                return "Object" === n && e.constructor && (n = e.constructor.name), "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Ih(e, 2) : void 0
                            }
                        }(e) || function() {
                            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                        }()
                    }(Gc()),
                    o = r[0],
                    i = r[1],
                    a = $c(o),
                    s = Mh();
                if (!a || !Yc(o)) return null;
                var l = Dh(a);
                return e.createElement("div", {
                    className: "HqkG9OQEKV25lf5b_yxt",
                    onClick: n
                }, e.createElement("div", {
                    className: "cyVaqbsNUhnTI4FEvZZq"
                }, s.md ? e.createElement(dl, {
                    to: "/"
                }, a.name) : a.name), e.createElement("div", {
                    className: "CDsO1JYzekNFm0mSijXU",
                    onClick: Th
                }, e.createElement("div", {
                    style: {
                        width: "24px"
                    },
                    className: Nh
                }), e.createElement("div", {
                    className: Nh
                }, e.createElement(lh, {
                    onClick: function(e) {
                        e.preventDefault(), i({
                            type: Qc.SkipPrevious
                        })
                    }
                }, e.createElement(mh, null))), l ? e.createElement(lh, {
                    onClick: function() {
                        o.isPlaying ? i({
                            type: Qc.Pause
                        }) : i({
                            type: Qc.Play,
                            payload: a
                        })
                    }
                }, s.sm ? o.isPlaying ? e.createElement(ph, null) : e.createElement(fh, null) : o.isPlaying ? e.createElement(dh, null) : e.createElement(hh, null)) : e.createElement(Tu, null), e.createElement("div", null, e.createElement(lh, {
                    onClick: function() {
                        i({
                            type: Qc.SkipNext
                        })
                    }
                }, e.createElement(vh, null))), e.createElement("div", {
                    className: Nh
                }, e.createElement(lh, {
                    onClick: function() {
                        i({
                            type: Qc.ChangeLoopMode,
                            payload: Lh[o.loopMode]
                        })
                    },
                    hasIndicator: "none" !== o.loopMode,
                    isMuted: "none" === o.loopMode
                }, "one" === o.loopMode ? e.createElement(yh, null) : e.createElement(gh, null)))), e.createElement("div", {
                    className: "eKbMC5WC8GnfHI8DOPkH"
                }, e.createElement("div", {
                    className: "_z0mJnt97RL9GBPaB0Iz",
                    onClick: Th
                }, e.createElement(kh, null))))
            },
            jh = function(e) {
                return "".concat(Math.round(100 * e) / 100, "x")
            },
            Fh = function(e) {
                return "".concat(Math.round(100 * e), "%")
            },
            Vh = function(e) {
                return "number" == typeof e ? "".concat(Math.round(100 * e) / 100, "x") : ""
            },
            Bh = function(e) {
                return "".concat(Math.round(e / 10 * 100), "%")
            };

        function zh(e) {
            return zh = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                return typeof e
            } : function(e) {
                return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
            }, zh(e)
        }
        const Uh = function(t) {
                var n, r, o, i = t.isOn,
                    a = t.onSwitch;
                return e.createElement("button", {
                    className: Ou()("uGqKvtPfs_v72_ChnNLv", (n = {}, r = "ZLWYCpAf8V3h7w0_KqQD", o = i, r = function(e) {
                        var t = function(e, t) {
                            if ("object" !== zh(e) || null === e) return e;
                            var n = e[Symbol.toPrimitive];
                            if (void 0 !== n) {
                                var r = n.call(e, "string");
                                if ("object" !== zh(r)) return r;
                                throw new TypeError("@@toPrimitive must return a primitive value.")
                            }
                            return String(e)
                        }(e);
                        return "symbol" === zh(t) ? t : String(t)
                    }(r), r in n ? Object.defineProperty(n, r, {
                        value: o,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : n[r] = o, n)),
                    onClick: a
                }, e.createElement("div", {
                    className: "SLFpZW1Hi0Bw7m61S_nj"
                }))
            },
            Wh = Math.min,
            Hh = Math.max,
            Gh = Math.round,
            Qh = Math.floor,
            Yh = e => ({
                x: e,
                y: e
            }),
            $h = {
                left: "right",
                right: "left",
                bottom: "top",
                top: "bottom"
            },
            Zh = {
                start: "end",
                end: "start"
            };

        function Xh(e, t, n) {
            return Hh(e, Wh(t, n))
        }

        function Kh(e, t) {
            return "function" == typeof e ? e(t) : e
        }

        function Jh(e) {
            return e.split("-")[0]
        }

        function ed(e) {
            return e.split("-")[1]
        }

        function td(e) {
            return "x" === e ? "y" : "x"
        }

        function nd(e) {
            return "y" === e ? "height" : "width"
        }

        function rd(e) {
            return ["top", "bottom"].includes(Jh(e)) ? "y" : "x"
        }

        function od(e) {
            return td(rd(e))
        }

        function id(e) {
            return e.replace(/start|end/g, (e => Zh[e]))
        }

        function ad(e) {
            return e.replace(/left|right|bottom|top/g, (e => $h[e]))
        }

        function sd(e) {
            return {
                ...e,
                top: e.y,
                left: e.x,
                right: e.x + e.width,
                bottom: e.y + e.height
            }
        }

        function ld(e, t, n) {
            let {
                reference: r,
                floating: o
            } = e;
            const i = rd(t),
                a = od(t),
                s = nd(a),
                l = Jh(t),
                u = "y" === i,
                c = r.x + r.width / 2 - o.width / 2,
                h = r.y + r.height / 2 - o.height / 2,
                d = r[s] / 2 - o[s] / 2;
            let f;
            switch (l) {
                case "top":
                    f = {
                        x: c,
                        y: r.y - o.height
                    };
                    break;
                case "bottom":
                    f = {
                        x: c,
                        y: r.y + r.height
                    };
                    break;
                case "right":
                    f = {
                        x: r.x + r.width,
                        y: h
                    };
                    break;
                case "left":
                    f = {
                        x: r.x - o.width,
                        y: h
                    };
                    break;
                default:
                    f = {
                        x: r.x,
                        y: r.y
                    }
            }
            switch (ed(t)) {
                case "start":
                    f[a] -= d * (n && u ? -1 : 1);
                    break;
                case "end":
                    f[a] += d * (n && u ? -1 : 1)
            }
            return f
        }
        async function ud(e, t) {
            var n;
            void 0 === t && (t = {});
            const {
                x: r,
                y: o,
                platform: i,
                rects: a,
                elements: s,
                strategy: l
            } = e, {
                boundary: u = "clippingAncestors",
                rootBoundary: c = "viewport",
                elementContext: h = "floating",
                altBoundary: d = !1,
                padding: f = 0
            } = Kh(t, e), p = function(e) {
                return "number" != typeof e ? function(e) {
                    return {
                        top: 0,
                        right: 0,
                        bottom: 0,
                        left: 0,
                        ...e
                    }
                }(e) : {
                    top: e,
                    right: e,
                    bottom: e,
                    left: e
                }
            }(f), m = s[d ? "floating" === h ? "reference" : "floating" : h], v = sd(await i.getClippingRect({
                element: null == (n = await (null == i.isElement ? void 0 : i.isElement(m))) || n ? m : m.contextElement || await (null == i.getDocumentElement ? void 0 : i.getDocumentElement(s.floating)),
                boundary: u,
                rootBoundary: c,
                strategy: l
            })), g = "floating" === h ? {
                ...a.floating,
                x: r,
                y: o
            } : a.reference, y = await (null == i.getOffsetParent ? void 0 : i.getOffsetParent(s.floating)), b = await (null == i.isElement ? void 0 : i.isElement(y)) && await (null == i.getScale ? void 0 : i.getScale(y)) || {
                x: 1,
                y: 1
            }, w = sd(i.convertOffsetParentRelativeRectToViewportRelativeRect ? await i.convertOffsetParentRelativeRectToViewportRelativeRect({
                rect: g,
                offsetParent: y,
                strategy: l
            }) : g);
            return {
                top: (v.top - w.top + p.top) / b.y,
                bottom: (w.bottom - v.bottom + p.bottom) / b.y,
                left: (v.left - w.left + p.left) / b.x,
                right: (w.right - v.right + p.right) / b.x
            }
        }
        const cd = function(e) {
                return void 0 === e && (e = {}), {
                    name: "flip",
                    options: e,
                    async fn(t) {
                        var n, r;
                        const {
                            placement: o,
                            middlewareData: i,
                            rects: a,
                            initialPlacement: s,
                            platform: l,
                            elements: u
                        } = t, {
                            mainAxis: c = !0,
                            crossAxis: h = !0,
                            fallbackPlacements: d,
                            fallbackStrategy: f = "bestFit",
                            fallbackAxisSideDirection: p = "none",
                            flipAlignment: m = !0,
                            ...v
                        } = Kh(e, t);
                        if (null != (n = i.arrow) && n.alignmentOffset) return {};
                        const g = Jh(o),
                            y = Jh(s) === s,
                            b = await (null == l.isRTL ? void 0 : l.isRTL(u.floating)),
                            w = d || (y || !m ? [ad(s)] : function(e) {
                                const t = ad(e);
                                return [id(e), t, id(t)]
                            }(s));
                        d || "none" === p || w.push(... function(e, t, n, r) {
                            const o = ed(e);
                            let i = function(e, t, n) {
                                const r = ["left", "right"],
                                    o = ["right", "left"],
                                    i = ["top", "bottom"],
                                    a = ["bottom", "top"];
                                switch (e) {
                                    case "top":
                                    case "bottom":
                                        return n ? t ? o : r : t ? r : o;
                                    case "left":
                                    case "right":
                                        return t ? i : a;
                                    default:
                                        return []
                                }
                            }(Jh(e), "start" === n, r);
                            return o && (i = i.map((e => e + "-" + o)), t && (i = i.concat(i.map(id)))), i
                        }(s, m, p, b));
                        const _ = [s, ...w],
                            x = await ud(t, v),
                            E = [];
                        let S = (null == (r = i.flip) ? void 0 : r.overflows) || [];
                        if (c && E.push(x[g]), h) {
                            const e = function(e, t, n) {
                                void 0 === n && (n = !1);
                                const r = ed(e),
                                    o = od(e),
                                    i = nd(o);
                                let a = "x" === o ? r === (n ? "end" : "start") ? "right" : "left" : "start" === r ? "bottom" : "top";
                                return t.reference[i] > t.floating[i] && (a = ad(a)), [a, ad(a)]
                            }(o, a, b);
                            E.push(x[e[0]], x[e[1]])
                        }
                        if (S = [...S, {
                                placement: o,
                                overflows: E
                            }], !E.every((e => e <= 0))) {
                            var k;
                            const e = ((null == (k = i.flip) ? void 0 : k.index) || 0) + 1,
                                t = _[e];
                            if (t) return {
                                data: {
                                    index: e,
                                    overflows: S
                                },
                                reset: {
                                    placement: t
                                }
                            };
                            let n = null == S.filter((e => e.overflows[0] <= 0)).sort(((e, t) => e.overflows[1] - t.overflows[1]))[0] ? void 0 : t.placement;
                            if (!n) switch (f) {
                                case "bestFit": {
                                    var T;
                                    const e = null == (T = S.map((e => [e.placement, e.overflows.filter((e => e > 0)).reduce(((e, t) => e + t), 0)])).sort(((e, t) => e[1] - t[1]))[0]) ? void 0 : T[0];
                                    e && (n = e);
                                    break
                                }
                                case "initialPlacement":
                                    n = s
                            }
                            if (o !== n) return {
                                reset: {
                                    placement: n
                                }
                            }
                        }
                        return {}
                    }
                }
            },
            hd = function(e) {
                return void 0 === e && (e = {}), {
                    name: "shift",
                    options: e,
                    async fn(t) {
                        const {
                            x: n,
                            y: r,
                            placement: o
                        } = t, {
                            mainAxis: i = !0,
                            crossAxis: a = !1,
                            limiter: s = {
                                fn: e => {
                                    let {
                                        x: t,
                                        y: n
                                    } = e;
                                    return {
                                        x: t,
                                        y: n
                                    }
                                }
                            },
                            ...l
                        } = Kh(e, t), u = {
                            x: n,
                            y: r
                        }, c = await ud(t, l), h = rd(Jh(o)), d = td(h);
                        let f = u[d],
                            p = u[h];
                        if (i) {
                            const e = "y" === d ? "bottom" : "right";
                            f = Xh(f + c["y" === d ? "top" : "left"], f, f - c[e])
                        }
                        if (a) {
                            const e = "y" === h ? "bottom" : "right";
                            p = Xh(p + c["y" === h ? "top" : "left"], p, p - c[e])
                        }
                        const m = s.fn({
                            ...t,
                            [d]: f,
                            [h]: p
                        });
                        return {
                            ...m,
                            data: {
                                x: m.x - n,
                                y: m.y - r
                            }
                        }
                    }
                }
            };

        function dd(e) {
            return md(e) ? (e.nodeName || "").toLowerCase() : "#document"
        }

        function fd(e) {
            var t;
            return (null == e || null == (t = e.ownerDocument) ? void 0 : t.defaultView) || window
        }

        function pd(e) {
            var t;
            return null == (t = (md(e) ? e.ownerDocument : e.document) || window.document) ? void 0 : t.documentElement
        }

        function md(e) {
            return e instanceof Node || e instanceof fd(e).Node
        }

        function vd(e) {
            return e instanceof Element || e instanceof fd(e).Element
        }

        function gd(e) {
            return e instanceof HTMLElement || e instanceof fd(e).HTMLElement
        }

        function yd(e) {
            return "undefined" != typeof ShadowRoot && (e instanceof ShadowRoot || e instanceof fd(e).ShadowRoot)
        }

        function bd(e) {
            const {
                overflow: t,
                overflowX: n,
                overflowY: r,
                display: o
            } = Sd(e);
            return /auto|scroll|overlay|hidden|clip/.test(t + r + n) && !["inline", "contents"].includes(o)
        }

        function wd(e) {
            return ["table", "td", "th"].includes(dd(e))
        }

        function _d(e) {
            const t = xd(),
                n = Sd(e);
            return "none" !== n.transform || "none" !== n.perspective || !!n.containerType && "normal" !== n.containerType || !t && !!n.backdropFilter && "none" !== n.backdropFilter || !t && !!n.filter && "none" !== n.filter || ["transform", "perspective", "filter"].some((e => (n.willChange || "").includes(e))) || ["paint", "layout", "strict", "content"].some((e => (n.contain || "").includes(e)))
        }

        function xd() {
            return !("undefined" == typeof CSS || !CSS.supports) && CSS.supports("-webkit-backdrop-filter", "none")
        }

        function Ed(e) {
            return ["html", "body", "#document"].includes(dd(e))
        }

        function Sd(e) {
            return fd(e).getComputedStyle(e)
        }

        function kd(e) {
            return vd(e) ? {
                scrollLeft: e.scrollLeft,
                scrollTop: e.scrollTop
            } : {
                scrollLeft: e.pageXOffset,
                scrollTop: e.pageYOffset
            }
        }

        function Td(e) {
            if ("html" === dd(e)) return e;
            const t = e.assignedSlot || e.parentNode || yd(e) && e.host || pd(e);
            return yd(t) ? t.host : t
        }

        function Cd(e) {
            const t = Td(e);
            return Ed(t) ? e.ownerDocument ? e.ownerDocument.body : e.body : gd(t) && bd(t) ? t : Cd(t)
        }

        function Od(e, t, n) {
            var r;
            void 0 === t && (t = []), void 0 === n && (n = !0);
            const o = Cd(e),
                i = o === (null == (r = e.ownerDocument) ? void 0 : r.body),
                a = fd(o);
            return i ? t.concat(a, a.visualViewport || [], bd(o) ? o : [], a.frameElement && n ? Od(a.frameElement) : []) : t.concat(o, Od(o, [], n))
        }

        function Ad(e, t) {
            if (!e || !t) return !1;
            const n = t.getRootNode && t.getRootNode();
            if (e.contains(t)) return !0;
            if (n && yd(n)) {
                let n = t;
                for (; n;) {
                    if (e === n) return !0;
                    n = n.parentNode || n.host
                }
            }
            return !1
        }

        function Pd(e) {
            return (null == e ? void 0 : e.ownerDocument) || document
        }

        function Rd(e, t) {
            if (null == t) return !1;
            if ("composedPath" in e) return e.composedPath().includes(t);
            const n = e;
            return null != n.target && t.contains(n.target)
        }

        function Md(e) {
            return "composedPath" in e ? e.composedPath()[0] : e.target
        }

        function Dd(e) {
            const t = Sd(e);
            let n = parseFloat(t.width) || 0,
                r = parseFloat(t.height) || 0;
            const o = gd(e),
                i = o ? e.offsetWidth : n,
                a = o ? e.offsetHeight : r,
                s = Gh(n) !== i || Gh(r) !== a;
            return s && (n = i, r = a), {
                width: n,
                height: r,
                $: s
            }
        }

        function Nd(e) {
            return vd(e) ? e : e.contextElement
        }

        function Id(e) {
            const t = Nd(e);
            if (!gd(t)) return Yh(1);
            const n = t.getBoundingClientRect(),
                {
                    width: r,
                    height: o,
                    $: i
                } = Dd(t);
            let a = (i ? Gh(n.width) : n.width) / r,
                s = (i ? Gh(n.height) : n.height) / o;
            return a && Number.isFinite(a) || (a = 1), s && Number.isFinite(s) || (s = 1), {
                x: a,
                y: s
            }
        }
        const Ld = Yh(0);

        function qd(e) {
            const t = fd(e);
            return xd() && t.visualViewport ? {
                x: t.visualViewport.offsetLeft,
                y: t.visualViewport.offsetTop
            } : Ld
        }

        function jd(e, t, n, r) {
            void 0 === t && (t = !1), void 0 === n && (n = !1);
            const o = e.getBoundingClientRect(),
                i = Nd(e);
            let a = Yh(1);
            t && (r ? vd(r) && (a = Id(r)) : a = Id(e));
            const s = function(e, t, n) {
                return void 0 === t && (t = !1), !(!n || t && n !== fd(e)) && t
            }(i, n, r) ? qd(i) : Yh(0);
            let l = (o.left + s.x) / a.x,
                u = (o.top + s.y) / a.y,
                c = o.width / a.x,
                h = o.height / a.y;
            if (i) {
                const e = fd(i),
                    t = r && vd(r) ? fd(r) : r;
                let n = e.frameElement;
                for (; n && r && t !== e;) {
                    const e = Id(n),
                        t = n.getBoundingClientRect(),
                        r = Sd(n),
                        o = t.left + (n.clientLeft + parseFloat(r.paddingLeft)) * e.x,
                        i = t.top + (n.clientTop + parseFloat(r.paddingTop)) * e.y;
                    l *= e.x, u *= e.y, c *= e.x, h *= e.y, l += o, u += i, n = fd(n).frameElement
                }
            }
            return sd({
                width: c,
                height: h,
                x: l,
                y: u
            })
        }

        function Fd(e) {
            return jd(pd(e)).left + kd(e).scrollLeft
        }

        function Vd(e, t, n) {
            let r;
            if ("viewport" === t) r = function(e, t) {
                const n = fd(e),
                    r = pd(e),
                    o = n.visualViewport;
                let i = r.clientWidth,
                    a = r.clientHeight,
                    s = 0,
                    l = 0;
                if (o) {
                    i = o.width, a = o.height;
                    const e = xd();
                    (!e || e && "fixed" === t) && (s = o.offsetLeft, l = o.offsetTop)
                }
                return {
                    width: i,
                    height: a,
                    x: s,
                    y: l
                }
            }(e, n);
            else if ("document" === t) r = function(e) {
                const t = pd(e),
                    n = kd(e),
                    r = e.ownerDocument.body,
                    o = Hh(t.scrollWidth, t.clientWidth, r.scrollWidth, r.clientWidth),
                    i = Hh(t.scrollHeight, t.clientHeight, r.scrollHeight, r.clientHeight);
                let a = -n.scrollLeft + Fd(e);
                const s = -n.scrollTop;
                return "rtl" === Sd(r).direction && (a += Hh(t.clientWidth, r.clientWidth) - o), {
                    width: o,
                    height: i,
                    x: a,
                    y: s
                }
            }(pd(e));
            else if (vd(t)) r = function(e, t) {
                const n = jd(e, !0, "fixed" === t),
                    r = n.top + e.clientTop,
                    o = n.left + e.clientLeft,
                    i = gd(e) ? Id(e) : Yh(1);
                return {
                    width: e.clientWidth * i.x,
                    height: e.clientHeight * i.y,
                    x: o * i.x,
                    y: r * i.y
                }
            }(t, n);
            else {
                const n = qd(e);
                r = {
                    ...t,
                    x: t.x - n.x,
                    y: t.y - n.y
                }
            }
            return sd(r)
        }

        function Bd(e, t) {
            const n = Td(e);
            return !(n === t || !vd(n) || Ed(n)) && ("fixed" === Sd(n).position || Bd(n, t))
        }

        function zd(e, t, n) {
            const r = gd(t),
                o = pd(t),
                i = "fixed" === n,
                a = jd(e, !0, i, t);
            let s = {
                scrollLeft: 0,
                scrollTop: 0
            };
            const l = Yh(0);
            if (r || !r && !i)
                if (("body" !== dd(t) || bd(o)) && (s = kd(t)), r) {
                    const e = jd(t, !0, i, t);
                    l.x = e.x + t.clientLeft, l.y = e.y + t.clientTop
                } else o && (l.x = Fd(o));
            return {
                x: a.left + s.scrollLeft - l.x,
                y: a.top + s.scrollTop - l.y,
                width: a.width,
                height: a.height
            }
        }

        function Ud(e, t) {
            return gd(e) && "fixed" !== Sd(e).position ? t ? t(e) : e.offsetParent : null
        }

        function Wd(e, t) {
            const n = fd(e);
            if (!gd(e)) return n;
            let r = Ud(e, t);
            for (; r && wd(r) && "static" === Sd(r).position;) r = Ud(r, t);
            return r && ("html" === dd(r) || "body" === dd(r) && "static" === Sd(r).position && !_d(r)) ? n : r || function(e) {
                let t = Td(e);
                for (; gd(t) && !Ed(t);) {
                    if (_d(t)) return t;
                    t = Td(t)
                }
                return null
            }(e) || n
        }
        const Hd = {
            convertOffsetParentRelativeRectToViewportRelativeRect: function(e) {
                let {
                    rect: t,
                    offsetParent: n,
                    strategy: r
                } = e;
                const o = gd(n),
                    i = pd(n);
                if (n === i) return t;
                let a = {
                        scrollLeft: 0,
                        scrollTop: 0
                    },
                    s = Yh(1);
                const l = Yh(0);
                if ((o || !o && "fixed" !== r) && (("body" !== dd(n) || bd(i)) && (a = kd(n)), gd(n))) {
                    const e = jd(n);
                    s = Id(n), l.x = e.x + n.clientLeft, l.y = e.y + n.clientTop
                }
                return {
                    width: t.width * s.x,
                    height: t.height * s.y,
                    x: t.x * s.x - a.scrollLeft * s.x + l.x,
                    y: t.y * s.y - a.scrollTop * s.y + l.y
                }
            },
            getDocumentElement: pd,
            getClippingRect: function(e) {
                let {
                    element: t,
                    boundary: n,
                    rootBoundary: r,
                    strategy: o
                } = e;
                const i = [..."clippingAncestors" === n ? function(e, t) {
                        const n = t.get(e);
                        if (n) return n;
                        let r = Od(e, [], !1).filter((e => vd(e) && "body" !== dd(e))),
                            o = null;
                        const i = "fixed" === Sd(e).position;
                        let a = i ? Td(e) : e;
                        for (; vd(a) && !Ed(a);) {
                            const t = Sd(a),
                                n = _d(a);
                            n || "fixed" !== t.position || (o = null), (i ? !n && !o : !n && "static" === t.position && o && ["absolute", "fixed"].includes(o.position) || bd(a) && !n && Bd(e, a)) ? r = r.filter((e => e !== a)) : o = t, a = Td(a)
                        }
                        return t.set(e, r), r
                    }(t, this._c) : [].concat(n), r],
                    a = i[0],
                    s = i.reduce(((e, n) => {
                        const r = Vd(t, n, o);
                        return e.top = Hh(r.top, e.top), e.right = Wh(r.right, e.right), e.bottom = Wh(r.bottom, e.bottom), e.left = Hh(r.left, e.left), e
                    }), Vd(t, a, o));
                return {
                    width: s.right - s.left,
                    height: s.bottom - s.top,
                    x: s.left,
                    y: s.top
                }
            },
            getOffsetParent: Wd,
            getElementRects: async function(e) {
                let {
                    reference: t,
                    floating: n,
                    strategy: r
                } = e;
                const o = this.getOffsetParent || Wd,
                    i = this.getDimensions;
                return {
                    reference: zd(t, await o(n), r),
                    floating: {
                        x: 0,
                        y: 0,
                        ...await i(n)
                    }
                }
            },
            getClientRects: function(e) {
                return Array.from(e.getClientRects())
            },
            getDimensions: function(e) {
                return Dd(e)
            },
            getScale: Id,
            isElement: vd,
            isRTL: function(e) {
                return "rtl" === Sd(e).direction
            }
        };

        function Gd(e, t, n, r) {
            void 0 === r && (r = {});
            const {
                ancestorScroll: o = !0,
                ancestorResize: i = !0,
                elementResize: a = "function" == typeof ResizeObserver,
                layoutShift: s = "function" == typeof IntersectionObserver,
                animationFrame: l = !1
            } = r, u = Nd(e), c = o || i ? [...u ? Od(u) : [], ...Od(t)] : [];
            c.forEach((e => {
                o && e.addEventListener("scroll", n, {
                    passive: !0
                }), i && e.addEventListener("resize", n)
            }));
            const h = u && s ? function(e, t) {
                let n, r = null;
                const o = pd(e);

                function i() {
                    clearTimeout(n), r && r.disconnect(), r = null
                }
                return function a(s, l) {
                    void 0 === s && (s = !1), void 0 === l && (l = 1), i();
                    const {
                        left: u,
                        top: c,
                        width: h,
                        height: d
                    } = e.getBoundingClientRect();
                    if (s || t(), !h || !d) return;
                    const f = {
                        rootMargin: -Qh(c) + "px " + -Qh(o.clientWidth - (u + h)) + "px " + -Qh(o.clientHeight - (c + d)) + "px " + -Qh(u) + "px",
                        threshold: Hh(0, Wh(1, l)) || 1
                    };
                    let p = !0;

                    function m(e) {
                        const t = e[0].intersectionRatio;
                        if (t !== l) {
                            if (!p) return a();
                            t ? a(!1, t) : n = setTimeout((() => {
                                a(!1, 1e-7)
                            }), 100)
                        }
                        p = !1
                    }
                    try {
                        r = new IntersectionObserver(m, {
                            ...f,
                            root: o.ownerDocument
                        })
                    } catch (e) {
                        r = new IntersectionObserver(m, f)
                    }
                    r.observe(e)
                }(!0), i
            }(u, n) : null;
            let d, f = -1,
                p = null;
            a && (p = new ResizeObserver((e => {
                let [r] = e;
                r && r.target === u && p && (p.unobserve(t), cancelAnimationFrame(f), f = requestAnimationFrame((() => {
                    p && p.observe(t)
                }))), n()
            })), u && !l && p.observe(u), p.observe(t));
            let m = l ? jd(e) : null;
            return l && function t() {
                const r = jd(e);
                !m || r.x === m.x && r.y === m.y && r.width === m.width && r.height === m.height || n(), m = r, d = requestAnimationFrame(t)
            }(), n(), () => {
                c.forEach((e => {
                    o && e.removeEventListener("scroll", n), i && e.removeEventListener("resize", n)
                })), h && h(), p && p.disconnect(), p = null, l && cancelAnimationFrame(d)
            }
        }
        var Qd = o(116),
            Yd = "undefined" != typeof document ? e.useLayoutEffect : e.useEffect;

        function $d(e, t) {
            if (e === t) return !0;
            if (typeof e != typeof t) return !1;
            if ("function" == typeof e && e.toString() === t.toString()) return !0;
            let n, r, o;
            if (e && t && "object" == typeof e) {
                if (Array.isArray(e)) {
                    if (n = e.length, n != t.length) return !1;
                    for (r = n; 0 != r--;)
                        if (!$d(e[r], t[r])) return !1;
                    return !0
                }
                if (o = Object.keys(e), n = o.length, n !== Object.keys(t).length) return !1;
                for (r = n; 0 != r--;)
                    if (!{}.hasOwnProperty.call(t, o[r])) return !1;
                for (r = n; 0 != r--;) {
                    const n = o[r];
                    if (!("_owner" === n && e.$$typeof || $d(e[n], t[n]))) return !1
                }
                return !0
            }
            return e != e && t != t
        }

        function Zd(e) {
            return "undefined" == typeof window ? 1 : (e.ownerDocument.defaultView || window).devicePixelRatio || 1
        }

        function Xd(e, t) {
            const n = Zd(e);
            return Math.round(t * n) / n
        }

        function Kd(t) {
            const n = e.useRef(t);
            return Yd((() => {
                n.current = t
            })), n
        }
        const Jd = t["useInsertionEffect".toString()] || (e => e());

        function ef(t) {
            const n = e.useRef((() => {}));
            return Jd((() => {
                n.current = t
            })), e.useCallback((function() {
                for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++) t[r] = arguments[r];
                return null == n.current ? void 0 : n.current(...t)
            }), [])
        }
        var tf = "undefined" != typeof document ? e.useLayoutEffect : e.useEffect;
        let nf = !1,
            rf = 0;
        const of = () => "floating-ui-" + rf++, af = t["useId".toString()] || function() {
            const [t, n] = e.useState((() => nf ? of() : void 0));
            return tf((() => {
                null == t && n(of())
            }), []), e.useEffect((() => {
                nf || (nf = !0)
            }), []), t
        }, sf = e.createContext(null), lf = e.createContext(null), uf = () => e.useContext(lf);

        function cf(e, t) {
            let n = e.filter((e => {
                    var n;
                    return e.parentId === t && (null == (n = e.context) ? void 0 : n.open)
                })),
                r = n;
            for (; r.length;) r = e.filter((e => {
                var t;
                return null == (t = r) ? void 0 : t.some((t => {
                    var n;
                    return e.parentId === t.id && (null == (n = e.context) ? void 0 : n.open)
                }))
            })), n = n.concat(r);
            return n
        }
        const hf = {
                pointerdown: "onPointerDown",
                mousedown: "onMouseDown",
                click: "onClick"
            },
            df = {
                pointerdown: "onPointerDownCapture",
                mousedown: "onMouseDownCapture",
                click: "onClickCapture"
            },
            ff = e => {
                var t, n;
                return {
                    escapeKey: "boolean" == typeof e ? e : null != (t = null == e ? void 0 : e.escapeKey) && t,
                    outsidePress: "boolean" == typeof e ? e : null == (n = null == e ? void 0 : e.outsidePress) || n
                }
            };

        function pf(t, n) {
            void 0 === n && (n = {});
            const {
                open: r,
                onOpenChange: o,
                nodeId: i,
                elements: {
                    reference: a,
                    domReference: s,
                    floating: l
                },
                dataRef: u
            } = t, {
                enabled: c = !0,
                escapeKey: h = !0,
                outsidePress: d = !0,
                outsidePressEvent: f = "pointerdown",
                referencePress: p = !1,
                referencePressEvent: m = "pointerdown",
                ancestorScroll: v = !1,
                bubbles: g,
                capture: y
            } = n, b = uf(), w = ef("function" == typeof d ? d : () => !1), _ = "function" == typeof d ? w : d, x = e.useRef(!1), E = e.useRef(!1), {
                escapeKey: S,
                outsidePress: k
            } = ff(g), {
                escapeKey: T,
                outsidePress: C
            } = ff(y), O = ef((e => {
                if (!r || !c || !h || "Escape" !== e.key) return;
                const t = b ? cf(b.nodesRef.current, i) : [];
                if (!S && (e.stopPropagation(), t.length > 0)) {
                    let e = !0;
                    if (t.forEach((t => {
                            var n;
                            null == (n = t.context) || !n.open || t.context.dataRef.current.__escapeKeyBubbles || (e = !1)
                        })), !e) return
                }
                o(!1, function(e) {
                    return "nativeEvent" in e
                }(e) ? e.nativeEvent : e, "escape-key")
            })), A = ef((e => {
                var t;
                const n = () => {
                    var t;
                    O(e), null == (t = Md(e)) || t.removeEventListener("keydown", n)
                };
                null == (t = Md(e)) || t.addEventListener("keydown", n)
            })), P = ef((e => {
                const t = x.current;
                x.current = !1;
                const n = E.current;
                if (E.current = !1, "click" === f && n) return;
                if (t) return;
                if ("function" == typeof _ && !_(e)) return;
                const r = Md(e),
                    a = Pd(l).querySelectorAll("[data-floating-ui-inert]");
                let u = vd(r) ? r : null;
                for (; u && !Ed(u);) {
                    const e = Td(u);
                    if (e === Pd(l).body || !vd(e)) break;
                    u = e
                }
                if (a.length && vd(r) && !r.matches("html,body") && !Ad(r, l) && Array.from(a).every((e => !Ad(u, e)))) return;
                if (gd(r) && l) {
                    const t = r.clientWidth > 0 && r.scrollWidth > r.clientWidth,
                        n = r.clientHeight > 0 && r.scrollHeight > r.clientHeight;
                    let o = n && e.offsetX > r.clientWidth;
                    if (n && "rtl" === Sd(r).direction && (o = e.offsetX <= r.offsetWidth - r.clientWidth), o || t && e.offsetY > r.clientHeight) return
                }
                const c = b && cf(b.nodesRef.current, i).some((t => {
                    var n;
                    return Rd(e, null == (n = t.context) ? void 0 : n.elements.floating)
                }));
                if (Rd(e, l) || Rd(e, s) || c) return;
                const h = b ? cf(b.nodesRef.current, i) : [];
                if (h.length > 0) {
                    let e = !0;
                    if (h.forEach((t => {
                            var n;
                            null == (n = t.context) || !n.open || t.context.dataRef.current.__outsidePressBubbles || (e = !1)
                        })), !e) return
                }
                o(!1, e, "outside-press")
            })), R = ef((e => {
                var t;
                const n = () => {
                    var t;
                    P(e), null == (t = Md(e)) || t.removeEventListener(f, n)
                };
                null == (t = Md(e)) || t.addEventListener(f, n)
            }));
            return e.useEffect((() => {
                if (!r || !c) return;

                function e(e) {
                    o(!1, e, "ancestor-scroll")
                }
                u.current.__escapeKeyBubbles = S, u.current.__outsidePressBubbles = k;
                const t = Pd(l);
                h && t.addEventListener("keydown", T ? A : O, T), _ && t.addEventListener(f, C ? R : P, C);
                let n = [];
                return v && (vd(s) && (n = Od(s)), vd(l) && (n = n.concat(Od(l))), !vd(a) && a && a.contextElement && (n = n.concat(Od(a.contextElement)))), n = n.filter((e => {
                    var n;
                    return e !== (null == (n = t.defaultView) ? void 0 : n.visualViewport)
                })), n.forEach((t => {
                    t.addEventListener("scroll", e, {
                        passive: !0
                    })
                })), () => {
                    h && t.removeEventListener("keydown", T ? A : O, T), _ && t.removeEventListener(f, C ? R : P, C), n.forEach((t => {
                        t.removeEventListener("scroll", e)
                    }))
                }
            }), [u, l, s, a, h, _, f, r, o, v, c, S, k, O, T, A, P, C, R]), e.useEffect((() => {
                x.current = !1
            }), [_, f]), e.useMemo((() => c ? {
                reference: {
                    onKeyDown: O,
                    [hf[m]]: e => {
                        p && o(!1, e.nativeEvent, "reference-press")
                    }
                },
                floating: {
                    onKeyDown: O,
                    onMouseDown() {
                        E.current = !0
                    },
                    onMouseUp() {
                        E.current = !0
                    },
                    [df[f]]: () => {
                        x.current = !0
                    }
                }
            } : {}), [c, p, f, m, o, O])
        }

        function mf(t) {
            var n;
            void 0 === t && (t = {});
            const {
                open: r = !1,
                onOpenChange: o,
                nodeId: i
            } = t, [a, s] = e.useState(null), l = (null == (n = t.elements) ? void 0 : n.reference) || a, u = function(t) {
                void 0 === t && (t = {});
                const {
                    placement: n = "bottom",
                    strategy: r = "absolute",
                    middleware: o = [],
                    platform: i,
                    elements: {
                        reference: a,
                        floating: s
                    } = {},
                    transform: l = !0,
                    whileElementsMounted: u,
                    open: c
                } = t, [h, d] = e.useState({
                    x: 0,
                    y: 0,
                    strategy: r,
                    placement: n,
                    middlewareData: {},
                    isPositioned: !1
                }), [f, p] = e.useState(o);
                $d(f, o) || p(o);
                const [m, v] = e.useState(null), [g, y] = e.useState(null), b = e.useCallback((e => {
                    e != E.current && (E.current = e, v(e))
                }), [v]), w = e.useCallback((e => {
                    e !== S.current && (S.current = e, y(e))
                }), [y]), _ = a || m, x = s || g, E = e.useRef(null), S = e.useRef(null), k = e.useRef(h), T = Kd(u), C = Kd(i), O = e.useCallback((() => {
                    if (!E.current || !S.current) return;
                    const e = {
                        placement: n,
                        strategy: r,
                        middleware: f
                    };
                    C.current && (e.platform = C.current), ((e, t, n) => {
                        const r = new Map,
                            o = {
                                platform: Hd,
                                ...n
                            },
                            i = {
                                ...o.platform,
                                _c: r
                            };
                        return (async (e, t, n) => {
                            const {
                                placement: r = "bottom",
                                strategy: o = "absolute",
                                middleware: i = [],
                                platform: a
                            } = n, s = i.filter(Boolean), l = await (null == a.isRTL ? void 0 : a.isRTL(t));
                            let u = await a.getElementRects({
                                    reference: e,
                                    floating: t,
                                    strategy: o
                                }),
                                {
                                    x: c,
                                    y: h
                                } = ld(u, r, l),
                                d = r,
                                f = {},
                                p = 0;
                            for (let n = 0; n < s.length; n++) {
                                const {
                                    name: i,
                                    fn: m
                                } = s[n], {
                                    x: v,
                                    y: g,
                                    data: y,
                                    reset: b
                                } = await m({
                                    x: c,
                                    y: h,
                                    initialPlacement: r,
                                    placement: d,
                                    strategy: o,
                                    middlewareData: f,
                                    rects: u,
                                    platform: a,
                                    elements: {
                                        reference: e,
                                        floating: t
                                    }
                                });
                                c = null != v ? v : c, h = null != g ? g : h, f = {
                                    ...f,
                                    [i]: {
                                        ...f[i],
                                        ...y
                                    }
                                }, b && p <= 50 && (p++, "object" == typeof b && (b.placement && (d = b.placement), b.rects && (u = !0 === b.rects ? await a.getElementRects({
                                    reference: e,
                                    floating: t,
                                    strategy: o
                                }) : b.rects), ({
                                    x: c,
                                    y: h
                                } = ld(u, d, l))), n = -1)
                            }
                            return {
                                x: c,
                                y: h,
                                placement: d,
                                strategy: o,
                                middlewareData: f
                            }
                        })(e, t, {
                            ...o,
                            platform: i
                        })
                    })(E.current, S.current, e).then((e => {
                        const t = {
                            ...e,
                            isPositioned: !0
                        };
                        A.current && !$d(k.current, t) && (k.current = t, Qd.flushSync((() => {
                            d(t)
                        })))
                    }))
                }), [f, n, r, C]);
                Yd((() => {
                    !1 === c && k.current.isPositioned && (k.current.isPositioned = !1, d((e => ({
                        ...e,
                        isPositioned: !1
                    }))))
                }), [c]);
                const A = e.useRef(!1);
                Yd((() => (A.current = !0, () => {
                    A.current = !1
                })), []), Yd((() => {
                    if (_ && (E.current = _), x && (S.current = x), _ && x) {
                        if (T.current) return T.current(_, x, O);
                        O()
                    }
                }), [_, x, O, T]);
                const P = e.useMemo((() => ({
                        reference: E,
                        floating: S,
                        setReference: b,
                        setFloating: w
                    })), [b, w]),
                    R = e.useMemo((() => ({
                        reference: _,
                        floating: x
                    })), [_, x]),
                    M = e.useMemo((() => {
                        const e = {
                            position: r,
                            left: 0,
                            top: 0
                        };
                        if (!R.floating) return e;
                        const t = Xd(R.floating, h.x),
                            n = Xd(R.floating, h.y);
                        return l ? {
                            ...e,
                            transform: "translate(" + t + "px, " + n + "px)",
                            ...Zd(R.floating) >= 1.5 && {
                                willChange: "transform"
                            }
                        } : {
                            position: r,
                            left: t,
                            top: n
                        }
                    }), [r, l, R.floating, h.x, h.y]);
                return e.useMemo((() => ({
                    ...h,
                    update: O,
                    refs: P,
                    elements: R,
                    floatingStyles: M
                })), [h, O, P, R, M])
            }(t), c = uf(), h = null != ((null == (x = e.useContext(sf)) ? void 0 : x.id) || null), d = ef(((e, t, n) => {
                e && (p.current.openEvent = t), m.emit("openchange", {
                    open: e,
                    event: t,
                    reason: n,
                    nested: h
                }), null == o || o(e, t, n)
            })), f = e.useRef(null), p = e.useRef({}), m = e.useState((() => function() {
                const e = new Map;
                return {
                    emit(t, n) {
                        var r;
                        null == (r = e.get(t)) || r.forEach((e => e(n)))
                    },
                    on(t, n) {
                        e.set(t, [...e.get(t) || [], n])
                    },
                    off(t, n) {
                        var r;
                        e.set(t, (null == (r = e.get(t)) ? void 0 : r.filter((e => e !== n))) || [])
                    }
                }
            }()))[0], v = af(), g = e.useCallback((e => {
                const t = vd(e) ? {
                    getBoundingClientRect: () => e.getBoundingClientRect(),
                    contextElement: e
                } : e;
                u.refs.setReference(t)
            }), [u.refs]), y = e.useCallback((e => {
                (vd(e) || null === e) && (f.current = e, s(e)), (vd(u.refs.reference.current) || null === u.refs.reference.current || null !== e && !vd(e)) && u.refs.setReference(e)
            }), [u.refs]), b = e.useMemo((() => ({
                ...u.refs,
                setReference: y,
                setPositionReference: g,
                domReference: f
            })), [u.refs, y, g]), w = e.useMemo((() => ({
                ...u.elements,
                domReference: l
            })), [u.elements, l]), _ = e.useMemo((() => ({
                ...u,
                refs: b,
                elements: w,
                dataRef: p,
                nodeId: i,
                floatingId: v,
                events: m,
                open: r,
                onOpenChange: d
            })), [u, i, v, m, r, d, b, w]);
            var x;
            return tf((() => {
                const e = null == c ? void 0 : c.nodesRef.current.find((e => e.id === i));
                e && (e.context = _)
            })), e.useMemo((() => ({
                ...u,
                context: _,
                refs: b,
                elements: w
            })), [u, b, w, _])
        }

        function vf(e, t, n) {
            const r = new Map;
            return {
                ..."floating" === n && {
                    tabIndex: -1
                },
                ...e,
                ...t.map((e => e ? e[n] : null)).concat(e).reduce(((e, t) => t ? (Object.entries(t).forEach((t => {
                    let [n, o] = t;
                    var i;
                    0 === n.indexOf("on") ? (r.has(n) || r.set(n, []), "function" == typeof o && (null == (i = r.get(n)) || i.push(o), e[n] = function() {
                        for (var e, t = arguments.length, o = new Array(t), i = 0; i < t; i++) o[i] = arguments[i];
                        return null == (e = r.get(n)) ? void 0 : e.map((e => e(...o))).find((e => void 0 !== e))
                    })) : e[n] = o
                })), e) : e), {})
            }
        }

        function gf(t) {
            void 0 === t && (t = []);
            const n = t,
                r = e.useCallback((e => vf(e, t, "reference")), n),
                o = e.useCallback((e => vf(e, t, "floating")), n),
                i = e.useCallback((e => vf(e, t, "item")), t.map((e => null == e ? void 0 : e.item)));
            return e.useMemo((() => ({
                getReferenceProps: r,
                getFloatingProps: o,
                getItemProps: i
            })), [r, o, i])
        }
        const yf = function() {
            return e.createElement("svg", {
                xmlns: "http://www.w3.org/2000/svg",
                height: "24px",
                viewBox: "0 -960 960 960",
                width: "24px",
                fill: "currentColor"
            }, e.createElement("path", {
                d: "M459-381 314-526q-3-3-4.5-6.5T308-540q0-8 5.5-14t14.5-6h304q9 0 14.5 6t5.5 14q0 2-6 14L501-381q-5 5-10 7t-11 2q-6 0-11-2t-10-7Z"
            }))
        };
        var bf = ["children"];

        function wf() {
            return wf = Object.assign ? Object.assign.bind() : function(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var n = arguments[t];
                    for (var r in n) Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r])
                }
                return e
            }, wf.apply(this, arguments)
        }
        const _f = (0, e.forwardRef)((function(t, n) {
                var r = t.children,
                    o = function(e, t) {
                        if (null == e) return {};
                        var n, r, o = function(e, t) {
                            if (null == e) return {};
                            var n, r, o = {},
                                i = Object.keys(e);
                            for (r = 0; r < i.length; r++) n = i[r], t.indexOf(n) >= 0 || (o[n] = e[n]);
                            return o
                        }(e, t);
                        if (Object.getOwnPropertySymbols) {
                            var i = Object.getOwnPropertySymbols(e);
                            for (r = 0; r < i.length; r++) n = i[r], t.indexOf(n) >= 0 || Object.prototype.propertyIsEnumerable.call(e, n) && (o[n] = e[n])
                        }
                        return o
                    }(t, bf);
                return e.createElement("ul", wf({
                    ref: n,
                    className: "oSIWKBnMN8ccXDwLo4W_"
                }, o), r)
            })),
            xf = function(t) {
                var n = t.title,
                    r = t.onClick,
                    o = t.isDisabled,
                    i = t.shouldAppearDisabled,
                    a = void 0 === i ? o : i;
                return e.createElement("li", {
                    className: Ou()("C55_4ckWhpXBK7mhoiXw", a && "J9cx9FyMIvL1n4PM4NjE")
                }, e.createElement("button", {
                    type: "button",
                    className: "BgNOAmsD3czopmugpwic",
                    onClick: function(e) {
                        return o || r(e)
                    }
                }, n))
            },
            Ef = "FYPqEGZzh40rYg2hYWyY";

        function Sf() {
            return Sf = Object.assign ? Object.assign.bind() : function(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var n = arguments[t];
                    for (var r in n) Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r])
                }
                return e
            }, Sf.apply(this, arguments)
        }

        function kf(e, t) {
            return function(e) {
                if (Array.isArray(e)) return e
            }(e) || function(e, t) {
                var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                if (null != n) {
                    var r, o, i, a, s = [],
                        l = !0,
                        u = !1;
                    try {
                        if (i = (n = n.call(e)).next, 0 === t) {
                            if (Object(n) !== n) return;
                            l = !1
                        } else
                            for (; !(l = (r = i.call(n)).done) && (s.push(r.value), s.length !== t); l = !0);
                    } catch (e) {
                        u = !0, o = e
                    } finally {
                        try {
                            if (!l && null != n.return && (a = n.return(), Object(a) !== a)) return
                        } finally {
                            if (u) throw o
                        }
                    }
                    return s
                }
            }(e, t) || function(e, t) {
                if (e) {
                    if ("string" == typeof e) return Tf(e, t);
                    var n = Object.prototype.toString.call(e).slice(8, -1);
                    return "Object" === n && e.constructor && (n = e.constructor.name), "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Tf(e, t) : void 0
                }
            }(e, t) || function() {
                throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
            }()
        }

        function Tf(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
            return r
        }
        const Cf = function(t) {
                var n = t.options,
                    r = t.placement,
                    o = void 0 === r ? "bottom-end" : r,
                    i = t.isDisabled,
                    a = t.dropdownId,
                    s = t.selectedKey,
                    l = kf(Gc(), 2),
                    u = l[0],
                    c = l[1],
                    h = kf((0, e.useState)(!1), 2),
                    d = h[0],
                    f = h[1],
                    p = [hd(), cd()];
                "top" === o && p.push(function(e) {
                    return void 0 === e && (e = 0), {
                        name: "offset",
                        options: e,
                        async fn(t) {
                            const {
                                x: n,
                                y: r
                            } = t, o = await async function(e, t) {
                                const {
                                    placement: n,
                                    platform: r,
                                    elements: o
                                } = e, i = await (null == r.isRTL ? void 0 : r.isRTL(o.floating)), a = Jh(n), s = ed(n), l = "y" === rd(n), u = ["left", "top"].includes(a) ? -1 : 1, c = i && l ? -1 : 1, h = Kh(t, e);
                                let {
                                    mainAxis: d,
                                    crossAxis: f,
                                    alignmentAxis: p
                                } = "number" == typeof h ? {
                                    mainAxis: h,
                                    crossAxis: 0,
                                    alignmentAxis: null
                                } : {
                                    mainAxis: 0,
                                    crossAxis: 0,
                                    alignmentAxis: null,
                                    ...h
                                };
                                return s && "number" == typeof p && (f = "end" === s ? -1 * p : p), l ? {
                                    x: f * c,
                                    y: d * u
                                } : {
                                    x: d * u,
                                    y: f * c
                                }
                            }(t, e);
                            return {
                                x: n + o.x,
                                y: r + o.y,
                                data: o
                            }
                        }
                    }
                }({
                    mainAxis: 30,
                    crossAxis: -30
                }));
                var m = mf({
                        placement: o,
                        whileElementsMounted: Gd,
                        onOpenChange: f,
                        open: d,
                        middleware: p,
                        strategy: "fixed"
                    }),
                    v = m.refs,
                    g = m.floatingStyles,
                    y = gf([pf(m.context)]),
                    b = y.getReferenceProps,
                    w = y.getFloatingProps,
                    _ = u.preferences.dropdownChoiceCache[a],
                    x = (s ? n.find((function(e) {
                        return e.key === s
                    })) : n.find((function(e) {
                        return e.key === _
                    }))) || n[0];
                return e.createElement("div", {
                    className: "eNYjmfb4gphEQBHsWSEb"
                }, e.createElement("button", {
                    type: "button",
                    className: Ou()("kIUcyGcrt24rGDG098be", i && Ef),
                    onClick: x.menuProps.onClick
                }, x.labelElement), e.createElement("button", Sf({
                    type: "button",
                    className: Ou()("EhQ3VTXoJWCMjK7f6TMQ", i && Ef),
                    ref: v.setReference
                }, b(), {
                    onClick: function() {
                        i || f((function(e) {
                            return !e
                        }))
                    }
                }), e.createElement(yf, null)), d && !i && e.createElement(_f, Sf({
                    ref: v.setFloating,
                    style: g
                }, w()), e.createElement(e.Fragment, null, n.map((function(t) {
                    var n = t.key,
                        r = t.menuProps;
                    return e.createElement(xf, Sf({
                        key: n
                    }, r, {
                        onClick: function(e) {
                            c({
                                type: Qc.SelectDropdownOption,
                                payload: {
                                    dropdownId: a,
                                    optionId: n
                                }
                            }), r.onClick(e)
                        }
                    }))
                })))))
            },
            Of = function() {
                var e = js();
                return function(t) {
                    return e("/pro", t && {
                        state: {
                            perkId: t
                        }
                    })
                }
            },
            Af = function() {
                return e.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    height: "24",
                    viewBox: "0 -960 960 960",
                    width: "24",
                    fill: "currentColor"
                }, e.createElement("path", {
                    d: "M480-337q-8 0-15-2.5t-13-8.5L308-492q-12-12-11.5-28t11.5-28q12-12 28.5-12.5T365-549l75 75v-286q0-17 11.5-28.5T480-800q17 0 28.5 11.5T520-760v286l75-75q12-12 28.5-11.5T652-548q11 12 11.5 28T652-492L508-348q-6 6-13 8.5t-15 2.5ZM240-160q-33 0-56.5-23.5T160-240v-80q0-17 11.5-28.5T200-360q17 0 28.5 11.5T240-320v80h480v-80q0-17 11.5-28.5T760-360q17 0 28.5 11.5T800-320v80q0 33-23.5 56.5T720-160H240Z"
                }))
            };
        var Pf = Uint8Array,
            Rf = Uint16Array,
            Mf = Int32Array,
            Df = new Pf([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, 0, 0, 0]),
            Nf = new Pf([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 0, 0]),
            If = (new Pf([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]), function(e, t) {
                for (var n = new Rf(31), r = 0; r < 31; ++r) n[r] = t += 1 << e[r - 1];
                var o = new Mf(n[30]);
                for (r = 1; r < 30; ++r)
                    for (var i = n[r]; i < n[r + 1]; ++i) o[i] = i - n[r] << 5 | r;
                return {
                    b: n,
                    r: o
                }
            }),
            Lf = If(Df, 2),
            qf = Lf.b,
            jf = Lf.r;
        qf[28] = 258, jf[258] = 28;
        for (var Ff = If(Nf, 0), Vf = (Ff.b, Ff.r, new Rf(32768)), Bf = 0; Bf < 32768; ++Bf) {
            var zf = (43690 & Bf) >> 1 | (21845 & Bf) << 1;
            zf = (61680 & (zf = (52428 & zf) >> 2 | (13107 & zf) << 2)) >> 4 | (3855 & zf) << 4, Vf[Bf] = ((65280 & zf) >> 8 | (255 & zf) << 8) >> 1
        }
        var Uf = new Pf(288);
        for (Bf = 0; Bf < 144; ++Bf) Uf[Bf] = 8;
        for (Bf = 144; Bf < 256; ++Bf) Uf[Bf] = 9;
        for (Bf = 256; Bf < 280; ++Bf) Uf[Bf] = 7;
        for (Bf = 280; Bf < 288; ++Bf) Uf[Bf] = 8;
        var Wf = new Pf(32);
        for (Bf = 0; Bf < 32; ++Bf) Wf[Bf] = 5;
        var Hf = ["unexpected EOF", "invalid block type", "invalid length/literal", "invalid distance", "stream finished", "no stream handler", , "no callback", "invalid UTF-8 data", "extra field too long", "date not in range 1980-2099", "filename too long", "stream finishing", "invalid zip data"],
            Gf = function(e, t, n) {
                var r = new Error(t || Hf[e]);
                if (r.code = e, Error.captureStackTrace && Error.captureStackTrace(r, Gf), !n) throw r;
                return r
            },
            Qf = new Pf(0),
            Yf = function() {
                for (var e = new Int32Array(256), t = 0; t < 256; ++t) {
                    for (var n = t, r = 9; --r;) n = (1 & n && -306674912) ^ n >>> 1;
                    e[t] = n
                }
                return e
            }(),
            $f = function(e, t, n) {
                for (; n; ++t) e[t] = n, n >>>= 8
            },
            Zf = "undefined" != typeof TextEncoder && new TextEncoder,
            Xf = "undefined" != typeof TextDecoder && new TextDecoder;
        try {
            Xf.decode(Qf, {
                stream: !0
            })
        } catch (e) {}

        function Kf(e, t) {
            if (t) {
                for (var n = new Pf(e.length), r = 0; r < e.length; ++r) n[r] = e.charCodeAt(r);
                return n
            }
            if (Zf) return Zf.encode(e);
            var o, i, a, s = e.length,
                l = new Pf(e.length + (e.length >> 1)),
                u = 0,
                c = function(e) {
                    l[u++] = e
                };
            for (r = 0; r < s; ++r) {
                if (u + 5 > l.length) {
                    var h = new Pf(u + 8 + (s - r << 1));
                    h.set(l), l = h
                }
                var d = e.charCodeAt(r);
                d < 128 || t ? c(d) : d < 2048 ? (c(192 | d >> 6), c(128 | 63 & d)) : d > 55295 && d < 57344 ? (c(240 | (d = 65536 + (1047552 & d) | 1023 & e.charCodeAt(++r)) >> 18), c(128 | d >> 12 & 63), c(128 | d >> 6 & 63), c(128 | 63 & d)) : (c(224 | d >> 12), c(128 | d >> 6 & 63), c(128 | 63 & d))
            }
            return o = l, (null == (i = 0) || i < 0) && (i = 0), (null == (a = u) || a > o.length) && (a = o.length), new Pf(o.subarray(i, a))
        }
        var Jf = function(e) {
                var t = 0;
                if (e)
                    for (var n in e) {
                        var r = e[n].length;
                        r > 65535 && Gf(9), t += r + 4
                    }
                return t
            },
            ep = function(e, t, n, r, o, i, a, s) {
                var l = r.length,
                    u = n.extra,
                    c = s && s.length,
                    h = Jf(u);
                $f(e, t, null != a ? 33639248 : 67324752), t += 4, null != a && (e[t++] = 20, e[t++] = n.os), e[t] = 20, t += 2, e[t++] = n.flag << 1 | (i < 0 && 8), e[t++] = o && 8, e[t++] = 255 & n.compression, e[t++] = n.compression >> 8;
                var d = new Date(null == n.mtime ? Date.now() : n.mtime),
                    f = d.getFullYear() - 1980;
                if ((f < 0 || f > 119) && Gf(10), $f(e, t, f << 25 | d.getMonth() + 1 << 21 | d.getDate() << 16 | d.getHours() << 11 | d.getMinutes() << 5 | d.getSeconds() >> 1), t += 4, -1 != i && ($f(e, t, n.crc), $f(e, t + 4, i < 0 ? -i - 2 : i), $f(e, t + 8, n.size)), $f(e, t + 12, l), $f(e, t + 14, h), t += 16, null != a && ($f(e, t, c), $f(e, t + 6, n.attrs), $f(e, t + 10, a), t += 14), e.set(r, t), t += l, h)
                    for (var p in u) {
                        var m = u[p],
                            v = m.length;
                        $f(e, t, +p), $f(e, t + 2, v), e.set(m, t + 4), t += 4 + v
                    }
                return c && (e.set(s, t), t += c), t
            },
            tp = function() {
                function e(e) {
                    var t;
                    this.filename = e, this.c = (t = -1, {
                        p: function(e) {
                            for (var n = t, r = 0; r < e.length; ++r) n = Yf[255 & n ^ e[r]] ^ n >>> 8;
                            t = n
                        },
                        d: function() {
                            return ~t
                        }
                    }), this.size = 0, this.compression = 0
                }
                return e.prototype.process = function(e, t) {
                    this.ondata(null, e, t)
                }, e.prototype.push = function(e, t) {
                    this.ondata || Gf(5), this.c.p(e), this.size += e.length, t && (this.crc = this.c.d()), this.process(e, t || !1)
                }, e
            }(),
            np = function() {
                function e(e) {
                    this.ondata = e, this.u = [], this.d = 1
                }
                return e.prototype.add = function(e) {
                    var t = this;
                    if (this.ondata || Gf(5), 2 & this.d) this.ondata(Gf(4 + 8 * (1 & this.d), 0, 1), null, !1);
                    else {
                        var n = Kf(e.filename),
                            r = n.length,
                            o = e.comment,
                            i = o && Kf(o),
                            a = r != e.filename.length || i && o.length != i.length,
                            s = r + Jf(e.extra) + 30;
                        r > 65535 && this.ondata(Gf(11, 0, 1), null, !1);
                        var l = new Pf(s);
                        ep(l, 0, e, n, a, -1);
                        var u = [l],
                            c = function() {
                                for (var e = 0, n = u; e < n.length; e++) {
                                    var r = n[e];
                                    t.ondata(null, r, !1)
                                }
                                u = []
                            },
                            h = this.d;
                        this.d = 0;
                        var d = this.u.length,
                            f = function(e, t) {
                                var n = {};
                                for (var r in e) n[r] = e[r];
                                for (var r in t) n[r] = t[r];
                                return n
                            }(e, {
                                f: n,
                                u: a,
                                o: i,
                                t: function() {
                                    e.terminate && e.terminate()
                                },
                                r: function() {
                                    if (c(), h) {
                                        var e = t.u[d + 1];
                                        e ? e.r() : t.d = 1
                                    }
                                    h = 1
                                }
                            }),
                            p = 0;
                        e.ondata = function(n, r, o) {
                            if (n) t.ondata(n, r, o), t.terminate();
                            else if (p += r.length, u.push(r), o) {
                                var i = new Pf(16);
                                $f(i, 0, 134695760), $f(i, 4, e.crc), $f(i, 8, p), $f(i, 12, e.size), u.push(i), f.c = p, f.b = s + p + 16, f.crc = e.crc, f.size = e.size, h && f.r(), h = 1
                            } else h && c()
                        }, this.u.push(f)
                    }
                }, e.prototype.end = function() {
                    var e = this;
                    2 & this.d ? this.ondata(Gf(4 + 8 * (1 & this.d), 0, 1), null, !0) : (this.d ? this.e() : this.u.push({
                        r: function() {
                            1 & e.d && (e.u.splice(-1, 1), e.e())
                        },
                        t: function() {}
                    }), this.d = 3)
                }, e.prototype.e = function() {
                    for (var e = 0, t = 0, n = 0, r = 0, o = this.u; r < o.length; r++) n += 46 + (l = o[r]).f.length + Jf(l.extra) + (l.o ? l.o.length : 0);
                    for (var i = new Pf(n + 22), a = 0, s = this.u; a < s.length; a++) {
                        var l = s[a];
                        ep(i, e, l, l.f, l.u, -l.c - 2, t, l.o), e += 46 + l.f.length + Jf(l.extra) + (l.o ? l.o.length : 0), t += l.b
                    }
                    var u, c, h, d, f;
                    u = i, c = e, h = this.u.length, d = n, f = t, $f(u, c, 101010256), $f(u, c + 8, h), $f(u, c + 10, h), $f(u, c + 12, d), $f(u, c + 16, f), this.ondata(null, i, !0), this.d = 2
                }, e.prototype.terminate = function() {
                    for (var e = 0, t = this.u; e < t.length; e++) t[e].t();
                    this.d = 2
                }, e
            }();
        "function" == typeof queueMicrotask ? queueMicrotask : "function" == typeof setTimeout && setTimeout;
        var rp = o(762);
        const op = function(e) {
            return 12 * Math.log(e) / Math.log(2)
        };

        function ip(e) {
            return ip = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                return typeof e
            } : function(e) {
                return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
            }, ip(e)
        }

        function ap() {
            ap = function() {
                return e
            };
            var e = {},
                t = Object.prototype,
                n = t.hasOwnProperty,
                r = Object.defineProperty || function(e, t, n) {
                    e[t] = n.value
                },
                o = "function" == typeof Symbol ? Symbol : {},
                i = o.iterator || "@@iterator",
                a = o.asyncIterator || "@@asyncIterator",
                s = o.toStringTag || "@@toStringTag";

            function l(e, t, n) {
                return Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }), e[t]
            }
            try {
                l({}, "")
            } catch (e) {
                l = function(e, t, n) {
                    return e[t] = n
                }
            }

            function u(e, t, n, o) {
                var i = t && t.prototype instanceof d ? t : d,
                    a = Object.create(i.prototype),
                    s = new k(o || []);
                return r(a, "_invoke", {
                    value: _(e, n, s)
                }), a
            }

            function c(e, t, n) {
                try {
                    return {
                        type: "normal",
                        arg: e.call(t, n)
                    }
                } catch (e) {
                    return {
                        type: "throw",
                        arg: e
                    }
                }
            }
            e.wrap = u;
            var h = {};

            function d() {}

            function f() {}

            function p() {}
            var m = {};
            l(m, i, (function() {
                return this
            }));
            var v = Object.getPrototypeOf,
                g = v && v(v(T([])));
            g && g !== t && n.call(g, i) && (m = g);
            var y = p.prototype = d.prototype = Object.create(m);

            function b(e) {
                ["next", "throw", "return"].forEach((function(t) {
                    l(e, t, (function(e) {
                        return this._invoke(t, e)
                    }))
                }))
            }

            function w(e, t) {
                function o(r, i, a, s) {
                    var l = c(e[r], e, i);
                    if ("throw" !== l.type) {
                        var u = l.arg,
                            h = u.value;
                        return h && "object" == ip(h) && n.call(h, "__await") ? t.resolve(h.__await).then((function(e) {
                            o("next", e, a, s)
                        }), (function(e) {
                            o("throw", e, a, s)
                        })) : t.resolve(h).then((function(e) {
                            u.value = e, a(u)
                        }), (function(e) {
                            return o("throw", e, a, s)
                        }))
                    }
                    s(l.arg)
                }
                var i;
                r(this, "_invoke", {
                    value: function(e, n) {
                        function r() {
                            return new t((function(t, r) {
                                o(e, n, t, r)
                            }))
                        }
                        return i = i ? i.then(r, r) : r()
                    }
                })
            }

            function _(e, t, n) {
                var r = "suspendedStart";
                return function(o, i) {
                    if ("executing" === r) throw new Error("Generator is already running");
                    if ("completed" === r) {
                        if ("throw" === o) throw i;
                        return {
                            value: void 0,
                            done: !0
                        }
                    }
                    for (n.method = o, n.arg = i;;) {
                        var a = n.delegate;
                        if (a) {
                            var s = x(a, n);
                            if (s) {
                                if (s === h) continue;
                                return s
                            }
                        }
                        if ("next" === n.method) n.sent = n._sent = n.arg;
                        else if ("throw" === n.method) {
                            if ("suspendedStart" === r) throw r = "completed", n.arg;
                            n.dispatchException(n.arg)
                        } else "return" === n.method && n.abrupt("return", n.arg);
                        r = "executing";
                        var l = c(e, t, n);
                        if ("normal" === l.type) {
                            if (r = n.done ? "completed" : "suspendedYield", l.arg === h) continue;
                            return {
                                value: l.arg,
                                done: n.done
                            }
                        }
                        "throw" === l.type && (r = "completed", n.method = "throw", n.arg = l.arg)
                    }
                }
            }

            function x(e, t) {
                var n = t.method,
                    r = e.iterator[n];
                if (void 0 === r) return t.delegate = null, "throw" === n && e.iterator.return && (t.method = "return", t.arg = void 0, x(e, t), "throw" === t.method) || "return" !== n && (t.method = "throw", t.arg = new TypeError("The iterator does not provide a '" + n + "' method")), h;
                var o = c(r, e.iterator, t.arg);
                if ("throw" === o.type) return t.method = "throw", t.arg = o.arg, t.delegate = null, h;
                var i = o.arg;
                return i ? i.done ? (t[e.resultName] = i.value, t.next = e.nextLoc, "return" !== t.method && (t.method = "next", t.arg = void 0), t.delegate = null, h) : i : (t.method = "throw", t.arg = new TypeError("iterator result is not an object"), t.delegate = null, h)
            }

            function E(e) {
                var t = {
                    tryLoc: e[0]
                };
                1 in e && (t.catchLoc = e[1]), 2 in e && (t.finallyLoc = e[2], t.afterLoc = e[3]), this.tryEntries.push(t)
            }

            function S(e) {
                var t = e.completion || {};
                t.type = "normal", delete t.arg, e.completion = t
            }

            function k(e) {
                this.tryEntries = [{
                    tryLoc: "root"
                }], e.forEach(E, this), this.reset(!0)
            }

            function T(e) {
                if (e) {
                    var t = e[i];
                    if (t) return t.call(e);
                    if ("function" == typeof e.next) return e;
                    if (!isNaN(e.length)) {
                        var r = -1,
                            o = function t() {
                                for (; ++r < e.length;)
                                    if (n.call(e, r)) return t.value = e[r], t.done = !1, t;
                                return t.value = void 0, t.done = !0, t
                            };
                        return o.next = o
                    }
                }
                return {
                    next: C
                }
            }

            function C() {
                return {
                    value: void 0,
                    done: !0
                }
            }
            return f.prototype = p, r(y, "constructor", {
                value: p,
                configurable: !0
            }), r(p, "constructor", {
                value: f,
                configurable: !0
            }), f.displayName = l(p, s, "GeneratorFunction"), e.isGeneratorFunction = function(e) {
                var t = "function" == typeof e && e.constructor;
                return !!t && (t === f || "GeneratorFunction" === (t.displayName || t.name))
            }, e.mark = function(e) {
                return Object.setPrototypeOf ? Object.setPrototypeOf(e, p) : (e.__proto__ = p, l(e, s, "GeneratorFunction")), e.prototype = Object.create(y), e
            }, e.awrap = function(e) {
                return {
                    __await: e
                }
            }, b(w.prototype), l(w.prototype, a, (function() {
                return this
            })), e.AsyncIterator = w, e.async = function(t, n, r, o, i) {
                void 0 === i && (i = Promise);
                var a = new w(u(t, n, r, o), i);
                return e.isGeneratorFunction(n) ? a : a.next().then((function(e) {
                    return e.done ? e.value : a.next()
                }))
            }, b(y), l(y, s, "Generator"), l(y, i, (function() {
                return this
            })), l(y, "toString", (function() {
                return "[object Generator]"
            })), e.keys = function(e) {
                var t = Object(e),
                    n = [];
                for (var r in t) n.push(r);
                return n.reverse(),
                    function e() {
                        for (; n.length;) {
                            var r = n.pop();
                            if (r in t) return e.value = r, e.done = !1, e
                        }
                        return e.done = !0, e
                    }
            }, e.values = T, k.prototype = {
                constructor: k,
                reset: function(e) {
                    if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(S), !e)
                        for (var t in this) "t" === t.charAt(0) && n.call(this, t) && !isNaN(+t.slice(1)) && (this[t] = void 0)
                },
                stop: function() {
                    this.done = !0;
                    var e = this.tryEntries[0].completion;
                    if ("throw" === e.type) throw e.arg;
                    return this.rval
                },
                dispatchException: function(e) {
                    if (this.done) throw e;
                    var t = this;

                    function r(n, r) {
                        return a.type = "throw", a.arg = e, t.next = n, r && (t.method = "next", t.arg = void 0), !!r
                    }
                    for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                        var i = this.tryEntries[o],
                            a = i.completion;
                        if ("root" === i.tryLoc) return r("end");
                        if (i.tryLoc <= this.prev) {
                            var s = n.call(i, "catchLoc"),
                                l = n.call(i, "finallyLoc");
                            if (s && l) {
                                if (this.prev < i.catchLoc) return r(i.catchLoc, !0);
                                if (this.prev < i.finallyLoc) return r(i.finallyLoc)
                            } else if (s) {
                                if (this.prev < i.catchLoc) return r(i.catchLoc, !0)
                            } else {
                                if (!l) throw new Error("try statement without catch or finally");
                                if (this.prev < i.finallyLoc) return r(i.finallyLoc)
                            }
                        }
                    }
                },
                abrupt: function(e, t) {
                    for (var r = this.tryEntries.length - 1; r >= 0; --r) {
                        var o = this.tryEntries[r];
                        if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                            var i = o;
                            break
                        }
                    }
                    i && ("break" === e || "continue" === e) && i.tryLoc <= t && t <= i.finallyLoc && (i = null);
                    var a = i ? i.completion : {};
                    return a.type = e, a.arg = t, i ? (this.method = "next", this.next = i.finallyLoc, h) : this.complete(a)
                },
                complete: function(e, t) {
                    if ("throw" === e.type) throw e.arg;
                    return "break" === e.type || "continue" === e.type ? this.next = e.arg : "return" === e.type ? (this.rval = this.arg = e.arg, this.method = "return", this.next = "end") : "normal" === e.type && t && (this.next = t), h
                },
                finish: function(e) {
                    for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                        var n = this.tryEntries[t];
                        if (n.finallyLoc === e) return this.complete(n.completion, n.afterLoc), S(n), h
                    }
                },
                catch: function(e) {
                    for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                        var n = this.tryEntries[t];
                        if (n.tryLoc === e) {
                            var r = n.completion;
                            if ("throw" === r.type) {
                                var o = r.arg;
                                S(n)
                            }
                            return o
                        }
                    }
                    throw new Error("illegal catch attempt")
                },
                delegateYield: function(e, t, n) {
                    return this.delegate = {
                        iterator: T(e),
                        resultName: t,
                        nextLoc: n
                    }, "next" === this.method && (this.arg = void 0), h
                }
            }, e
        }

        function sp(e, t, n, r, o, i, a) {
            try {
                var s = e[i](a),
                    l = s.value
            } catch (e) {
                return void n(e)
            }
            s.done ? t(l) : Promise.resolve(l).then(r, o)
        }
        var lp = function() {
            var e, t = (e = ap().mark((function e(t) {
                var n, r, o, i, a, s, l, u, c, h, d, f, p, m, v;
                return ap().wrap((function(e) {
                    for (;;) switch (e.prev = e.next) {
                        case 0:
                            return n = t.audioBuffer, r = t.playbackRate, o = t.reverbWetMix, i = t.targetPitchFrequencyRatio, a = t.startOffsetSeconds, s = t.endOffsetSeconds, l = t.lowBandDecibels, u = new wo(2, n.duration / r - s - a, Eo().sampleRate), c = new ta({
                                context: u,
                                decay: 5,
                                wet: o
                            }).toDestination(), e.next = 5, c.generate();
                        case 5:
                            return h = new ui({
                                context: u,
                                url: n,
                                playbackRate: r
                            }), d = [u, c, h], f = c, l > 0 && (p = new sa({
                                context: u,
                                lowFrequency: 160,
                                low: l
                            }).connect(f), f = p, d.push(p)), "number" == typeof i && i !== r && (m = new ea({
                                context: u,
                                pitch: op(i / r)
                            }).connect(f), f = m, d.push(m)), h.connect(f), h.start(void 0, a * r, n.duration / r - s - a), e.next = 14, u.render();
                        case 14:
                            return v = e.sent, d.forEach((function(e) {
                                return e.dispose()
                            })), e.abrupt("return", v);
                        case 17:
                        case "end":
                            return e.stop()
                    }
                }), e)
            })), function() {
                var t = this,
                    n = arguments;
                return new Promise((function(r, o) {
                    var i = e.apply(t, n);

                    function a(e) {
                        sp(i, r, o, a, s, "next", e)
                    }

                    function s(e) {
                        sp(i, r, o, a, s, "throw", e)
                    }
                    a(void 0)
                }))
            });
            return function(e) {
                return t.apply(this, arguments)
            }
        }();
        const up = lp,
            cp = function(e) {
                return new Promise((function(t) {
                    var n = new Worker(new URL(o.p + o.u(3), o.b));
                    n.addEventListener("message", (function e(r) {
                        var o = r.data;
                        n.removeEventListener("message", e), n.terminate(), t(new window.Blob([new DataView(o)], {
                            type: "audio/wav"
                        }))
                    }));
                    var r = Array.from({
                        length: e.numberOfChannels
                    }, (function(t, n) {
                        return e.getChannelData(n)
                    }));
                    n.postMessage({
                        length: e.length,
                        sampleRate: e.sampleRate,
                        channelData: r
                    }, r.map((function(e) {
                        return e.buffer
                    })))
                }))
            },
            hp = function(e) {
                return new Promise((function(t) {
                    var n = new Worker(new URL(o.p + o.u(564), o.b));
                    n.addEventListener("message", (function e(r) {
                        var o = r.data;
                        n.removeEventListener("message", e), n.terminate(), t(new window.Blob([new DataView(o)], {
                            type: "audio/mp3"
                        }))
                    }));
                    var r = Array.from({
                        length: e.numberOfChannels
                    }, (function(t, n) {
                        return e.getChannelData(n)
                    }));
                    n.postMessage({
                        length: e.length,
                        sampleRate: e.sampleRate,
                        channelData: r
                    }, r.map((function(e) {
                        return e.buffer
                    })))
                }))
            },
            dp = function(e) {
                var t = e.filename,
                    n = e.newExtension,
                    r = e.extra,
                    o = void 0 === r ? "" : r;
                return "".concat(function(e) {
                    return -1 === e.indexOf(".") ? e : e.slice(0, e.lastIndexOf("."))
                }(t), "-slowedandreverbstudio").concat(o, ".").concat(n)
            },
            fp = function() {
                return window.crypto.randomUUID()
            },
            pp = (0, e.createContext)({
                getAll: function() {
                    return Promise.resolve([])
                },
                get: function() {
                    return Promise.resolve(null)
                },
                put: function() {
                    return Promise.resolve()
                },
                remove: function() {
                    return Promise.resolve()
                },
                createWriteable: function() {
                    return Promise.resolve({
                        write: function() {
                            return Promise.resolve(void 0)
                        },
                        close: function() {
                            return Promise.resolve(void 0)
                        }
                    })
                },
                clear: function() {
                    return Promise.resolve()
                }
            });

        function mp(e) {
            return mp = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                return typeof e
            } : function(e) {
                return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
            }, mp(e)
        }

        function vp(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), n.push.apply(n, r)
            }
            return n
        }

        function gp(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? vp(Object(n), !0).forEach((function(t) {
                    yp(e, t, n[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : vp(Object(n)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }))
            }
            return e
        }

        function yp(e, t, n) {
            return t = function(e) {
                var t = function(e, t) {
                    if ("object" !== mp(e) || null === e) return e;
                    var n = e[Symbol.toPrimitive];
                    if (void 0 !== n) {
                        var r = n.call(e, "string");
                        if ("object" !== mp(r)) return r;
                        throw new TypeError("@@toPrimitive must return a primitive value.")
                    }
                    return String(e)
                }(e);
                return "symbol" === mp(t) ? t : String(t)
            }(t), t in e ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = n, e
        }

        function bp() {
            bp = function() {
                return e
            };
            var e = {},
                t = Object.prototype,
                n = t.hasOwnProperty,
                r = Object.defineProperty || function(e, t, n) {
                    e[t] = n.value
                },
                o = "function" == typeof Symbol ? Symbol : {},
                i = o.iterator || "@@iterator",
                a = o.asyncIterator || "@@asyncIterator",
                s = o.toStringTag || "@@toStringTag";

            function l(e, t, n) {
                return Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }), e[t]
            }
            try {
                l({}, "")
            } catch (e) {
                l = function(e, t, n) {
                    return e[t] = n
                }
            }

            function u(e, t, n, o) {
                var i = t && t.prototype instanceof d ? t : d,
                    a = Object.create(i.prototype),
                    s = new k(o || []);
                return r(a, "_invoke", {
                    value: _(e, n, s)
                }), a
            }

            function c(e, t, n) {
                try {
                    return {
                        type: "normal",
                        arg: e.call(t, n)
                    }
                } catch (e) {
                    return {
                        type: "throw",
                        arg: e
                    }
                }
            }
            e.wrap = u;
            var h = {};

            function d() {}

            function f() {}

            function p() {}
            var m = {};
            l(m, i, (function() {
                return this
            }));
            var v = Object.getPrototypeOf,
                g = v && v(v(T([])));
            g && g !== t && n.call(g, i) && (m = g);
            var y = p.prototype = d.prototype = Object.create(m);

            function b(e) {
                ["next", "throw", "return"].forEach((function(t) {
                    l(e, t, (function(e) {
                        return this._invoke(t, e)
                    }))
                }))
            }

            function w(e, t) {
                function o(r, i, a, s) {
                    var l = c(e[r], e, i);
                    if ("throw" !== l.type) {
                        var u = l.arg,
                            h = u.value;
                        return h && "object" == mp(h) && n.call(h, "__await") ? t.resolve(h.__await).then((function(e) {
                            o("next", e, a, s)
                        }), (function(e) {
                            o("throw", e, a, s)
                        })) : t.resolve(h).then((function(e) {
                            u.value = e, a(u)
                        }), (function(e) {
                            return o("throw", e, a, s)
                        }))
                    }
                    s(l.arg)
                }
                var i;
                r(this, "_invoke", {
                    value: function(e, n) {
                        function r() {
                            return new t((function(t, r) {
                                o(e, n, t, r)
                            }))
                        }
                        return i = i ? i.then(r, r) : r()
                    }
                })
            }

            function _(e, t, n) {
                var r = "suspendedStart";
                return function(o, i) {
                    if ("executing" === r) throw new Error("Generator is already running");
                    if ("completed" === r) {
                        if ("throw" === o) throw i;
                        return {
                            value: void 0,
                            done: !0
                        }
                    }
                    for (n.method = o, n.arg = i;;) {
                        var a = n.delegate;
                        if (a) {
                            var s = x(a, n);
                            if (s) {
                                if (s === h) continue;
                                return s
                            }
                        }
                        if ("next" === n.method) n.sent = n._sent = n.arg;
                        else if ("throw" === n.method) {
                            if ("suspendedStart" === r) throw r = "completed", n.arg;
                            n.dispatchException(n.arg)
                        } else "return" === n.method && n.abrupt("return", n.arg);
                        r = "executing";
                        var l = c(e, t, n);
                        if ("normal" === l.type) {
                            if (r = n.done ? "completed" : "suspendedYield", l.arg === h) continue;
                            return {
                                value: l.arg,
                                done: n.done
                            }
                        }
                        "throw" === l.type && (r = "completed", n.method = "throw", n.arg = l.arg)
                    }
                }
            }

            function x(e, t) {
                var n = t.method,
                    r = e.iterator[n];
                if (void 0 === r) return t.delegate = null, "throw" === n && e.iterator.return && (t.method = "return", t.arg = void 0, x(e, t), "throw" === t.method) || "return" !== n && (t.method = "throw", t.arg = new TypeError("The iterator does not provide a '" + n + "' method")), h;
                var o = c(r, e.iterator, t.arg);
                if ("throw" === o.type) return t.method = "throw", t.arg = o.arg, t.delegate = null, h;
                var i = o.arg;
                return i ? i.done ? (t[e.resultName] = i.value, t.next = e.nextLoc, "return" !== t.method && (t.method = "next", t.arg = void 0), t.delegate = null, h) : i : (t.method = "throw", t.arg = new TypeError("iterator result is not an object"), t.delegate = null, h)
            }

            function E(e) {
                var t = {
                    tryLoc: e[0]
                };
                1 in e && (t.catchLoc = e[1]), 2 in e && (t.finallyLoc = e[2], t.afterLoc = e[3]), this.tryEntries.push(t)
            }

            function S(e) {
                var t = e.completion || {};
                t.type = "normal", delete t.arg, e.completion = t
            }

            function k(e) {
                this.tryEntries = [{
                    tryLoc: "root"
                }], e.forEach(E, this), this.reset(!0)
            }

            function T(e) {
                if (e) {
                    var t = e[i];
                    if (t) return t.call(e);
                    if ("function" == typeof e.next) return e;
                    if (!isNaN(e.length)) {
                        var r = -1,
                            o = function t() {
                                for (; ++r < e.length;)
                                    if (n.call(e, r)) return t.value = e[r], t.done = !1, t;
                                return t.value = void 0, t.done = !0, t
                            };
                        return o.next = o
                    }
                }
                return {
                    next: C
                }
            }

            function C() {
                return {
                    value: void 0,
                    done: !0
                }
            }
            return f.prototype = p, r(y, "constructor", {
                value: p,
                configurable: !0
            }), r(p, "constructor", {
                value: f,
                configurable: !0
            }), f.displayName = l(p, s, "GeneratorFunction"), e.isGeneratorFunction = function(e) {
                var t = "function" == typeof e && e.constructor;
                return !!t && (t === f || "GeneratorFunction" === (t.displayName || t.name))
            }, e.mark = function(e) {
                return Object.setPrototypeOf ? Object.setPrototypeOf(e, p) : (e.__proto__ = p, l(e, s, "GeneratorFunction")), e.prototype = Object.create(y), e
            }, e.awrap = function(e) {
                return {
                    __await: e
                }
            }, b(w.prototype), l(w.prototype, a, (function() {
                return this
            })), e.AsyncIterator = w, e.async = function(t, n, r, o, i) {
                void 0 === i && (i = Promise);
                var a = new w(u(t, n, r, o), i);
                return e.isGeneratorFunction(n) ? a : a.next().then((function(e) {
                    return e.done ? e.value : a.next()
                }))
            }, b(y), l(y, s, "Generator"), l(y, i, (function() {
                return this
            })), l(y, "toString", (function() {
                return "[object Generator]"
            })), e.keys = function(e) {
                var t = Object(e),
                    n = [];
                for (var r in t) n.push(r);
                return n.reverse(),
                    function e() {
                        for (; n.length;) {
                            var r = n.pop();
                            if (r in t) return e.value = r, e.done = !1, e
                        }
                        return e.done = !0, e
                    }
            }, e.values = T, k.prototype = {
                constructor: k,
                reset: function(e) {
                    if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(S), !e)
                        for (var t in this) "t" === t.charAt(0) && n.call(this, t) && !isNaN(+t.slice(1)) && (this[t] = void 0)
                },
                stop: function() {
                    this.done = !0;
                    var e = this.tryEntries[0].completion;
                    if ("throw" === e.type) throw e.arg;
                    return this.rval
                },
                dispatchException: function(e) {
                    if (this.done) throw e;
                    var t = this;

                    function r(n, r) {
                        return a.type = "throw", a.arg = e, t.next = n, r && (t.method = "next", t.arg = void 0), !!r
                    }
                    for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                        var i = this.tryEntries[o],
                            a = i.completion;
                        if ("root" === i.tryLoc) return r("end");
                        if (i.tryLoc <= this.prev) {
                            var s = n.call(i, "catchLoc"),
                                l = n.call(i, "finallyLoc");
                            if (s && l) {
                                if (this.prev < i.catchLoc) return r(i.catchLoc, !0);
                                if (this.prev < i.finallyLoc) return r(i.finallyLoc)
                            } else if (s) {
                                if (this.prev < i.catchLoc) return r(i.catchLoc, !0)
                            } else {
                                if (!l) throw new Error("try statement without catch or finally");
                                if (this.prev < i.finallyLoc) return r(i.finallyLoc)
                            }
                        }
                    }
                },
                abrupt: function(e, t) {
                    for (var r = this.tryEntries.length - 1; r >= 0; --r) {
                        var o = this.tryEntries[r];
                        if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                            var i = o;
                            break
                        }
                    }
                    i && ("break" === e || "continue" === e) && i.tryLoc <= t && t <= i.finallyLoc && (i = null);
                    var a = i ? i.completion : {};
                    return a.type = e, a.arg = t, i ? (this.method = "next", this.next = i.finallyLoc, h) : this.complete(a)
                },
                complete: function(e, t) {
                    if ("throw" === e.type) throw e.arg;
                    return "break" === e.type || "continue" === e.type ? this.next = e.arg : "return" === e.type ? (this.rval = this.arg = e.arg, this.method = "return", this.next = "end") : "normal" === e.type && t && (this.next = t), h
                },
                finish: function(e) {
                    for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                        var n = this.tryEntries[t];
                        if (n.finallyLoc === e) return this.complete(n.completion, n.afterLoc), S(n), h
                    }
                },
                catch: function(e) {
                    for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                        var n = this.tryEntries[t];
                        if (n.tryLoc === e) {
                            var r = n.completion;
                            if ("throw" === r.type) {
                                var o = r.arg;
                                S(n)
                            }
                            return o
                        }
                    }
                    throw new Error("illegal catch attempt")
                },
                delegateYield: function(e, t, n) {
                    return this.delegate = {
                        iterator: T(e),
                        resultName: t,
                        nextLoc: n
                    }, "next" === this.method && (this.arg = void 0), h
                }
            }, e
        }

        function wp(e, t, n, r, o, i, a) {
            try {
                var s = e[i](a),
                    l = s.value
            } catch (e) {
                return void n(e)
            }
            s.done ? t(l) : Promise.resolve(l).then(r, o)
        }

        function _p(e) {
            return function() {
                var t = this,
                    n = arguments;
                return new Promise((function(r, o) {
                    var i = e.apply(t, n);

                    function a(e) {
                        wp(i, r, o, a, s, "next", e)
                    }

                    function s(e) {
                        wp(i, r, o, a, s, "throw", e)
                    }
                    a(void 0)
                }))
            }
        }

        function xp(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
            return r
        }
        const Ep = function() {
            var t = function(e, t) {
                    return function(e) {
                        if (Array.isArray(e)) return e
                    }(e) || function(e, t) {
                        var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                        if (null != n) {
                            var r, o, i, a, s = [],
                                l = !0,
                                u = !1;
                            try {
                                for (i = (n = n.call(e)).next, 0; !(l = (r = i.call(n)).done) && (s.push(r.value), 2 !== s.length); l = !0);
                            } catch (e) {
                                u = !0, o = e
                            } finally {
                                try {
                                    if (!l && null != n.return && (a = n.return(), Object(a) !== a)) return
                                } finally {
                                    if (u) throw o
                                }
                            }
                            return s
                        }
                    }(e) || function(e, t) {
                        if (e) {
                            if ("string" == typeof e) return xp(e, 2);
                            var n = Object.prototype.toString.call(e).slice(8, -1);
                            return "Object" === n && e.constructor && (n = e.constructor.name), "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? xp(e, 2) : void 0
                        }
                    }(e) || function() {
                        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                    }()
                }(Gc())[1],
                n = yl().isActive,
                r = (0, e.useContext)(pp),
                o = function() {
                    var e = _p(bp().mark((function e(o, i) {
                        var a, s, l, u, c, h, d;
                        return bp().wrap((function(e) {
                            for (;;) switch (e.prev = e.next) {
                                case 0:
                                    if (a = fp(), 0 !== (s = o.filter((function(e) {
                                            return Dh(e)
                                        }))).length) {
                                        e.next = 4;
                                        break
                                    }
                                    return e.abrupt("return");
                                case 4:
                                    if (t({
                                            type: Qc.StartRendering,
                                            payload: s.length
                                        }), !(l = s.length > 1)) {
                                        e.next = 9;
                                        break
                                    }
                                    return e.next = 9, r.clear();
                                case 9:
                                    if (!l) {
                                        e.next = 15;
                                        break
                                    }
                                    return e.next = 12, r.createWriteable(a);
                                case 12:
                                    e.t0 = e.sent, e.next = 16;
                                    break;
                                case 15:
                                    e.t0 = null;
                                case 16:
                                    u = e.t0, c = l ? new np((function(e, t, n) {
                                        e ? console.error(e) : u.write(t).then(_p(bp().mark((function e() {
                                            var t;
                                            return bp().wrap((function(e) {
                                                for (;;) switch (e.prev = e.next) {
                                                    case 0:
                                                        if (n) {
                                                            e.next = 2;
                                                            break
                                                        }
                                                        return e.abrupt("return");
                                                    case 2:
                                                        return e.next = 4, u.close();
                                                    case 4:
                                                        return c.terminate(), e.next = 7, r.get(a);
                                                    case 7:
                                                        t = e.sent, (0, rp.saveAs)(t, "slowedandreverbstudio.zip"), setTimeout((function() {
                                                            r.remove([a])
                                                        }), 45e3);
                                                    case 10:
                                                    case "end":
                                                        return e.stop()
                                                }
                                            }), e)
                                        }))))
                                    })) : null, h = new Set, d = s.map((function(e, r) {
                                        return function() {
                                            return up(n ? e : gp(gp({}, e), {}, {
                                                targetPitchFrequencyRatio: void 0,
                                                startOffsetSeconds: 0,
                                                endOffsetSeconds: 0,
                                                lowBandDecibels: 0
                                            })).then((function(e) {
                                                var t = "wav" === i ? cp(e) : hp(e);
                                                return e.dispose(), t
                                            })).then(function() {
                                                var n = _p(bp().mark((function n(o) {
                                                    var a, s, l;
                                                    return bp().wrap((function(n) {
                                                        for (;;) switch (n.prev = n.next) {
                                                            case 0:
                                                                if (a = dp({
                                                                        filename: e.name,
                                                                        newExtension: i
                                                                    }), c) {
                                                                    n.next = 5;
                                                                    break
                                                                }
                                                                return (0, rp.saveAs)(o, a), t({
                                                                    type: Qc.RemixRendered
                                                                }), n.abrupt("return");
                                                            case 5:
                                                                return h.has(a) && (a = dp({
                                                                    filename: e.name,
                                                                    newExtension: i,
                                                                    extra: "-".concat(r + 1)
                                                                })), n.next = 8, o.arrayBuffer();
                                                            case 8:
                                                                s = n.sent, h.add(a), l = new tp(a), c.add(l), l.push(new Uint8Array(s), !0), t({
                                                                    type: Qc.RemixRendered
                                                                });
                                                            case 14:
                                                            case "end":
                                                                return n.stop()
                                                        }
                                                    }), n)
                                                })));
                                                return function(e) {
                                                    return n.apply(this, arguments)
                                                }
                                            }()).catch((function(e) {
                                                console.error(e), t({
                                                    type: Qc.RemixRenderingFailed
                                                })
                                            })).finally((function() {
                                                var e = d.shift();
                                                e ? e() : c && c.end()
                                            }))
                                        }
                                    })), d.shift()();
                                case 21:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    })));
                    return function(t, n) {
                        return e.apply(this, arguments)
                    }
                }();
            return o
        };

        function Sp(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
            return r
        }
        const kp = function(t) {
                var n = t.remixes,
                    r = t.placement,
                    o = yl().isActive,
                    i = Of(),
                    a = Ep(),
                    s = function(e, t) {
                        return function(e) {
                            if (Array.isArray(e)) return e
                        }(e) || function(e, t) {
                            var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                            if (null != n) {
                                var r, o, i, a, s = [],
                                    l = !0,
                                    u = !1;
                                try {
                                    for (i = (n = n.call(e)).next, 0; !(l = (r = i.call(n)).done) && (s.push(r.value), 1 !== s.length); l = !0);
                                } catch (e) {
                                    u = !0, o = e
                                } finally {
                                    try {
                                        if (!l && null != n.return && (a = n.return(), Object(a) !== a)) return
                                    } finally {
                                        if (u) throw o
                                    }
                                }
                                return s
                            }
                        }(e) || function(e, t) {
                            if (e) {
                                if ("string" == typeof e) return Sp(e, 1);
                                var n = Object.prototype.toString.call(e).slice(8, -1);
                                return "Object" === n && e.constructor && (n = e.constructor.name), "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Sp(e, 1) : void 0
                            }
                        }(e) || function() {
                            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                        }()
                    }(Gc())[0];
                return s.pendingRenderCount > 0 ? e.createElement(Mu, {
                    isDisabled: !0,
                    shouldAppearDisabled: !0
                }, e.createElement(Tu, null), "Preparing download", " ", s.pendingRenderCount + s.renderedRemixCount > 1 && "".concat(s.renderedRemixCount + 1, " of ").concat(s.pendingRenderCount + s.renderedRemixCount)) : e.createElement(Cf, {
                    placement: r,
                    isDisabled: n.every((function(e) {
                        return !Dh(e)
                    })),
                    dropdownId: "download-format",
                    selectedKey: !o && "wav",
                    options: [{
                        key: "wav",
                        labelElement: o ? "Download WAV".concat(n.length > 1 ? "s" : "") : "Download",
                        menuProps: {
                            title: e.createElement(e.Fragment, null, e.createElement(Af, null), " Download WAV file", n.length > 1 ? "s" : ""),
                            onClick: function() {
                                return a(n, "wav")
                            }
                        }
                    }, {
                        key: "mp3",
                        labelElement: "Download MP3".concat(n.length > 1 ? "s" : ""),
                        menuProps: {
                            title: e.createElement(e.Fragment, null, e.createElement(Af, null), " Download MP3 file", n.length > 1 ? "s" : "", !o && e.createElement(Ec, null)),
                            shouldAppearDisabled: !o,
                            onClick: o ? function() {
                                return a(n, "mp3")
                            } : function() {
                                return i("mp3-downloads")
                            }
                        }
                    }]
                })
            },
            Tp = (0, e.createContext)({
                openFileAppendChooser: function() {},
                openFilePutChooser: function() {}
            }),
            Cp = function() {
                return (0, e.useContext)(Tp)
            },
            Op = function(t) {
                return e.createElement("div", {
                    className: "I4q0qfaThTQlnFJyJFls"
                }, e.createElement("div", {
                    key: "pro-countdown-infinite",
                    className: "Djm98UKd0E7j_JkAycuM",
                    style: {
                        animationDuration: "".concat(31536e8, "ms"),
                        animationDelay: "0ms",
                        animationIterationCount: "infinite"
                    }
                }))
            },
            Ap = function() {
                return e.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    height: "24",
                    viewBox: "0 -960 960 960",
                    width: "24",
                    fill: "currentColor"
                }, e.createElement("path", {
                    d: "m313-200 36 36q11 11 11 27.5T348-108q-11 11-28 11t-28-11L188-212q-12-12-12-28t12-28l104-104q11-11 27.5-11t28.5 11q12 12 12 28.5T348-315l-35 35h334l-36-36q-11-11-11-27.5t12-28.5q11-11 28-11t28 11l104 104q12 12 12 28t-12 28L668-108q-11 11-27.5 11T612-108q-12-12-12-28.5t12-28.5l35-35H313Zm-73-280q-17 0-28.5-11.5T200-520v-320q0-17 11.5-28.5T240-880q17 0 28.5 11.5T280-840v320q0 17-11.5 28.5T240-480Zm240 0q-17 0-28.5-11.5T440-520v-320q0-17 11.5-28.5T480-880q17 0 28.5 11.5T520-840v320q0 17-11.5 28.5T480-480Zm240 0q-17 0-28.5-11.5T680-520v-320q0-17 11.5-28.5T720-880q17 0 28.5 11.5T760-840v320q0 17-11.5 28.5T720-480Z"
                }))
            },
            Pp = function() {
                return e.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    height: "24",
                    viewBox: "0 -960 960 960",
                    width: "24",
                    fill: "currentColor"
                }, e.createElement("path", {
                    d: "M727-240H520q-17 0-28.5-11.5T480-280q0-17 11.5-28.5T520-320h207l-36-36q-11-11-11-27.5t12-28.5q11-11 28-11t28 11l104 104q12 12 12 28t-12 28L748-148q-12 12-28 11.5T692-149q-11-12-11.5-28t11.5-28l35-35ZM200-120q-33 0-56.5-23.5T120-200v-560q0-33 23.5-56.5T200-840h167q11-35 43-57.5t70-22.5q40 0 71.5 22.5T594-840h166q33 0 56.5 23.5T840-760v200q0 17-11.5 28.5T800-520q-17 0-28.5-11.5T760-560v-200h-80v80q0 17-11.5 28.5T640-640H320q-17 0-28.5-11.5T280-680v-80h-80v560h160q17 0 28.5 11.5T400-160q0 17-11.5 28.5T360-120H200Zm280-640q17 0 28.5-11.5T520-800q0-17-11.5-28.5T480-840q-17 0-28.5 11.5T440-800q0 17 11.5 28.5T480-760Z"
                }))
            },
            Rp = function() {
                return e.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    height: "24",
                    viewBox: "0 -960 960 960",
                    width: "24",
                    fill: "currentColor"
                }, e.createElement("path", {
                    d: "M482-337q8 0 15-2.5t13-8.5l112-112q17-17 22-41.5t-5-47.5q-10-23-30-37t-45-14q-25 0-45 15.5T482-552q-18-17-37.5-32.5T400-600q-25 0-45.5 13.5T324-550q-10 23-4.5 47.5T342-460l111 112q6 6 13.5 8.5T482-337ZM405-80q-15 0-26-10t-13-25l-12-93q-13-5-24.5-12T307-235l-87 36q-14 6-28 1.5T170-215L96-344q-8-13-5-28t15-24l75-57q-1-7-1-13.5v-27q0-6.5 1-13.5l-75-57q-12-9-15-24t5-28l74-129q8-13 22-17.5t28 1.5l87 36q11-8 23-15t24-12l12-93q2-15 13-25t26-10h150q15 0 26 10t13 25l12 93q13 5 24.5 12t22.5 15l87-36q14-6 28-1.5t22 17.5l74 129q8 13 5 28t-15 24l-75 57q1 7 1 13.5v27q0 6.5-2 13.5l75 57q12 9 15 24t-5 28l-74 128q-8 13-22.5 18t-28.5-1l-85-36q-11 8-23 15t-24 12l-12 93q-2 15-13 25t-26 10H405Z"
                }))
            },
            Mp = function() {
                return e.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    height: "24",
                    viewBox: "0 -960 960 960",
                    width: "24",
                    fill: "currentColor"
                }, e.createElement("path", {
                    d: "M480-160q-33 0-56.5-23.5T400-240q0-33 23.5-56.5T480-320q33 0 56.5 23.5T560-240q0 33-23.5 56.5T480-160Zm0-240q-33 0-56.5-23.5T400-480q0-33 23.5-56.5T480-560q33 0 56.5 23.5T560-480q0 33-23.5 56.5T480-400Zm0-240q-33 0-56.5-23.5T400-720q0-33 23.5-56.5T480-800q33 0 56.5 23.5T560-720q0 33-23.5 56.5T480-640Z"
                }))
            };

        function Dp() {
            return Dp = Object.assign ? Object.assign.bind() : function(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var n = arguments[t];
                    for (var r in n) Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r])
                }
                return e
            }, Dp.apply(this, arguments)
        }

        function Np(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
            return r
        }
        const Ip = function(t) {
                var n = t.menuItems,
                    r = t.placement,
                    o = void 0 === r ? "left-start" : r,
                    i = function(e, t) {
                        return function(e) {
                            if (Array.isArray(e)) return e
                        }(e) || function(e, t) {
                            var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                            if (null != n) {
                                var r, o, i, a, s = [],
                                    l = !0,
                                    u = !1;
                                try {
                                    for (i = (n = n.call(e)).next, 0; !(l = (r = i.call(n)).done) && (s.push(r.value), 2 !== s.length); l = !0);
                                } catch (e) {
                                    u = !0, o = e
                                } finally {
                                    try {
                                        if (!l && null != n.return && (a = n.return(), Object(a) !== a)) return
                                    } finally {
                                        if (u) throw o
                                    }
                                }
                                return s
                            }
                        }(e) || function(e, t) {
                            if (e) {
                                if ("string" == typeof e) return Np(e, 2);
                                var n = Object.prototype.toString.call(e).slice(8, -1);
                                return "Object" === n && e.constructor && (n = e.constructor.name), "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Np(e, 2) : void 0
                            }
                        }(e) || function() {
                            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                        }()
                    }((0, e.useState)(!1)),
                    a = i[0],
                    s = i[1],
                    l = mf({
                        placement: o,
                        whileElementsMounted: Gd,
                        onOpenChange: s,
                        open: a
                    }),
                    u = l.refs,
                    c = l.floatingStyles,
                    h = gf([pf(l.context)]),
                    d = h.getReferenceProps,
                    f = h.getFloatingProps;
                return e.createElement(e.Fragment, null, e.createElement(lh, Dp({
                    onClick: function(e) {
                        e.stopPropagation(), s((function(e) {
                            return !e
                        }))
                    },
                    ref: u.setReference
                }, d()), e.createElement(Mp, null)), a && e.createElement(_f, Dp({
                    ref: u.setFloating,
                    style: c
                }, f()), n.filter((function(e) {
                    return e
                })).map((function(t, n) {
                    var r = t.content,
                        o = t.onClick,
                        i = t.isDisabled,
                        a = t.shouldAppearDisabled,
                        l = void 0 === a ? i : a;
                    return e.createElement(xf, {
                        key: n,
                        title: r,
                        shouldAppearDisabled: l,
                        onClick: function(e) {
                            e.stopPropagation(), s(!1), i || o()
                        }
                    })
                }))))
            },
            Lp = "r3ObuilDECWyfqxrAwCL";

        function qp(e) {
            return qp = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                return typeof e
            } : function(e) {
                return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
            }, qp(e)
        }

        function jp(e, t, n) {
            return t = function(e) {
                var t = function(e, t) {
                    if ("object" !== qp(e) || null === e) return e;
                    var n = e[Symbol.toPrimitive];
                    if (void 0 !== n) {
                        var r = n.call(e, "string");
                        if ("object" !== qp(r)) return r;
                        throw new TypeError("@@toPrimitive must return a primitive value.")
                    }
                    return String(e)
                }(e);
                return "symbol" === qp(t) ? t : String(t)
            }(t), t in e ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = n, e
        }

        function Fp(e, t) {
            return function(e) {
                if (Array.isArray(e)) return e
            }(e) || function(e, t) {
                var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                if (null != n) {
                    var r, o, i, a, s = [],
                        l = !0,
                        u = !1;
                    try {
                        if (i = (n = n.call(e)).next, 0 === t) {
                            if (Object(n) !== n) return;
                            l = !1
                        } else
                            for (; !(l = (r = i.call(n)).done) && (s.push(r.value), s.length !== t); l = !0);
                    } catch (e) {
                        u = !0, o = e
                    } finally {
                        try {
                            if (!l && null != n.return && (a = n.return(), Object(a) !== a)) return
                        } finally {
                            if (u) throw o
                        }
                    }
                    return s
                }
            }(e, t) || function(e, t) {
                if (e) {
                    if ("string" == typeof e) return Vp(e, t);
                    var n = Object.prototype.toString.call(e).slice(8, -1);
                    return "Object" === n && e.constructor && (n = e.constructor.name), "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Vp(e, t) : void 0
                }
            }(e, t) || function() {
                throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
            }()
        }

        function Vp(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
            return r
        }
        const Bp = function(t) {
                var n = t.label,
                    r = t.min,
                    o = t.max,
                    i = t.stepSize,
                    a = t.remixProperty,
                    s = t.onChange,
                    l = yl().isActive,
                    u = Fp(Gc(), 2),
                    c = u[0],
                    h = u[1],
                    d = Of(),
                    f = Fp((0, e.useState)(!0), 2),
                    p = f[0],
                    m = f[1],
                    v = $c(c);
                return e.createElement("div", {
                    className: "lgx9SSqcFChOBylX120w"
                }, e.createElement("div", {
                    className: Lp
                }, n), e.createElement("div", {
                    className: "Vn36vnUa0qjMHIz_AI48"
                }, e.createElement(lh, {
                    onClick: function() {
                        l ? m((function(e) {
                            return !e
                        })) : d("precise-controls")
                    },
                    isMuted: !p,
                    hasIndicator: p,
                    shouldAppearDisabled: !l
                }, e.createElement(Ap, null)), e.createElement(_h, {
                    value: v[a],
                    min: r,
                    max: o,
                    step: p && i,
                    onChange: s
                }), e.createElement(Ip, {
                    menuItems: [c.remixes.length > 1 && {
                        content: e.createElement(e.Fragment, null, e.createElement(Pp, null), "Copy to others"),
                        onClick: function() {
                            h({
                                type: Qc.ChangeAll,
                                payload: jp({}, a, v[a])
                            })
                        }
                    }, {
                        content: e.createElement(e.Fragment, null, e.createElement(Rp, null), "Set as default", !l && e.createElement(Ec, null)),
                        onClick: l ? function() {
                            h({
                                type: Qc.SetDefaults,
                                payload: jp({}, a, v[a])
                            })
                        } : function() {
                            return d("custom-defaults")
                        },
                        shouldAppearDisabled: !l
                    }].filter((function(e) {
                        return e
                    }))
                })))
            },
            zp = function(e) {
                var t = "",
                    n = Math.floor(e / 3600);
                n > 0 && (t += n + ":");
                var r = n > 0 ? e % (60 * n * 60) : e,
                    o = Math.floor(r / 60);
                0 === t.length ? t += o + ":" : t += o < 10 ? "0" + o + ":" : o + ":";
                var i = Math.floor(o > 0 ? r % (60 * o) : r);
                return i < 10 && (t += "0"), t + i
            },
            Up = function(t) {
                var n = t.direction,
                    r = void 0 === n ? "vertical" : n;
                return e.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    height: "24px",
                    viewBox: "0 -960 960 960",
                    width: "24px",
                    fill: "currentColor",
                    style: "horizontal" === r ? {
                        transform: "rotate(90deg)"
                    } : {}
                }, e.createElement("path", {
                    d: "M200-400q-17 0-28.5-11.5T160-440q0-17 11.5-28.5T200-480h560q17 0 28.5 11.5T800-440q0 17-11.5 28.5T760-400H200Zm0-120q-17 0-28.5-11.5T160-560q0-17 11.5-28.5T200-600h560q17 0 28.5 11.5T800-560q0 17-11.5 28.5T760-520H200ZM480-80q-17 0-28.5-11.5T440-120v-88l-36 36q-11 11-28 11t-28-11q-11-11-11-28t11-28l104-104q6-6 13-8.5t15-2.5q8 0 15 2.5t13 8.5l104 104q11 11 11.5 27.5T612-172q-11 11-27.5 11.5T556-171l-36-35v86q0 17-11.5 28.5T480-80Zm0-577q-8 0-15-2.5t-13-8.5L348-772q-11-11-11-28t11-28q11-11 28-11t28 11l36 36v-88q0-17 11.5-28.5T480-920q17 0 28.5 11.5T520-880v88l36-36q11-11 28-11t28 11q11 11 11 28t-11 28L508-668q-6 6-13 8.5t-15 2.5Z"
                }))
            };

        function Wp(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
            return r
        }
        const Hp = function(t) {
                var n = t.audioBuffer,
                    r = t.playbackPositionSeconds,
                    o = t.playbackRate,
                    i = function(e, t) {
                        return function(e) {
                            if (Array.isArray(e)) return e
                        }(e) || function(e, t) {
                            var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                            if (null != n) {
                                var r, o, i, a, s = [],
                                    l = !0,
                                    u = !1;
                                try {
                                    for (i = (n = n.call(e)).next, 0; !(l = (r = i.call(n)).done) && (s.push(r.value), 2 !== s.length); l = !0);
                                } catch (e) {
                                    u = !0, o = e
                                } finally {
                                    try {
                                        if (!l && null != n.return && (a = n.return(), Object(a) !== a)) return
                                    } finally {
                                        if (u) throw o
                                    }
                                }
                                return s
                            }
                        }(e) || function(e, t) {
                            if (e) {
                                if ("string" == typeof e) return Wp(e, 2);
                                var n = Object.prototype.toString.call(e).slice(8, -1);
                                return "Object" === n && e.constructor && (n = e.constructor.name), "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Wp(e, 2) : void 0
                            }
                        }(e) || function() {
                            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                        }()
                    }((0, e.useState)(0)),
                    a = i[0],
                    s = i[1],
                    l = (0, e.useRef)(null),
                    u = (0, e.useRef)(null),
                    c = r / (n.duration / o);
                (0, e.useEffect)((function() {
                    if (u.current && s(u.current.getBoundingClientRect().width), Boolean(window.ResizeObserver)) {
                        var e = new ResizeObserver((function(e) {
                            e.forEach((function(e) {
                                e.contentRect && s(e.contentRect.width)
                            }))
                        }));
                        return e.observe(u.current),
                            function() {
                                e.disconnect()
                            }
                    }
                    var t = function() {
                        u.current && s(u.current.getBoundingClientRect().width)
                    };
                    return window.addEventListener("resize", t),
                        function() {
                            window.removeEventListener("resize", t)
                        }
                }), []);
                var h = (0, e.useMemo)((function() {
                        if (!n || !a) return [];
                        for (var e = Array.from({
                                length: n.numberOfChannels
                            }, (function(e, t) {
                                return n.getChannelData(t)
                            })), t = Math.max(Math.floor(e[0].length / (a / 3)), 1), r = [], o = 0, i = 0; i < Math.ceil(e[0].length / t); i += 1) {
                            for (var s = i * t, l = Math.min(s + t, e[0].length), u = 0, c = s; c < l; c += 1) {
                                var h = c % t;
                                u = (u * h + Math.abs(e[0][c])) / (h + 1)
                            }
                            var d = Math.abs(u);
                            r.push(d), d > o && (o = d)
                        }
                        return r.map((function(e) {
                            return e / o
                        }))
                    }), [n, a]),
                    d = Math.round(c * h.length);
                return (0, e.useEffect)((function() {
                    if (l.current && n && a) {
                        var e = l.current,
                            t = e.getContext("2d");
                        t.clearRect(0, 0, e.width, e.height), t.lineWidth = 2, h.forEach((function(n, r) {
                            var o = 3 * r + 1,
                                i = Math.max((e.height - 10) * n, 5),
                                a = e.height / 2 - i / 2;
                            t.beginPath(), t.moveTo(o, a), t.lineTo(o, a + i), t.strokeStyle = r > d ? "#888" : "#fff", t.stroke()
                        }))
                    }
                }), [n, a, d]), e.createElement("div", {
                    ref: u
                }, e.createElement("canvas", {
                    ref: l,
                    width: a,
                    height: "70"
                }))
            },
            Gp = "LeaNiIffEv1C4GgPiccs",
            Qp = "mxBrdw1QDmZjuYaJXZ26",
            Yp = "sJHMg2pI48JaD0KvQXpv",
            $p = "uGBbuoZOY7Wv8N0lDBJy";

        function Zp(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
            return r
        }
        const Xp = function(t) {
                var n = t.playbackPositionSeconds,
                    r = t.baseDuration,
                    o = t.playbackRate,
                    i = t.audioBuffer,
                    a = t.startOffsetSeconds,
                    s = t.endOffsetSeconds,
                    l = t.isTrimming,
                    u = t.lastProPreviewStartTimestamp,
                    c = t.onPlaybackPositionSecondsChange,
                    h = t.onStartOffsetSecondsChange,
                    d = t.onEndOffsetSecondsChange,
                    f = t.onTrimToggleClick,
                    p = (0, e.useRef)(null),
                    m = (0, e.useRef)(null),
                    v = (0, e.useRef)(null),
                    g = (0, e.useRef)(null),
                    y = function(e, t) {
                        return function(e) {
                            if (Array.isArray(e)) return e
                        }(e) || function(e, t) {
                            var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                            if (null != n) {
                                var r, o, i, a, s = [],
                                    l = !0,
                                    u = !1;
                                try {
                                    for (i = (n = n.call(e)).next, 0; !(l = (r = i.call(n)).done) && (s.push(r.value), 2 !== s.length); l = !0);
                                } catch (e) {
                                    u = !0, o = e
                                } finally {
                                    try {
                                        if (!l && null != n.return && (a = n.return(), Object(a) !== a)) return
                                    } finally {
                                        if (u) throw o
                                    }
                                }
                                return s
                            }
                        }(e) || function(e, t) {
                            if (e) {
                                if ("string" == typeof e) return Zp(e, 2);
                                var n = Object.prototype.toString.call(e).slice(8, -1);
                                return "Object" === n && e.constructor && (n = e.constructor.name), "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Zp(e, 2) : void 0
                            }
                        }(e) || function() {
                            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                        }()
                    }((0, e.useState)(0)),
                    b = y[0],
                    w = y[1],
                    _ = r / o,
                    x = yl().isActive;
                (0, e.useEffect)((function() {
                    if (p.current) return function(e, t) {
                        if (e) {
                            if (Boolean(window.ResizeObserver)) {
                                var n = new ResizeObserver((function() {
                                    w(p.current.getBoundingClientRect().width)
                                }));
                                return n.observe(e),
                                    function() {
                                        n.disconnect()
                                    }
                            }
                            var r = function e() {
                                e()
                            };
                            return window.addEventListener("resize", r),
                                function() {
                                    window.removeEventListener("resize", r)
                                }
                        }
                    }(p.current)
                }), []);
                var E = function(e) {
                        if (p.current) {
                            var t, r = p.current.getBoundingClientRect(),
                                o = r.x,
                                i = r.width,
                                l = (t = (e.clientX - o) / i, Math.max(Math.min(t, 1), 0)),
                                u = Math.min(Math.max(l * _, a), _ - s);
                            u !== n && c(u)
                        }
                    },
                    S = b && a / _ * b,
                    k = b && s / _ * b,
                    T = u && a + s > 0;
                return e.createElement("div", {
                    className: Ou()("aF8Apa5iMQLJrvYwBxkt", l && "Ej6OMK__4lGvpmsaosh8", ["iPhone", "iPad", "iOS"].includes(navigator.platform) && "uUYTfsM4HmG3LIt_FNVe")
                }, e.createElement("div", {
                    className: "uJalPsD2aNP_geb0NpcS",
                    ref: p,
                    onPointerDown: function(e) {
                        var t, n;
                        if (p.current)
                            if (E(e), l)
                                if (e.stopPropagation(), e.target === m.current || null !== (t = m.current) && void 0 !== t && t.contains(e.target)) {
                                    m.current.setPointerCapture(e.pointerId);
                                    var r = m.current.getBoundingClientRect().right;
                                    g.current = r - e.clientX
                                } else if (e.target === v.current || null !== (n = v.current) && void 0 !== n && n.contains(e.target)) {
                            v.current.setPointerCapture(e.pointerId);
                            var o = v.current.getBoundingClientRect().left;
                            g.current = o - e.clientX
                        } else p.current.setPointerCapture(e.pointerId);
                        else p.current.setPointerCapture(e.pointerId)
                    },
                    onPointerMove: function(e) {
                        var t, n, r;
                        if (null !== (t = m.current) && void 0 !== t && t.hasPointerCapture(e.pointerId)) {
                            var o, i = p.current.getBoundingClientRect().left,
                                a = Math.max(Math.min(e.clientX + g.current, (null === (o = v.current) || void 0 === o ? void 0 : o.getBoundingClientRect().left) - 1), i) - i;
                            h(a / b * _)
                        } else if (null !== (n = v.current) && void 0 !== n && n.hasPointerCapture(e.pointerId)) {
                            var s, l = p.current.getBoundingClientRect().right,
                                u = l - Math.max(Math.min(e.clientX + g.current, l), (null === (s = m.current) || void 0 === s ? void 0 : s.getBoundingClientRect().right) + 1);
                            d(u / b * _)
                        } else null !== (r = p.current) && void 0 !== r && r.hasPointerCapture(e.pointerId) && E(e)
                    },
                    onPointerUp: function(e) {
                        [p.current, m.current, v.current].forEach((function(t) {
                            return null == t ? void 0 : t.releasePointerCapture(e.pointerId)
                        }))
                    }
                }, e.createElement(Hp, {
                    audioBuffer: i,
                    playbackPositionSeconds: n,
                    playbackRate: o
                }), e.createElement("div", {
                    className: $p,
                    style: {
                        left: 0,
                        right: b - S
                    }
                }), e.createElement("div", {
                    className: $p,
                    style: {
                        left: b - k,
                        right: 0,
                        opacity: .7
                    }
                }), e.createElement("div", {
                    className: "V8coTh0x7m0WCDIoVu5Q",
                    style: {
                        left: S,
                        right: k
                    }
                }, e.createElement("div", {
                    className: Ou()(Gp, "gdK3eNXyCbp8mZ0h8Mmg", a > 0 && Yp),
                    ref: m,
                    onTouchStart: function(e) {
                        e.preventDefault(), e.stopPropagation()
                    }
                }, e.createElement("div", {
                    className: Qp
                })), e.createElement("div", {
                    className: Ou()(Gp, "mlPy4JMHndD3Px6_J4Dg", s > 0 && Yp),
                    ref: v
                }, e.createElement("div", {
                    className: Qp
                })))), e.createElement("div", {
                    className: "yBLalRrNUroDEkS4Q61Q"
                }, e.createElement("span", null, zp(Math.max(n - a, 0))), e.createElement("div", {
                    className: "ZrVAKUIMRraLbVlqNWgw"
                }, e.createElement(lh, {
                    onClick: f,
                    isMuted: !l
                }, e.createElement(Up, {
                    direction: "horizontal"
                })), x || e.createElement(e.Fragment, null, e.createElement(dl, {
                    to: "/pro",
                    style: {
                        textDecoration: "none"
                    },
                    state: {
                        perkId: "trim"
                    }
                }, e.createElement(Ec, {
                    isPreviewing: T
                })), T && e.createElement(Op, {
                    durationMs: _u,
                    startTimestamp: u
                }))), e.createElement("span", null, zp(_ - s - a))))
            },
            Kp = function(t) {
                var n = t.children,
                    r = t.onClick;
                return e.createElement("button", {
                    type: "button",
                    className: "cPpmR50KHaSnayLxBRLC",
                    onClick: r
                }, n)
            },
            Jp = function(e) {
                return e.defaults.playbackRate !== bu || e.defaults.reverbWetMix !== wu || e.defaults.lowBandDecibels > 0 || "number" == typeof e.defaults.targetPitchFrequencyRatio
            };

        function em(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
            return r
        }
        const tm = function() {
                var t = function(e, t) {
                        return function(e) {
                            if (Array.isArray(e)) return e
                        }(e) || function(e, t) {
                            var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                            if (null != n) {
                                var r, o, i, a, s = [],
                                    l = !0,
                                    u = !1;
                                try {
                                    for (i = (n = n.call(e)).next, 0; !(l = (r = i.call(n)).done) && (s.push(r.value), 2 !== s.length); l = !0);
                                } catch (e) {
                                    u = !0, o = e
                                } finally {
                                    try {
                                        if (!l && null != n.return && (a = n.return(), Object(a) !== a)) return
                                    } finally {
                                        if (u) throw o
                                    }
                                }
                                return s
                            }
                        }(e) || function(e, t) {
                            if (e) {
                                if ("string" == typeof e) return em(e, 2);
                                var n = Object.prototype.toString.call(e).slice(8, -1);
                                return "Object" === n && e.constructor && (n = e.constructor.name), "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? em(e, 2) : void 0
                            }
                        }(e) || function() {
                            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                        }()
                    }(Gc()),
                    n = t[0],
                    r = t[1],
                    o = Jp(n),
                    i = $c(n),
                    a = yl().isActive,
                    s = function(e) {
                        return function() {
                            i && Yc(n) && r({
                                type: Qc.ChangeRemixSettings,
                                payload: {
                                    remixId: i.id,
                                    settings: e
                                }
                            })
                        }
                    },
                    l = s({
                        playbackRate: bu,
                        reverbWetMix: wu,
                        targetPitchFrequencyRatio: void 0,
                        lowBandDecibels: 0
                    }),
                    u = s({
                        playbackRate: 1.2,
                        reverbWetMix: 0,
                        targetPitchFrequencyRatio: void 0,
                        lowBandDecibels: 0
                    }),
                    c = s(n.defaults);
                return e.createElement("ul", {
                    className: "wUT8ywMD5kN8Z22lH2GR"
                }, e.createElement("li", null, e.createElement(Mu, {
                    onClick: l
                }, "Slowed+Reverb")), e.createElement("li", null, e.createElement(Mu, {
                    onClick: u
                }, "Nightcore")), a && o && e.createElement("li", null, e.createElement(Mu, {
                    onClick: c
                }, "Default")))
            },
            nm = {
                "remix-editor": "XmBNgfFHb0AhiiIRuwhi",
                "remix-editor--empty": "hwgU8B65zI_PKVYSEi_R",
                "remix-editor__file-control": "GS5XR6PiWWddi35FssNv",
                "remix-editor__timeline": "y_MUC1AnhKYa2xCfFo8d",
                "remix-editor__presets": "A1FErFMDDqHiND1sxlWY",
                "remix-editor__slider": "lVLc7ESTQL4qN6BWsDoU",
                "remix-editor__slider__label": "MaaILoBIZwqkCCViq4dh",
                "remix-editor__slider__control": "N55MzZmEHYiZ4SbRJaGw",
                "remix-editor__slider__preview": "S9MEI3IiYL8Eq5VWOxnJ",
                "remix-editor__media-controls": "ELR55Yg5qWSkTBu_CY7F",
                "remix-editor__volume": "TtuxhxFkGWPY3lZSqNJv",
                "remix-editor__feature-preview": "rvtins2V7g4THcpEvSRm",
                "remix-editor__feature-preview__top": "ex7oRBh3_2dzFUJr6dtz",
                "beta-badge": "W9nykCTFjlllwicAqj4C"
            };

        function rm(e, t) {
            return function(e) {
                if (Array.isArray(e)) return e
            }(e) || function(e, t) {
                var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                if (null != n) {
                    var r, o, i, a, s = [],
                        l = !0,
                        u = !1;
                    try {
                        if (i = (n = n.call(e)).next, 0 === t) {
                            if (Object(n) !== n) return;
                            l = !1
                        } else
                            for (; !(l = (r = i.call(n)).done) && (s.push(r.value), s.length !== t); l = !0);
                    } catch (e) {
                        u = !0, o = e
                    } finally {
                        try {
                            if (!l && null != n.return && (a = n.return(), Object(a) !== a)) return
                        } finally {
                            if (u) throw o
                        }
                    }
                    return s
                }
            }(e, t) || function(e, t) {
                if (e) {
                    if ("string" == typeof e) return om(e, t);
                    var n = Object.prototype.toString.call(e).slice(8, -1);
                    return "Object" === n && e.constructor && (n = e.constructor.name), "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? om(e, t) : void 0
                }
            }(e, t) || function() {
                throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
            }()
        }

        function om(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
            return r
        }
        var im = {
                none: "all",
                all: "one",
                one: "none"
            },
            am = function(t) {
                var n = t.lastProPreviewStartTimestamp,
                    r = rm(Gc(), 2),
                    o = r[0],
                    i = r[1],
                    a = $c(o),
                    s = yl().isActive,
                    l = "number" == typeof(null == a ? void 0 : a.targetPitchFrequencyRatio),
                    u = Boolean(n && a.targetPitchFrequencyRatio);
                return e.createElement(e.Fragment, null, e.createElement(Uh, {
                    isOn: l,
                    onSwitch: l ? function() {
                        i({
                            type: Qc.ChangeTargetPitchFrequencyRatio,
                            payload: {
                                remixId: a.id,
                                targetPitchFrequencyRatio: void 0
                            }
                        })
                    } : function() {
                        i({
                            type: Qc.ChangeTargetPitchFrequencyRatio,
                            payload: {
                                remixId: a.id,
                                targetPitchFrequencyRatio: 1
                            }
                        })
                    }
                }), "Pitch (", l ? Vh(a.targetPitchFrequencyRatio) : jh(a.playbackRate), ")", !s && e.createElement(e.Fragment, null, e.createElement(dl, {
                    to: "/pro",
                    style: {
                        textDecoration: "none"
                    },
                    state: {
                        perkId: "independent-pitch"
                    }
                }, e.createElement(Ec, {
                    isPreviewing: u
                })), u && e.createElement(Op, {
                    durationMs: _u,
                    startTimestamp: n
                })), e.createElement("span", {
                    className: nm["beta-badge"]
                }, "Beta"))
            };
        const sm = function(t) {
                var n = t.lastProPreviewStartTimestamp,
                    r = rm(Gc(), 2),
                    o = r[0],
                    i = r[1],
                    a = $c(o),
                    s = Mh(),
                    l = yl().isActive,
                    u = Cp().openFilePutChooser;
                if (!a || !Yc(o)) return e.createElement("div", {
                    className: Ou()(nm["remix-editor"], nm["remix-editor--empty"])
                }, "Choose a remix from the list");
                var c = "number" == typeof(null == a ? void 0 : a.targetPitchFrequencyRatio),
                    h = Dh(a),
                    d = o.pendingRenderCount > 0;
                return e.createElement("div", {
                    className: Ou()(nm["remix-editor"], d && nm["remix-editor--when-rendering"], !l && nm["remix-editor--has-ad-footer-below"])
                }, e.createElement("div", {
                    className: nm["remix-editor__file-control"]
                }, e.createElement(Kp, {
                    onClick: u
                }, a.name)), e.createElement("div", {
                    className: nm["remix-editor__timeline"]
                }, h ? e.createElement(Xp, {
                    playbackPositionSeconds: o.playbackPositionSeconds,
                    baseDuration: a.audioBuffer.duration,
                    playbackRate: a.playbackRate,
                    onPlaybackPositionSecondsChange: function(e) {
                        i({
                            type: Qc.Seek,
                            payload: e
                        })
                    },
                    audioBuffer: a.audioBuffer,
                    startOffsetSeconds: a.startOffsetSeconds,
                    endOffsetSeconds: a.endOffsetSeconds,
                    isTrimming: o.isTrimming,
                    lastProPreviewStartTimestamp: n,
                    onTrimToggleClick: function() {
                        i({
                            type: o.isTrimming ? Qc.StopTrim : Qc.StartTrim
                        })
                    },
                    onStartOffsetSecondsChange: function(e) {
                        i({
                            type: Qc.ChangeStartOffsetSeconds,
                            payload: {
                                remixId: a.id,
                                startOffsetSeconds: e
                            }
                        })
                    },
                    onEndOffsetSecondsChange: function(e) {
                        i({
                            type: Qc.ChangeEndOffsetSeconds,
                            payload: {
                                remixId: a.id,
                                endOffsetSeconds: e
                            }
                        })
                    }
                }) : e.createElement(Tu, {
                    size: "2x"
                })), e.createElement("div", {
                    className: nm["remix-editor__presets"]
                }, "Presets", e.createElement(tm, null)), e.createElement(Bp, {
                    label: "Speed (".concat(jh(a.playbackRate), ")"),
                    min: .5,
                    max: 1.5,
                    stepSize: .05,
                    remixProperty: "playbackRate",
                    onChange: function(e) {
                        i({
                            type: Qc.ChangePlaybackRate,
                            payload: {
                                remixId: a.id,
                                playbackRate: e
                            }
                        })
                    }
                }), e.createElement(Bp, {
                    label: "Reverb (".concat(Fh(a.reverbWetMix), ")"),
                    min: 0,
                    max: 1,
                    stepSize: .05,
                    remixProperty: "reverbWetMix",
                    onChange: function(e) {
                        i({
                            type: Qc.ChangeReverbWetMix,
                            payload: {
                                remixId: a.id,
                                reverbWetMix: e
                            }
                        })
                    }
                }), c ? e.createElement(Bp, {
                    label: e.createElement(am, {
                        lastProPreviewStartTimestamp: n
                    }),
                    min: .5,
                    max: 1.5,
                    stepSize: .05,
                    remixProperty: "targetPitchFrequencyRatio",
                    onChange: function(e) {
                        i({
                            type: Qc.ChangeTargetPitchFrequencyRatio,
                            payload: {
                                remixId: a.id,
                                targetPitchFrequencyRatio: e
                            }
                        })
                    }
                }) : e.createElement("div", {
                    className: Lp
                }, e.createElement(am, null)), e.createElement(Bp, {
                    label: e.createElement(e.Fragment, null, "Bass boost (", Bh(a.lowBandDecibels), ")", !l && e.createElement(e.Fragment, null, e.createElement(dl, {
                        to: "/pro",
                        style: {
                            textDecoration: "none"
                        },
                        state: {
                            perkId: "eq"
                        }
                    }, e.createElement(Ec, {
                        isPreviewing: Boolean(n && a.lowBandDecibels)
                    })), Boolean(n && a.lowBandDecibels) && e.createElement(Op, {
                        durationMs: _u,
                        startTimestamp: n
                    }))),
                    min: 0,
                    max: 10,
                    stepSize: .5,
                    remixProperty: "lowBandDecibels",
                    onChange: function(e) {
                        i({
                            type: Qc.ChangeLowBandDecibels,
                            payload: {
                                remixId: a.id,
                                lowBandDecibels: e
                            }
                        })
                    }
                }), e.createElement("div", {
                    className: nm["remix-editor__media-controls"]
                }, e.createElement("div", {
                    style: {
                        width: "24px"
                    }
                }), e.createElement(lh, {
                    onClick: function() {
                        i({
                            type: Qc.SkipPrevious
                        })
                    }
                }, e.createElement(mh, null)), e.createElement(lh, {
                    onClick: function() {
                        o.isPlaying ? i({
                            type: Qc.Pause
                        }) : i({
                            type: Qc.Play,
                            payload: a
                        })
                    }
                }, o.isPlaying ? e.createElement(ph, null) : e.createElement(fh, null)), e.createElement(lh, {
                    onClick: function() {
                        i({
                            type: Qc.SkipNext
                        })
                    }
                }, e.createElement(vh, null)), e.createElement(lh, {
                    onClick: function() {
                        i({
                            type: Qc.ChangeLoopMode,
                            payload: im[o.loopMode]
                        })
                    },
                    hasIndicator: "none" !== o.loopMode,
                    isMuted: "none" === o.loopMode
                }, "one" === o.loopMode ? e.createElement(yh, null) : e.createElement(gh, null))), e.createElement("div", {
                    className: nm["remix-editor__volume"]
                }, e.createElement(kh, null)), !l && n ? e.createElement("div", {
                    className: nm["remix-editor__feature-preview"]
                }, e.createElement("div", {
                    className: nm["remix-editor__feature-preview__top"]
                }, e.createElement(Op, {
                    durationMs: _u,
                    startTimestamp: n
                }), e.createElement("span", null, "Previewing", " ", e.createElement(dl, {
                    to: "/pro",
                    style: {
                        textDecoration: "none"
                    }
                }, e.createElement(Ec, {
                    isPreviewing: !0
                })), "features")), e.createElement(Mu, {
                    onClick: function() {
                        i({
                            type: Qc.EndProPreview
                        })
                    }
                }, "End preview")) : e.createElement(kp, {
                    placement: s.md ? "bottom-end" : "top",
                    remixes: [a]
                }))
            },
            lm = function(t) {
                var n = t.unitId,
                    r = t.format,
                    o = t.fullWidthResponsive,
                    i = t.className;
                return (0, e.useEffect)((function() {
                    if ("localhost" !== window.location.hostname) try {
                        (window.adsbygoogle = window.adsbygoogle || []).push({})
                    } catch (e) {
                        console.error(e)
                    }
                }), []), e.createElement("ins", {
                    className: Ou()("adsbygoogle", i),
                    "data-ad-client": "ca-pub-0457130391447768",
                    "data-ad-slot": n,
                    "data-ad-format": r,
                    "data-full-width-responsive": o
                })
            },
            um = function() {
                return e.createElement(lm, {
                    unitId: "6602994805",
                    fullWidthResponsive: "false",
                    className: "XgBTAFoibRaIAb8P7Zg8"
                })
            },
            cm = function() {
                return e.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    height: "24",
                    viewBox: "0 -960 960 960",
                    width: "24",
                    fill: "currentColor"
                }, e.createElement("path", {
                    d: "M480-362q-8 0-15-2.5t-13-8.5L268-557q-11-11-11-28t11-28q11-11 28-11t28 11l156 156 156-156q11-11 28-11t28 11q11 11 11 28t-11 28L508-373q-6 6-13 8.5t-15 2.5Z"
                }))
            };

        function hm(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
            return r
        }
        const dm = function(t) {
                var n = Is(),
                    r = function(e, t) {
                        return function(e) {
                            if (Array.isArray(e)) return e
                        }(e) || function(e, t) {
                            var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                            if (null != n) {
                                var r, o, i, a, s = [],
                                    l = !0,
                                    u = !1;
                                try {
                                    for (i = (n = n.call(e)).next, 0; !(l = (r = i.call(n)).done) && (s.push(r.value), 2 !== s.length); l = !0);
                                } catch (e) {
                                    u = !0, o = e
                                } finally {
                                    try {
                                        if (!l && null != n.return && (a = n.return(), Object(a) !== a)) return
                                    } finally {
                                        if (u) throw o
                                    }
                                }
                                return s
                            }
                        }(e) || function(e, t) {
                            if (e) {
                                if ("string" == typeof e) return hm(e, 2);
                                var n = Object.prototype.toString.call(e).slice(8, -1);
                                return "Object" === n && e.constructor && (n = e.constructor.name), "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? hm(e, 2) : void 0
                            }
                        }(e) || function() {
                            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                        }()
                    }((0, e.useState)(n)),
                    o = r[0],
                    i = r[1];
                n !== o && (i(n), t(n))
            },
            fm = "mdeNbNnJOsZ8Myj6IINa";

        function pm(e, t) {
            return function(e) {
                if (Array.isArray(e)) return e
            }(e) || function(e, t) {
                var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                if (null != n) {
                    var r, o, i, a, s = [],
                        l = !0,
                        u = !1;
                    try {
                        if (i = (n = n.call(e)).next, 0 === t) {
                            if (Object(n) !== n) return;
                            l = !1
                        } else
                            for (; !(l = (r = i.call(n)).done) && (s.push(r.value), s.length !== t); l = !0);
                    } catch (e) {
                        u = !0, o = e
                    } finally {
                        try {
                            if (!l && null != n.return && (a = n.return(), Object(a) !== a)) return
                        } finally {
                            if (u) throw o
                        }
                    }
                    return s
                }
            }(e, t) || function(e, t) {
                if (e) {
                    if ("string" == typeof e) return mm(e, t);
                    var n = Object.prototype.toString.call(e).slice(8, -1);
                    return "Object" === n && e.constructor && (n = e.constructor.name), "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? mm(e, t) : void 0
                }
            }(e, t) || function() {
                throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
            }()
        }

        function mm(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
            return r
        }
        const vm = function(t) {
                var n = t.onClose,
                    r = t.children,
                    o = t.topRightElement,
                    i = (0, e.useRef)(null),
                    a = pm((0, e.useState)(0), 2),
                    s = a[0],
                    l = a[1],
                    u = pm((0, e.useState)(!1), 2),
                    c = u[0],
                    h = u[1],
                    d = (0, e.useRef)(-1),
                    f = Mh(),
                    p = yl().isActive;
                (0, e.useEffect)((function() {
                    i.current && h(!0)
                }), []);
                var m = function() {
                    n && (i.current.classList.remove(fm), setTimeout((function() {
                        n()
                    }), 100))
                };
                return dm(m), e.createElement("div", {
                    className: Ou()("mq7osYIFBbSNKF_oDATr", c && fm, !p && "b20Xj5ox4DVUYvbME97b"),
                    ref: i,
                    onPointerDown: function(e) {
                        f.sm || "mouse" === e.pointerType || (d.current = e.clientY, i.current.setPointerCapture(e.pointerId))
                    },
                    onPointerMove: function(e) {
                        if (i.current.hasPointerCapture(e.pointerId)) {
                            var t = e.clientY - d.current;
                            i.current.scrollTop = Math.max(Math.min(i.current.scrollTop - t, i.current.scrollHeight - i.current.clientHeight), 0), i.current.scrollTop > 1 || l(t <= 50 ? 0 : t)
                        }
                    },
                    onPointerUp: function(e) {
                        i.current.releasePointerCapture(e.pointerId), s >= window.innerHeight / 3 ? m() : l(0)
                    },
                    onDragStart: bh,
                    style: s ? {
                        transform: "translateY(".concat(s, "px)")
                    } : {}
                }, e.createElement("div", {
                    className: "ulqzC_6rg4drF_pwj0KG"
                }, n && e.createElement(lh, {
                    onClick: m
                }, e.createElement(cm, null)), !f.xl && e.createElement("div", {
                    className: "wU453qBhxuPAR73sHXgR",
                    onClick: m
                }, e.createElement("div", {
                    className: "KqWKz7OYjs0sav8gEdZJ"
                })), o), e.createElement("div", {
                    className: "sk3VOGJ93lhb2RKcZXcJ"
                }, r))
            },
            gm = function() {
                return e.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    height: "24",
                    viewBox: "0 -960 960 960",
                    width: "24",
                    fill: "currentColor"
                }, e.createElement("path", {
                    d: "M240-440q-17 0-28.5-11.5T200-480q0-17 11.5-28.5T240-520h480q17 0 28.5 11.5T760-480q0 17-11.5 28.5T720-440H240Z"
                }))
            };

        function ym(e, t) {
            if (e) {
                if ("string" == typeof e) return bm(e, t);
                var n = Object.prototype.toString.call(e).slice(8, -1);
                return "Object" === n && e.constructor && (n = e.constructor.name), "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? bm(e, t) : void 0
            }
        }

        function bm(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
            return r
        }
        const wm = function(t) {
            var n, r = t.remix,
                o = function(e, t) {
                    return function(e) {
                        if (Array.isArray(e)) return e
                    }(e) || function(e, t) {
                        var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                        if (null != n) {
                            var r, o, i, a, s = [],
                                l = !0,
                                u = !1;
                            try {
                                for (i = (n = n.call(e)).next, 0; !(l = (r = i.call(n)).done) && (s.push(r.value), 2 !== s.length); l = !0);
                            } catch (e) {
                                u = !0, o = e
                            } finally {
                                try {
                                    if (!l && null != n.return && (a = n.return(), Object(a) !== a)) return
                                } finally {
                                    if (u) throw o
                                }
                            }
                            return s
                        }
                    }(e) || ym(e, 2) || function() {
                        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                    }()
                }(Gc()),
                i = o[0],
                a = o[1],
                s = i.remixes.indexOf(r),
                l = yl().isActive,
                u = Zc(i),
                c = Of(),
                h = Ep();
            return e.createElement(Ip, {
                menuItems: [{
                    content: e.createElement(e.Fragment, null, e.createElement(gm, null), " Remove"),
                    onClick: function() {
                        return a({
                            type: Qc.RemoveRemix,
                            payload: s
                        })
                    }
                }].concat((n = Dh(r) && !u ? [{
                    content: e.createElement(e.Fragment, null, e.createElement(Af, null), "Download WAV"),
                    onClick: function() {
                        return h([r], "wav")
                    }
                }, {
                    content: e.createElement(e.Fragment, null, e.createElement(Af, null), "Download MP3", !l && e.createElement(Ec, null)),
                    onClick: l ? function() {
                        h([r], "mp3")
                    } : function() {
                        return c("mp3-downloads")
                    },
                    shouldAppearDisabled: !l
                }] : [], function(e) {
                    if (Array.isArray(e)) return bm(e)
                }(n) || function(e) {
                    if ("undefined" != typeof Symbol && null != e[Symbol.iterator] || null != e["@@iterator"]) return Array.from(e)
                }(n) || ym(n) || function() {
                    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                }()))
            })
        };

        function _m(e, t) {
            return function(e) {
                if (Array.isArray(e)) return e
            }(e) || function(e, t) {
                var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                if (null != n) {
                    var r, o, i, a, s = [],
                        l = !0,
                        u = !1;
                    try {
                        if (i = (n = n.call(e)).next, 0 === t) {
                            if (Object(n) !== n) return;
                            l = !1
                        } else
                            for (; !(l = (r = i.call(n)).done) && (s.push(r.value), s.length !== t); l = !0);
                    } catch (e) {
                        u = !0, o = e
                    } finally {
                        try {
                            if (!l && null != n.return && (a = n.return(), Object(a) !== a)) return
                        } finally {
                            if (u) throw o
                        }
                    }
                    return s
                }
            }(e, t) || function(e, t) {
                if (e) {
                    if ("string" == typeof e) return xm(e, t);
                    var n = Object.prototype.toString.call(e).slice(8, -1);
                    return "Object" === n && e.constructor && (n = e.constructor.name), "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? xm(e, t) : void 0
                }
            }(e, t) || function() {
                throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
            }()
        }

        function xm(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
            return r
        }
        const Em = function() {
                return e.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    height: "24",
                    viewBox: "0 -960 960 960",
                    width: "24",
                    fill: "currentColor"
                }, e.createElement("path", {
                    d: "M440-440H240q-17 0-28.5-11.5T200-480q0-17 11.5-28.5T240-520h200v-200q0-17 11.5-28.5T480-760q17 0 28.5 11.5T520-720v200h200q17 0 28.5 11.5T760-480q0 17-11.5 28.5T720-440H520v200q0 17-11.5 28.5T480-200q-17 0-28.5-11.5T440-240v-200Z"
                }))
            },
            Sm = function() {
                return e.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    height: "24px",
                    viewBox: "0 -960 960 960",
                    width: "24px",
                    fill: "currentColor"
                }, e.createElement("path", {
                    d: "M160-280q-17 0-28.5-11.5T120-320q0-17 11.5-28.5T160-360h480q17 0 28.5 11.5T680-320q0 17-11.5 28.5T640-280H160Zm80-160q-17 0-28.5-11.5T200-480q0-17 11.5-28.5T240-520h480q17 0 28.5 11.5T760-480q0 17-11.5 28.5T720-440H240Zm80-160q-17 0-28.5-11.5T280-640q0-17 11.5-28.5T320-680h480q17 0 28.5 11.5T840-640q0 17-11.5 28.5T800-600H320Z"
                }))
            },
            km = function() {
                var t = Mh();
                return e.createElement(lm, {
                    unitId: "6163957206",
                    format: t.md ? "vertical" : "auto",
                    fullWidthResponsive: "false",
                    className: "kkPAdRHwQEqbTN_wPCFB"
                })
            };

        function Tm(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
            return r
        }
        const Cm = function(t) {
                var n = t.onSelect,
                    r = Cp().openFileAppendChooser,
                    o = function(e, t) {
                        return function(e) {
                            if (Array.isArray(e)) return e
                        }(e) || function(e, t) {
                            var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                            if (null != n) {
                                var r, o, i, a, s = [],
                                    l = !0,
                                    u = !1;
                                try {
                                    for (i = (n = n.call(e)).next, 0; !(l = (r = i.call(n)).done) && (s.push(r.value), 2 !== s.length); l = !0);
                                } catch (e) {
                                    u = !0, o = e
                                } finally {
                                    try {
                                        if (!l && null != n.return && (a = n.return(), Object(a) !== a)) return
                                    } finally {
                                        if (u) throw o
                                    }
                                }
                                return s
                            }
                        }(e) || function(e, t) {
                            if (e) {
                                if ("string" == typeof e) return Tm(e, 2);
                                var n = Object.prototype.toString.call(e).slice(8, -1);
                                return "Object" === n && e.constructor && (n = e.constructor.name), "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Tm(e, 2) : void 0
                            }
                        }(e) || function() {
                            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                        }()
                    }(Gc()),
                    i = o[0],
                    a = o[1],
                    s = yl(),
                    l = s.isActive,
                    u = s.isFetching,
                    c = $c(i),
                    h = Vs().isEditorOpen,
                    d = Of();
                return e.createElement("div", {
                    className: "yJF2S2dFoSS4qqGx1Y2R"
                }, e.createElement("div", {
                    className: "L0P5DJARpjrhKx5VTji_"
                }, e.createElement(Mu, {
                    onClick: l ? r : function() {
                        return d("multiple-remixes")
                    },
                    shouldAppearDisabled: !l
                }, e.createElement(Em, null), "Add files"), e.createElement(Mu, {
                    onClick: function() {
                        a({
                            type: Qc.RemoveAllRemixes
                        })
                    }
                }, e.createElement(Sm, null), "Clear"), e.createElement(kp, {
                    remixes: i.remixes
                })), e.createElement("ul", {
                    className: "pYvQyo667wPZIZH1p1e6"
                }, i.remixes.map((function(t, r) {
                    return e.createElement("li", {
                        key: r,
                        className: Ou()("jYtL442vuwmURoMHFHzi", c === t && "qeRKe1uHzcFMQAWsbeF_"),
                        onClick: function() {
                            return n(t)
                        }
                    }, e.createElement("div", {
                        className: "cGftPNpWYJSRewsPzgSq"
                    }, e.createElement("div", {
                        className: "kPmGRzUoMsFpSxcWFsQz"
                    }, t.name), e.createElement("div", null, jh(t.playbackRate), " speed,", " ", Vh(t.targetPitchFrequencyRatio || t.playbackRate), " ", "pitch, ", Fh(t.reverbWetMix), " reverb,", " ", Bh(t.lowBandDecibels), " bass")), Dh(t) ? e.createElement(wm, {
                        remix: t
                    }) : e.createElement(Tu, null))
                }))), !h && !l && !u && e.createElement("div", {
                    className: "Ts6JiAS5nrKGr2YE8ka6"
                }, e.createElement(km, null)))
            },
            Om = "iUtljQ2U_HJzxclhpKQk",
            Am = "DvlbI6C4lQQMcAdX8Mxv",
            Pm = function() {
                return e.createElement("div", {
                    className: "cDq73BHHH9Ne5dfpRi8y"
                }, e.createElement("div", {
                    className: Om
                }, e.createElement("div", {
                    className: Ou()(Am, "fxvzoRoogi6vKVtGwdMZ")
                })), e.createElement("div", {
                    className: Om
                }, e.createElement("div", {
                    className: Ou()(Am, "wmt2hX_7qjHWhRTeJ2tk")
                })))
            },
            Rm = "E0PshJtdMshWx7oejpHB",
            Mm = function() {
                return e.createElement("div", {
                    className: "Mdt4PvTz5LTjaCjMhwdH"
                }, e.createElement("div", {
                    className: "oATXhpHdTX0PAzA_HGPO"
                }, e.createElement("div", {
                    className: Rm
                }), e.createElement("div", {
                    className: Rm
                }), e.createElement("div", {
                    className: Rm
                }), e.createElement("div", {
                    className: Rm
                }), e.createElement("div", {
                    className: Rm
                }), e.createElement("div", {
                    className: Rm
                }), e.createElement("div", {
                    className: Rm
                }), e.createElement("div", {
                    className: Rm
                })), e.createElement(Pm, null))
            };

        function Dm(e, t) {
            return function(e) {
                if (Array.isArray(e)) return e
            }(e) || function(e, t) {
                var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                if (null != n) {
                    var r, o, i, a, s = [],
                        l = !0,
                        u = !1;
                    try {
                        if (i = (n = n.call(e)).next, 0 === t) {
                            if (Object(n) !== n) return;
                            l = !1
                        } else
                            for (; !(l = (r = i.call(n)).done) && (s.push(r.value), s.length !== t); l = !0);
                    } catch (e) {
                        u = !0, o = e
                    } finally {
                        try {
                            if (!l && null != n.return && (a = n.return(), Object(a) !== a)) return
                        } finally {
                            if (u) throw o
                        }
                    }
                    return s
                }
            }(e, t) || function(e, t) {
                if (e) {
                    if ("string" == typeof e) return Nm(e, t);
                    var n = Object.prototype.toString.call(e).slice(8, -1);
                    return "Object" === n && e.constructor && (n = e.constructor.name), "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Nm(e, t) : void 0
                }
            }(e, t) || function() {
                throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
            }()
        }

        function Nm(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
            return r
        }
        const Im = function() {
            var t = Dm(Gc(), 1)[0],
                n = Kc(),
                r = Cp(),
                o = r.openFilePutChooser,
                i = r.openFileAppendChooser,
                a = yl(),
                s = a.isActive,
                l = a.isFetching,
                u = Dm(t.remixes, 1)[0],
                c = u && Dh(u);
            return e.createElement("div", {
                className: "EwNUZDlDhOl4iJLowbCc"
            }, e.createElement("div", {
                className: "r3QK8dOT8fay8Q9NvUXg"
            }, e.createElement("div", {
                className: "TO2K9N9fmIr2LVlkmpmb"
            }, e.createElement("div", {
                className: "puuDfrlKec6RCQtwITrM"
            }, e.createElement("h1", null, "SAR", e.createElement("br", null), "🔊"), e.createElement("div", {
                className: "XwPbmg8omrlZ7xGtzfQK"
            }, e.createElement(Pm, null)), e.createElement("h2", null, "The easiest way to", " ", n ? "speed up music, make nightcore," : "make slowed+reverb, nightcore", " ", "and more (with some pro features)")), e.createElement(Mu, {
                onClick: function() {
                    u || (s ? i() : o())
                },
                variant: "primary"
            }, u && !c ? "Preparing track..." : s ? "Choose audio files to get started" : "Choose an audio file to get started")), e.createElement(Mm, null)), !l && !s && e.createElement("div", {
                className: "fpQMnIDHSeMRm3IOHzQf"
            }, e.createElement(um, null)))
        };

        function Lm(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
            return r
        }
        const qm = function() {
                var t = function(e, t) {
                        return function(e) {
                            if (Array.isArray(e)) return e
                        }(e) || function(e, t) {
                            var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                            if (null != n) {
                                var r, o, i, a, s = [],
                                    l = !0,
                                    u = !1;
                                try {
                                    for (i = (n = n.call(e)).next, 0; !(l = (r = i.call(n)).done) && (s.push(r.value), 2 !== s.length); l = !0);
                                } catch (e) {
                                    u = !0, o = e
                                } finally {
                                    try {
                                        if (!l && null != n.return && (a = n.return(), Object(a) !== a)) return
                                    } finally {
                                        if (u) throw o
                                    }
                                }
                                return s
                            }
                        }(e) || function(e, t) {
                            if (e) {
                                if ("string" == typeof e) return Lm(e, 2);
                                var n = Object.prototype.toString.call(e).slice(8, -1);
                                return "Object" === n && e.constructor && (n = e.constructor.name), "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Lm(e, 2) : void 0
                            }
                        }(e) || function() {
                            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                        }()
                    }(Gc()),
                    n = t[0],
                    r = t[1],
                    o = $c(n),
                    i = Vs(),
                    a = i.openEditor,
                    s = i.lastProPreviewStartTimestamp,
                    l = yl().isFetching;
                return e.createElement("div", {
                    className: Ou()("DmwHwx15AhTQGCNxcdBz")
                }, l ? e.createElement("div", {
                    className: "ud14j1K7HvaUfgH_BGcy"
                }, e.createElement(Tu, {
                    size: "2x"
                })) : 0 === n.remixes.length ? e.createElement(Im, null) : e.createElement(e.Fragment, null, e.createElement("div", {
                    className: "BhwD0fWuC5MxZX8s8mQT"
                }, e.createElement(Cm, {
                    onSelect: function(e) {
                        o && e.id === o.id || r({
                            type: Qc.Play,
                            payload: e
                        }), a()
                    }
                })), e.createElement("div", {
                    className: "gqJKyV_NnAMYv7t2iuHe"
                }, e.createElement(sm, {
                    lastProPreviewStartTimestamp: s
                }))))
            },
            jm = function(e) {
                return function(e) {
                    return new Promise((function(t, n) {
                        var r = new FileReader;
                        r.onload = function() {
                            if ("string" == typeof r.result) return n(new Error("File reader returned a string instead of an ArrayBuffer"));
                            t(r.result)
                        }, r.onerror = function() {
                            n(r.error)
                        }, r.readAsArrayBuffer(e)
                    }))
                }(e).then((function(e) {
                    return Eo().decodeAudioData(e)
                }))
            },
            Fm = (0, e.createContext)({
                getAll: function() {
                    return Promise.resolve([])
                },
                get: function() {
                    return Promise.resolve(null)
                },
                put: function() {
                    return Promise.resolve()
                },
                remove: function() {
                    return Promise.resolve()
                },
                createWriteable: function() {
                    return Promise.resolve({
                        write: function() {
                            return Promise.resolve(void 0)
                        },
                        close: function() {
                            return Promise.resolve(void 0)
                        }
                    })
                },
                clear: function() {
                    return Promise.resolve()
                }
            }),
            Vm = function() {
                return (0, e.useContext)(Fm)
            },
            Bm = function(e, t) {
                return new File([e], t, e)
            };
        var zm = ["audioBuffer"];

        function Um() {
            Um = function() {
                return e
            };
            var e = {},
                t = Object.prototype,
                n = t.hasOwnProperty,
                r = Object.defineProperty || function(e, t, n) {
                    e[t] = n.value
                },
                o = "function" == typeof Symbol ? Symbol : {},
                i = o.iterator || "@@iterator",
                a = o.asyncIterator || "@@asyncIterator",
                s = o.toStringTag || "@@toStringTag";

            function l(e, t, n) {
                return Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }), e[t]
            }
            try {
                l({}, "")
            } catch (e) {
                l = function(e, t, n) {
                    return e[t] = n
                }
            }

            function u(e, t, n, o) {
                var i = t && t.prototype instanceof d ? t : d,
                    a = Object.create(i.prototype),
                    s = new k(o || []);
                return r(a, "_invoke", {
                    value: _(e, n, s)
                }), a
            }

            function c(e, t, n) {
                try {
                    return {
                        type: "normal",
                        arg: e.call(t, n)
                    }
                } catch (e) {
                    return {
                        type: "throw",
                        arg: e
                    }
                }
            }
            e.wrap = u;
            var h = {};

            function d() {}

            function f() {}

            function p() {}
            var m = {};
            l(m, i, (function() {
                return this
            }));
            var v = Object.getPrototypeOf,
                g = v && v(v(T([])));
            g && g !== t && n.call(g, i) && (m = g);
            var y = p.prototype = d.prototype = Object.create(m);

            function b(e) {
                ["next", "throw", "return"].forEach((function(t) {
                    l(e, t, (function(e) {
                        return this._invoke(t, e)
                    }))
                }))
            }

            function w(e, t) {
                function o(r, i, a, s) {
                    var l = c(e[r], e, i);
                    if ("throw" !== l.type) {
                        var u = l.arg,
                            h = u.value;
                        return h && "object" == Zm(h) && n.call(h, "__await") ? t.resolve(h.__await).then((function(e) {
                            o("next", e, a, s)
                        }), (function(e) {
                            o("throw", e, a, s)
                        })) : t.resolve(h).then((function(e) {
                            u.value = e, a(u)
                        }), (function(e) {
                            return o("throw", e, a, s)
                        }))
                    }
                    s(l.arg)
                }
                var i;
                r(this, "_invoke", {
                    value: function(e, n) {
                        function r() {
                            return new t((function(t, r) {
                                o(e, n, t, r)
                            }))
                        }
                        return i = i ? i.then(r, r) : r()
                    }
                })
            }

            function _(e, t, n) {
                var r = "suspendedStart";
                return function(o, i) {
                    if ("executing" === r) throw new Error("Generator is already running");
                    if ("completed" === r) {
                        if ("throw" === o) throw i;
                        return {
                            value: void 0,
                            done: !0
                        }
                    }
                    for (n.method = o, n.arg = i;;) {
                        var a = n.delegate;
                        if (a) {
                            var s = x(a, n);
                            if (s) {
                                if (s === h) continue;
                                return s
                            }
                        }
                        if ("next" === n.method) n.sent = n._sent = n.arg;
                        else if ("throw" === n.method) {
                            if ("suspendedStart" === r) throw r = "completed", n.arg;
                            n.dispatchException(n.arg)
                        } else "return" === n.method && n.abrupt("return", n.arg);
                        r = "executing";
                        var l = c(e, t, n);
                        if ("normal" === l.type) {
                            if (r = n.done ? "completed" : "suspendedYield", l.arg === h) continue;
                            return {
                                value: l.arg,
                                done: n.done
                            }
                        }
                        "throw" === l.type && (r = "completed", n.method = "throw", n.arg = l.arg)
                    }
                }
            }

            function x(e, t) {
                var n = t.method,
                    r = e.iterator[n];
                if (void 0 === r) return t.delegate = null, "throw" === n && e.iterator.return && (t.method = "return", t.arg = void 0, x(e, t), "throw" === t.method) || "return" !== n && (t.method = "throw", t.arg = new TypeError("The iterator does not provide a '" + n + "' method")), h;
                var o = c(r, e.iterator, t.arg);
                if ("throw" === o.type) return t.method = "throw", t.arg = o.arg, t.delegate = null, h;
                var i = o.arg;
                return i ? i.done ? (t[e.resultName] = i.value, t.next = e.nextLoc, "return" !== t.method && (t.method = "next", t.arg = void 0), t.delegate = null, h) : i : (t.method = "throw", t.arg = new TypeError("iterator result is not an object"), t.delegate = null, h)
            }

            function E(e) {
                var t = {
                    tryLoc: e[0]
                };
                1 in e && (t.catchLoc = e[1]), 2 in e && (t.finallyLoc = e[2], t.afterLoc = e[3]), this.tryEntries.push(t)
            }

            function S(e) {
                var t = e.completion || {};
                t.type = "normal", delete t.arg, e.completion = t
            }

            function k(e) {
                this.tryEntries = [{
                    tryLoc: "root"
                }], e.forEach(E, this), this.reset(!0)
            }

            function T(e) {
                if (e) {
                    var t = e[i];
                    if (t) return t.call(e);
                    if ("function" == typeof e.next) return e;
                    if (!isNaN(e.length)) {
                        var r = -1,
                            o = function t() {
                                for (; ++r < e.length;)
                                    if (n.call(e, r)) return t.value = e[r], t.done = !1, t;
                                return t.value = void 0, t.done = !0, t
                            };
                        return o.next = o
                    }
                }
                return {
                    next: C
                }
            }

            function C() {
                return {
                    value: void 0,
                    done: !0
                }
            }
            return f.prototype = p, r(y, "constructor", {
                value: p,
                configurable: !0
            }), r(p, "constructor", {
                value: f,
                configurable: !0
            }), f.displayName = l(p, s, "GeneratorFunction"), e.isGeneratorFunction = function(e) {
                var t = "function" == typeof e && e.constructor;
                return !!t && (t === f || "GeneratorFunction" === (t.displayName || t.name))
            }, e.mark = function(e) {
                return Object.setPrototypeOf ? Object.setPrototypeOf(e, p) : (e.__proto__ = p, l(e, s, "GeneratorFunction")), e.prototype = Object.create(y), e
            }, e.awrap = function(e) {
                return {
                    __await: e
                }
            }, b(w.prototype), l(w.prototype, a, (function() {
                return this
            })), e.AsyncIterator = w, e.async = function(t, n, r, o, i) {
                void 0 === i && (i = Promise);
                var a = new w(u(t, n, r, o), i);
                return e.isGeneratorFunction(n) ? a : a.next().then((function(e) {
                    return e.done ? e.value : a.next()
                }))
            }, b(y), l(y, s, "Generator"), l(y, i, (function() {
                return this
            })), l(y, "toString", (function() {
                return "[object Generator]"
            })), e.keys = function(e) {
                var t = Object(e),
                    n = [];
                for (var r in t) n.push(r);
                return n.reverse(),
                    function e() {
                        for (; n.length;) {
                            var r = n.pop();
                            if (r in t) return e.value = r, e.done = !1, e
                        }
                        return e.done = !0, e
                    }
            }, e.values = T, k.prototype = {
                constructor: k,
                reset: function(e) {
                    if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(S), !e)
                        for (var t in this) "t" === t.charAt(0) && n.call(this, t) && !isNaN(+t.slice(1)) && (this[t] = void 0)
                },
                stop: function() {
                    this.done = !0;
                    var e = this.tryEntries[0].completion;
                    if ("throw" === e.type) throw e.arg;
                    return this.rval
                },
                dispatchException: function(e) {
                    if (this.done) throw e;
                    var t = this;

                    function r(n, r) {
                        return a.type = "throw", a.arg = e, t.next = n, r && (t.method = "next", t.arg = void 0), !!r
                    }
                    for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                        var i = this.tryEntries[o],
                            a = i.completion;
                        if ("root" === i.tryLoc) return r("end");
                        if (i.tryLoc <= this.prev) {
                            var s = n.call(i, "catchLoc"),
                                l = n.call(i, "finallyLoc");
                            if (s && l) {
                                if (this.prev < i.catchLoc) return r(i.catchLoc, !0);
                                if (this.prev < i.finallyLoc) return r(i.finallyLoc)
                            } else if (s) {
                                if (this.prev < i.catchLoc) return r(i.catchLoc, !0)
                            } else {
                                if (!l) throw new Error("try statement without catch or finally");
                                if (this.prev < i.finallyLoc) return r(i.finallyLoc)
                            }
                        }
                    }
                },
                abrupt: function(e, t) {
                    for (var r = this.tryEntries.length - 1; r >= 0; --r) {
                        var o = this.tryEntries[r];
                        if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                            var i = o;
                            break
                        }
                    }
                    i && ("break" === e || "continue" === e) && i.tryLoc <= t && t <= i.finallyLoc && (i = null);
                    var a = i ? i.completion : {};
                    return a.type = e, a.arg = t, i ? (this.method = "next", this.next = i.finallyLoc, h) : this.complete(a)
                },
                complete: function(e, t) {
                    if ("throw" === e.type) throw e.arg;
                    return "break" === e.type || "continue" === e.type ? this.next = e.arg : "return" === e.type ? (this.rval = this.arg = e.arg, this.method = "return", this.next = "end") : "normal" === e.type && t && (this.next = t), h
                },
                finish: function(e) {
                    for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                        var n = this.tryEntries[t];
                        if (n.finallyLoc === e) return this.complete(n.completion, n.afterLoc), S(n), h
                    }
                },
                catch: function(e) {
                    for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                        var n = this.tryEntries[t];
                        if (n.tryLoc === e) {
                            var r = n.completion;
                            if ("throw" === r.type) {
                                var o = r.arg;
                                S(n)
                            }
                            return o
                        }
                    }
                    throw new Error("illegal catch attempt")
                },
                delegateYield: function(e, t, n) {
                    return this.delegate = {
                        iterator: T(e),
                        resultName: t,
                        nextLoc: n
                    }, "next" === this.method && (this.arg = void 0), h
                }
            }, e
        }

        function Wm(e, t) {
            return function(e) {
                if (Array.isArray(e)) return e
            }(e) || function(e, t) {
                var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                if (null != n) {
                    var r, o, i, a, s = [],
                        l = !0,
                        u = !1;
                    try {
                        if (i = (n = n.call(e)).next, 0 === t) {
                            if (Object(n) !== n) return;
                            l = !1
                        } else
                            for (; !(l = (r = i.call(n)).done) && (s.push(r.value), s.length !== t); l = !0);
                    } catch (e) {
                        u = !0, o = e
                    } finally {
                        try {
                            if (!l && null != n.return && (a = n.return(), Object(a) !== a)) return
                        } finally {
                            if (u) throw o
                        }
                    }
                    return s
                }
            }(e, t) || function(e, t) {
                if (e) {
                    if ("string" == typeof e) return Hm(e, t);
                    var n = Object.prototype.toString.call(e).slice(8, -1);
                    return "Object" === n && e.constructor && (n = e.constructor.name), "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Hm(e, t) : void 0
                }
            }(e, t) || function() {
                throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
            }()
        }

        function Hm(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
            return r
        }

        function Gm(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), n.push.apply(n, r)
            }
            return n
        }

        function Qm(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? Gm(Object(n), !0).forEach((function(t) {
                    Ym(e, t, n[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : Gm(Object(n)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }))
            }
            return e
        }

        function Ym(e, t, n) {
            return t = function(e) {
                var t = function(e, t) {
                    if ("object" !== Zm(e) || null === e) return e;
                    var n = e[Symbol.toPrimitive];
                    if (void 0 !== n) {
                        var r = n.call(e, "string");
                        if ("object" !== Zm(r)) return r;
                        throw new TypeError("@@toPrimitive must return a primitive value.")
                    }
                    return String(e)
                }(e);
                return "symbol" === Zm(t) ? t : String(t)
            }(t), t in e ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = n, e
        }

        function $m(e, t, n, r, o, i, a) {
            try {
                var s = e[i](a),
                    l = s.value
            } catch (e) {
                return void n(e)
            }
            s.done ? t(l) : Promise.resolve(l).then(r, o)
        }

        function Zm(e) {
            return Zm = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                return typeof e
            } : function(e) {
                return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
            }, Zm(e)
        }
        var Xm, Km, Jm = "pro-state",
            ev = new Set(["none", "one", "all"]),
            tv = function(e) {
                var t, n = e;
                return n && "object" === Zm(n) && "string" == typeof(null == n || null === (t = n.file) || void 0 === t ? void 0 : t.name)
            },
            nv = function(e) {
                if (!e || "object" !== Zm(e)) return !1;
                var t = e;
                return "string" == typeof t.id && "string" == typeof t.name
            },
            rv = function() {
                var e, t = (e = Um().mark((function e() {
                    var t, n, r, o, i, a, s, l, u, c, h, d = arguments;
                    return Um().wrap((function(e) {
                        for (;;) switch (e.prev = e.next) {
                            case 0:
                                if (t = (d.length > 0 && void 0 !== d[0] ? d[0] : {}).storedFileNames, n = void 0 === t ? [] : t, r = hc(Jm)) {
                                    e.next = 4;
                                    break
                                }
                                return e.abrupt("return");
                            case 4:
                                if (e.prev = 4, (i = JSON.parse(r)) && "object" === Zm(i)) {
                                    e.next = 8;
                                    break
                                }
                                return e.abrupt("return");
                            case 8:
                                return a = Qm({
                                    playbackRate: i.defaults && "number" == typeof i.defaults.playbackRate ? i.defaults.playbackRate : bu,
                                    reverbWetMix: i.defaults && "number" == typeof i.defaults.reverbWetMix ? i.defaults.reverbWetMix : wu,
                                    lowBandDecibels: i.defaults && "number" == typeof i.defaults.lowBandDecibels ? i.defaults.lowBandDecibels : 0
                                }, i.defaults && "number" == typeof i.defaults.targetPitchFrequencyRatio ? {
                                    targetPitchFrequencyRatio: i.defaults.targetPitchFrequencyRatio
                                } : {}), s = [], n.length && Array.isArray(i.remixes) && i.remixes.length && i.remixes.some((function(e) {
                                    return e && "object" === Zm(e)
                                })) && (l = new Set(n), s = i.remixes.filter((function(e) {
                                    return tv(e) && l.has(e.file.name) || nv(e) && l.has(e.id)
                                })).map((function(e) {
                                    return Qm(Qm({}, tv(e) ? {
                                        id: fp(),
                                        name: e.file.name
                                    } : {
                                        id: e.id,
                                        name: e.name
                                    }), {}, {
                                        playbackRate: "number" == typeof e.playbackRate ? e.playbackRate : a.playbackRate,
                                        reverbWetMix: "number" == typeof e.reverbWetMix ? e.reverbWetMix : a.reverbWetMix,
                                        targetPitchFrequencyRatio: "number" == typeof e.targetPitchFrequencyRatio ? e.targetPitchFrequencyRatio : void 0,
                                        startOffsetSeconds: "number" == typeof e.startOffsetSeconds ? e.startOffsetSeconds : 0,
                                        endOffsetSeconds: "number" == typeof e.endOffsetSeconds ? e.endOffsetSeconds : 0,
                                        lowBandDecibels: "number" == typeof e.lowBandDecibels ? e.lowBandDecibels : 0
                                    })
                                }))), u = null !== (o = i.preferences) && void 0 !== o && o.dropdownChoiceCache && "object" === Zm(i.preferences.dropdownChoiceCache) ? Object.fromEntries(Object.entries(i.preferences.dropdownChoiceCache).filter((function(e) {
                                    var t = Wm(e, 2);
                                    return [t[0], t[1]].every((function(e) {
                                        return e && "string" == typeof e
                                    }))
                                })).map((function(e) {
                                    var t = Wm(e, 2);
                                    return [t[0], t[1]]
                                }))) : {}, c = "number" == typeof i.currentRemixIndex && i.currentRemixIndex < s.length ? i.currentRemixIndex : s.length > 0 ? 0 : void 0, h = {
                                    defaults: a,
                                    remixes: s,
                                    currentRemixIndex: c,
                                    playbackPositionSeconds: "number" == typeof c ? s[c].startOffsetSeconds : 0,
                                    isPlaying: !1,
                                    pendingRenderCount: 0,
                                    renderedRemixCount: 0,
                                    isTrimming: !1,
                                    gain: "number" == typeof i.gain ? i.gain : .9,
                                    loopMode: ev.has(i.loopMode) ? i.loopMode : "all",
                                    preferences: {
                                        dropdownChoiceCache: u
                                    }
                                }, e.abrupt("return", h);
                            case 17:
                                e.prev = 17, e.t0 = e.catch(4), console.error(e.t0);
                            case 20:
                            case "end":
                                return e.stop()
                        }
                    }), e, null, [
                        [4, 17]
                    ])
                })), function() {
                    var t = this,
                        n = arguments;
                    return new Promise((function(r, o) {
                        var i = e.apply(t, n);

                        function a(e) {
                            $m(i, r, o, a, s, "next", e)
                        }

                        function s(e) {
                            $m(i, r, o, a, s, "throw", e)
                        }
                        a(void 0)
                    }))
                });
                return function() {
                    return t.apply(this, arguments)
                }
            }(),
            ov = (Xm = function(e) {
                var t = (arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}).shouldStoreRemixes,
                    n = {
                        remixes: void 0 !== t && t ? e.remixes.map((function(e) {
                            return e.audioBuffer,
                                function(e, t) {
                                    if (null == e) return {};
                                    var n, r, o = function(e, t) {
                                        if (null == e) return {};
                                        var n, r, o = {},
                                            i = Object.keys(e);
                                        for (r = 0; r < i.length; r++) n = i[r], t.indexOf(n) >= 0 || (o[n] = e[n]);
                                        return o
                                    }(e, t);
                                    if (Object.getOwnPropertySymbols) {
                                        var i = Object.getOwnPropertySymbols(e);
                                        for (r = 0; r < i.length; r++) n = i[r], t.indexOf(n) >= 0 || Object.prototype.propertyIsEnumerable.call(e, n) && (o[n] = e[n])
                                    }
                                    return o
                                }(e, zm)
                        })) : [],
                        loopMode: e.loopMode,
                        defaults: e.defaults,
                        gain: e.gain,
                        preferences: e.preferences,
                        currentRemixIndex: Yc(e) ? e.currentRemixIndex : void 0
                    };
                try {
                    var r = JSON.stringify(n);
                    dc(Jm, r)
                } catch (e) {
                    console.error(e)
                }
            }, 200, function() {
                for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++) t[n] = arguments[n];
                clearTimeout(Km), Km = setTimeout((function() {
                    Xm.apply(void 0, t)
                }), 200)
            });

        function iv(e) {
            return iv = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                return typeof e
            } : function(e) {
                return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
            }, iv(e)
        }

        function av(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), n.push.apply(n, r)
            }
            return n
        }

        function sv(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? av(Object(n), !0).forEach((function(t) {
                    lv(e, t, n[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : av(Object(n)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }))
            }
            return e
        }

        function lv(e, t, n) {
            return t = function(e) {
                var t = function(e, t) {
                    if ("object" !== iv(e) || null === e) return e;
                    var n = e[Symbol.toPrimitive];
                    if (void 0 !== n) {
                        var r = n.call(e, "string");
                        if ("object" !== iv(r)) return r;
                        throw new TypeError("@@toPrimitive must return a primitive value.")
                    }
                    return String(e)
                }(e);
                return "symbol" === iv(t) ? t : String(t)
            }(t), t in e ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = n, e
        }
        var uv = function(e) {
            return e.previousPositionSeconds * (e.previousPlaybackRate / e.newPlaybackRate)
        };
        const cv = function(e, t) {
                if (t.type === Qc.ReplaceState) return sv(sv({}, e), t.payload);
                if (t.type === Qc.AppendRemixes) {
                    var n = e.remixes.concat(t.payload.remixes);
                    return sv(sv({}, e), {}, {
                        remixes: n
                    }, "number" == typeof t.payload.selectRemixIndex && t.payload.selectRemixIndex < n.length ? {
                        currentRemixIndex: t.payload.selectRemixIndex,
                        playbackPositionSeconds: n[t.payload.selectRemixIndex].startOffsetSeconds,
                        isTrimming: !1
                    } : {})
                }
                if (t.type === Qc.DecodeFailure) return sv(sv({}, e), {}, {
                    remixes: e.remixes.filter((function(e) {
                        return e.id !== t.payload.remixId
                    }))
                });
                if (t.type === Qc.DecodeSuccess) return sv(sv(sv({}, e), t.payload.shouldPlay ? {
                    isPlaying: !0
                } : {}), {}, {
                    remixes: e.remixes.map((function(e) {
                        return e.id !== t.payload.remixId ? e : sv(sv({}, e), {}, {
                            audioBuffer: t.payload.audioBuffer
                        })
                    }))
                });
                if (t.type === Qc.Play) {
                    var r = e.remixes.indexOf(t.payload);
                    if (r < 0) return sv(sv({}, e), {}, {
                        currentRemixIndex: void 0
                    });
                    var o = !Yc(e) || e.currentRemixIndex !== r;
                    return sv(sv({}, e), {}, {
                        currentRemixIndex: r,
                        isPlaying: !0,
                        playbackPositionSeconds: o ? e.remixes[r].startOffsetSeconds : e.playbackPositionSeconds,
                        isTrimming: !o && e.isTrimming
                    })
                }
                if (t.type === Qc.Pause) return sv(sv({}, e), {}, {
                    isPlaying: !1
                });
                if (t.type === Qc.SkipNext) {
                    if (!Yc(e) || e.remixes.length < 2) return e;
                    var i = e.currentRemixIndex + 1 >= e.remixes.length ? 0 : e.currentRemixIndex + 1;
                    return sv(sv({}, e), {}, {
                        currentRemixIndex: i,
                        playbackPositionSeconds: e.remixes[i].startOffsetSeconds,
                        isTrimming: !1
                    })
                }
                if (t.type === Qc.SkipPrevious) {
                    if (!Yc(e) || e.remixes.length < 2) return e;
                    var a = e.currentRemixIndex - 1 < 0 ? e.remixes.length - 1 : e.currentRemixIndex - 1;
                    return sv(sv({}, e), {}, {
                        currentRemixIndex: a,
                        playbackPositionSeconds: e.remixes[a].startOffsetSeconds,
                        isTrimming: !1
                    })
                }
                if (t.type === Qc.ChangePlaybackRate) {
                    var s, l = e.remixes.map((function(e) {
                        return e.id !== t.payload.remixId ? e : (s = e.playbackRate, sv(sv({}, e), {}, {
                            playbackRate: t.payload.playbackRate,
                            startOffsetSeconds: uv({
                                previousPositionSeconds: e.startOffsetSeconds,
                                previousPlaybackRate: e.playbackRate,
                                newPlaybackRate: t.payload.playbackRate
                            }),
                            endOffsetSeconds: uv({
                                previousPositionSeconds: e.endOffsetSeconds,
                                previousPlaybackRate: e.playbackRate,
                                newPlaybackRate: t.payload.playbackRate
                            })
                        }))
                    }));
                    return Yc(e) && s ? sv(sv({}, e), {}, {
                        remixes: l,
                        playbackPositionSeconds: uv({
                            previousPlaybackRate: s,
                            previousPositionSeconds: e.playbackPositionSeconds,
                            newPlaybackRate: t.payload.playbackRate
                        })
                    }) : sv(sv({}, e), {}, {
                        remixes: l
                    })
                }
                if (t.type === Qc.ChangeReverbWetMix) return sv(sv({}, e), {}, {
                    remixes: e.remixes.map((function(e) {
                        return e.id === t.payload.remixId ? sv(sv({}, e), {}, {
                            reverbWetMix: t.payload.reverbWetMix
                        }) : e
                    }))
                });
                if (t.type === Qc.IncrementPlaybackTime) {
                    if (!Yc(e)) return e;
                    var u = e.remixes[e.currentRemixIndex];
                    return Dh(u) ? sv(sv({}, e), {}, {
                        playbackPositionSeconds: Math.min(e.playbackPositionSeconds + t.payload, u.audioBuffer.duration / u.playbackRate)
                    }) : e
                }
                if (t.type === Qc.Seek) {
                    if (!Yc(e)) return e;
                    var c = e.remixes[e.currentRemixIndex];
                    return Dh(c) ? sv(sv({}, e), {}, {
                        playbackPositionSeconds: Math.max(Math.min(t.payload, c.audioBuffer.duration / c.playbackRate - c.endOffsetSeconds), c.startOffsetSeconds)
                    }) : e
                }
                if (t.type === Qc.PlaybackFinished) {
                    if (!Yc(e)) return e;
                    if (e.isTrimming) return sv(sv({}, e), {}, {
                        playbackPositionSeconds: e.remixes[e.currentRemixIndex].startOffsetSeconds
                    });
                    if ("none" === e.loopMode) return sv(sv({}, e), {}, {
                        isPlaying: !1,
                        playbackPositionSeconds: e.remixes[e.currentRemixIndex].startOffsetSeconds
                    });
                    if (e.remixes.length < 2 || "one" === e.loopMode) return sv(sv({}, e), {}, {
                        playbackPositionSeconds: e.remixes[e.currentRemixIndex].startOffsetSeconds
                    });
                    var h = e.currentRemixIndex + 1 >= e.remixes.length ? 0 : e.currentRemixIndex + 1;
                    return sv(sv({}, e), {}, {
                        currentRemixIndex: h,
                        playbackPositionSeconds: e.remixes[h].startOffsetSeconds
                    })
                }
                if (t.type === Qc.StartRendering) return sv(sv({}, e), {}, {
                    pendingRenderCount: t.payload,
                    renderedRemixCount: 0
                });
                if (t.type === Qc.RemixRendered) return sv(sv({}, e), {}, {
                    pendingRenderCount: e.pendingRenderCount - 1,
                    renderedRemixCount: e.renderedRemixCount + 1
                });
                if (t.type === Qc.RemixRenderingFailed) return sv(sv({}, e), {}, {
                    pendingRenderCount: e.pendingRenderCount - 1
                });
                if (t.type === Qc.RemoveRemix) {
                    var d = e.remixes.filter((function(e, n) {
                        return n !== t.payload
                    }));
                    return Yc(e) && t.payload !== e.currentRemixIndex ? t.payload > e.currentRemixIndex ? sv(sv({}, e), {}, {
                        remixes: d
                    }) : sv(sv({}, e), {}, {
                        remixes: d,
                        currentRemixIndex: e.currentRemixIndex - 1
                    }) : sv(sv({}, e), {}, {
                        remixes: d,
                        currentRemixIndex: void 0,
                        isPlaying: !1,
                        playbackPositionSeconds: 0
                    })
                }
                if (t.type === Qc.RemoveAllRemixes) return sv(sv({}, e), {}, {
                    remixes: [],
                    currentRemixIndex: void 0,
                    isPlaying: !1,
                    playbackPositionSeconds: 0
                });
                if (t.type === Qc.ChangeAll) return sv(sv({}, e), {}, {
                    remixes: e.remixes.map((function(e) {
                        return sv(sv({}, e), t.payload)
                    }))
                });
                if (t.type === Qc.ChangeGain) return sv(sv({}, e), {}, {
                    gain: Math.min(1, Math.max(0, t.payload))
                });
                if (t.type === Qc.ChangeLoopMode) return sv(sv({}, e), {}, {
                    loopMode: t.payload
                });
                if (t.type === Qc.SetDefaults) return sv(sv({}, e), {}, {
                    defaults: sv(sv({}, e.defaults), t.payload)
                });
                if (t.type === Qc.SetRemixes) {
                    var f = "number" == typeof t.payload.newRemixIndex ? t.payload.newRemixIndex : !Yc(e) || e.currentRemixIndex >= t.payload.remixes.length ? void 0 : e.currentRemixIndex;
                    return sv(sv({}, e), {}, {
                        remixes: t.payload.remixes,
                        currentRemixIndex: f,
                        playbackPositionSeconds: t.payload.remixes[f].startOffsetSeconds,
                        isTrimming: !1
                    })
                }
                var p;
                if (t.type === Qc.ChangeRemixSettings) return Yc(e) ? sv(sv({}, e), {}, {
                    remixes: e.remixes.map((function(e) {
                        var n, r;
                        if (e.id !== t.payload.remixId) return e;
                        p = e.playbackRate;
                        var o = uv({
                            previousPositionSeconds: e.startOffsetSeconds,
                            previousPlaybackRate: p,
                            newPlaybackRate: null !== (n = t.payload.settings.playbackRate) && void 0 !== n ? n : e.playbackRate
                        });
                        return sv(sv(sv({}, e), t.payload.settings), {}, {
                            startOffsetSeconds: o,
                            endOffsetSeconds: uv({
                                previousPositionSeconds: e.endOffsetSeconds,
                                previousPlaybackRate: p,
                                newPlaybackRate: null !== (r = t.payload.settings.playbackRate) && void 0 !== r ? r : e.playbackRate
                            })
                        })
                    })),
                    playbackPositionSeconds: p ? uv({
                        previousPlaybackRate: p,
                        previousPositionSeconds: e.playbackPositionSeconds,
                        newPlaybackRate: t.payload.settings.playbackRate
                    }) : void 0
                }) : e;
                if (t.type === Qc.ChangeTargetPitchFrequencyRatio) return sv(sv({}, e), {}, {
                    remixes: e.remixes.map((function(e) {
                        return e.id !== t.payload.remixId ? e : sv(sv({}, e), {}, {
                            targetPitchFrequencyRatio: t.payload.targetPitchFrequencyRatio
                        })
                    }))
                });
                if (t.type === Qc.SelectDropdownOption) return sv(sv({}, e), {}, {
                    preferences: sv(sv({}, e.preferences), {}, {
                        dropdownChoiceCache: sv(sv({}, e.preferences.dropdownChoiceCache), {}, lv({}, t.payload.dropdownId, t.payload.optionId))
                    })
                });
                if (t.type === Qc.PutRemix) return sv(sv({}, e), {}, {
                    playbackPositionSeconds: t.payload.newRemix.startOffsetSeconds,
                    isTrimming: !1,
                    remixes: e.remixes.map((function(e) {
                        return e.id !== t.payload.replacedRemixId ? e : sv({}, t.payload.newRemix)
                    }))
                });
                if (t.type === Qc.ChangeStartOffsetSeconds) {
                    var m = e.remixes.map((function(e) {
                        return e.id !== t.payload.remixId ? e : sv(sv({}, e), {}, {
                            startOffsetSeconds: t.payload.startOffsetSeconds
                        })
                    }));
                    return Yc(e) && e.currentRemixIndex === e.remixes.findIndex((function(e) {
                        return e.id === t.payload.remixId
                    })) ? sv(sv({}, e), {}, {
                        remixes: m,
                        playbackPositionSeconds: t.payload.startOffsetSeconds
                    }) : sv(sv({}, e), {}, {
                        remixes: m
                    })
                }
                if (t.type === Qc.ChangeEndOffsetSeconds) {
                    var v = e.remixes.findIndex((function(e) {
                        return e.id === t.payload.remixId
                    }));
                    if (v < 0) return e;
                    var g = e.remixes.map((function(e, n) {
                            return n !== v ? e : sv(sv({}, e), {}, {
                                endOffsetSeconds: t.payload.endOffsetSeconds
                            })
                        })),
                        y = g[v];
                    return Yc(e) && e.currentRemixIndex === v && Dh(y) ? sv(sv({}, e), {}, {
                        remixes: g,
                        playbackPositionSeconds: Math.max(y.audioBuffer.duration / y.playbackRate - t.payload.endOffsetSeconds - 1, y.startOffsetSeconds)
                    }) : sv(sv({}, e), {}, {
                        remixes: g
                    })
                }
                return t.type === Qc.StartTrim ? sv(sv({}, e), {}, {
                    isTrimming: !0
                }) : t.type === Qc.StopTrim ? sv(sv({}, e), {}, {
                    isTrimming: !1
                }) : t.type === Qc.EndProPreview ? sv(sv({}, e), {}, {
                    isTrimming: !1,
                    remixes: e.remixes.slice(0, 1).map((function(e) {
                        return sv(sv({}, e), {}, {
                            targetPitchFrequencyRatio: void 0,
                            startOffsetSeconds: 0,
                            endOffsetSeconds: 0,
                            lowBandDecibels: 0
                        })
                    }))
                }) : t.type === Qc.ChangeLowBandDecibels ? sv(sv({}, e), {}, {
                    remixes: e.remixes.map((function(e) {
                        return e.id !== t.payload.remixId ? e : sv(sv({}, e), {}, {
                            lowBandDecibels: t.payload.lowBandDecibels
                        })
                    }))
                }) : e
            },
            hv = o.p + "70cdf70f61bc20ba2934c08aabd78817.mp3";

        function dv(e, t) {
            return function(e) {
                if (Array.isArray(e)) return e
            }(e) || function(e, t) {
                var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                if (null != n) {
                    var r, o, i, a, s = [],
                        l = !0,
                        u = !1;
                    try {
                        if (i = (n = n.call(e)).next, 0 === t) {
                            if (Object(n) !== n) return;
                            l = !1
                        } else
                            for (; !(l = (r = i.call(n)).done) && (s.push(r.value), s.length !== t); l = !0);
                    } catch (e) {
                        u = !0, o = e
                    } finally {
                        try {
                            if (!l && null != n.return && (a = n.return(), Object(a) !== a)) return
                        } finally {
                            if (u) throw o
                        }
                    }
                    return s
                }
            }(e, t) || fv(e, t) || function() {
                throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
            }()
        }

        function fv(e, t) {
            if (e) {
                if ("string" == typeof e) return pv(e, t);
                var n = Object.prototype.toString.call(e).slice(8, -1);
                return "Object" === n && e.constructor && (n = e.constructor.name), "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? pv(e, t) : void 0
            }
        }

        function pv(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
            return r
        }
        var mv = {
            remixes: [],
            pendingRenderCount: 0,
            renderedRemixCount: 0,
            gain: .9,
            loopMode: "all",
            defaults: {
                playbackRate: bu,
                reverbWetMix: wu,
                lowBandDecibels: 0
            },
            preferences: {
                dropdownChoiceCache: {}
            }
        };

        function vv(e) {
            return vv = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                return typeof e
            } : function(e) {
                return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
            }, vv(e)
        }

        function gv(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), n.push.apply(n, r)
            }
            return n
        }

        function yv(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? gv(Object(n), !0).forEach((function(t) {
                    bv(e, t, n[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : gv(Object(n)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }))
            }
            return e
        }

        function bv(e, t, n) {
            return t = function(e) {
                var t = function(e, t) {
                    if ("object" !== vv(e) || null === e) return e;
                    var n = e[Symbol.toPrimitive];
                    if (void 0 !== n) {
                        var r = n.call(e, "string");
                        if ("object" !== vv(r)) return r;
                        throw new TypeError("@@toPrimitive must return a primitive value.")
                    }
                    return String(e)
                }(e);
                return "symbol" === vv(t) ? t : String(t)
            }(t), t in e ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = n, e
        }

        function wv(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
            return r
        }
        const _v = {
                "colored-text--green": "kGmLx9iPRYMR1vBUUGC4",
                "colored-text--yellow": "LZT_qOspndgyaHbY_fqK",
                "colored-text--inherit": "IqGSSQrZ8dpABQlhbXg8"
            },
            xv = function(t) {
                var n = t.children,
                    r = t.color;
                return e.createElement("span", {
                    className: Ou()(_v["colored-text"], _v["colored-text--".concat(r)])
                }, n)
            },
            Ev = "s8pIXXKnKSd5sWDik7p6",
            Sv = "eSz2ntcbgACgbtEJRnQU",
            kv = "UTongrw2iBPmT_ldqOBF",
            Tv = "YvmBa1Uf2elNpHf3UMq7",
            Cv = "wy3QqhmdCGBwS9lQCtIg",
            Ov = "X27sdFxmc3dFqeTzvbNG",
            Av = "pVNtXizruirjg1BdQ7gD",
            Pv = "JhIDpYXWqCSA6cCAuu06";

        function Rv(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
            return r
        }
        var Mv = "support@slowedandreverb.studio";
        var Dv = Symbol("uninitialized");
        const Nv = function(t) {
            var n = (0, e.useRef)(Dv);
            return n.current === Dv && (n.current = t()), n.current
        };

        function Iv(e) {
            return Iv = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                return typeof e
            } : function(e) {
                return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
            }, Iv(e)
        }

        function Lv() {
            Lv = function() {
                return e
            };
            var e = {},
                t = Object.prototype,
                n = t.hasOwnProperty,
                r = Object.defineProperty || function(e, t, n) {
                    e[t] = n.value
                },
                o = "function" == typeof Symbol ? Symbol : {},
                i = o.iterator || "@@iterator",
                a = o.asyncIterator || "@@asyncIterator",
                s = o.toStringTag || "@@toStringTag";

            function l(e, t, n) {
                return Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }), e[t]
            }
            try {
                l({}, "")
            } catch (e) {
                l = function(e, t, n) {
                    return e[t] = n
                }
            }

            function u(e, t, n, o) {
                var i = t && t.prototype instanceof d ? t : d,
                    a = Object.create(i.prototype),
                    s = new k(o || []);
                return r(a, "_invoke", {
                    value: _(e, n, s)
                }), a
            }

            function c(e, t, n) {
                try {
                    return {
                        type: "normal",
                        arg: e.call(t, n)
                    }
                } catch (e) {
                    return {
                        type: "throw",
                        arg: e
                    }
                }
            }
            e.wrap = u;
            var h = {};

            function d() {}

            function f() {}

            function p() {}
            var m = {};
            l(m, i, (function() {
                return this
            }));
            var v = Object.getPrototypeOf,
                g = v && v(v(T([])));
            g && g !== t && n.call(g, i) && (m = g);
            var y = p.prototype = d.prototype = Object.create(m);

            function b(e) {
                ["next", "throw", "return"].forEach((function(t) {
                    l(e, t, (function(e) {
                        return this._invoke(t, e)
                    }))
                }))
            }

            function w(e, t) {
                function o(r, i, a, s) {
                    var l = c(e[r], e, i);
                    if ("throw" !== l.type) {
                        var u = l.arg,
                            h = u.value;
                        return h && "object" == Iv(h) && n.call(h, "__await") ? t.resolve(h.__await).then((function(e) {
                            o("next", e, a, s)
                        }), (function(e) {
                            o("throw", e, a, s)
                        })) : t.resolve(h).then((function(e) {
                            u.value = e, a(u)
                        }), (function(e) {
                            return o("throw", e, a, s)
                        }))
                    }
                    s(l.arg)
                }
                var i;
                r(this, "_invoke", {
                    value: function(e, n) {
                        function r() {
                            return new t((function(t, r) {
                                o(e, n, t, r)
                            }))
                        }
                        return i = i ? i.then(r, r) : r()
                    }
                })
            }

            function _(e, t, n) {
                var r = "suspendedStart";
                return function(o, i) {
                    if ("executing" === r) throw new Error("Generator is already running");
                    if ("completed" === r) {
                        if ("throw" === o) throw i;
                        return {
                            value: void 0,
                            done: !0
                        }
                    }
                    for (n.method = o, n.arg = i;;) {
                        var a = n.delegate;
                        if (a) {
                            var s = x(a, n);
                            if (s) {
                                if (s === h) continue;
                                return s
                            }
                        }
                        if ("next" === n.method) n.sent = n._sent = n.arg;
                        else if ("throw" === n.method) {
                            if ("suspendedStart" === r) throw r = "completed", n.arg;
                            n.dispatchException(n.arg)
                        } else "return" === n.method && n.abrupt("return", n.arg);
                        r = "executing";
                        var l = c(e, t, n);
                        if ("normal" === l.type) {
                            if (r = n.done ? "completed" : "suspendedYield", l.arg === h) continue;
                            return {
                                value: l.arg,
                                done: n.done
                            }
                        }
                        "throw" === l.type && (r = "completed", n.method = "throw", n.arg = l.arg)
                    }
                }
            }

            function x(e, t) {
                var n = t.method,
                    r = e.iterator[n];
                if (void 0 === r) return t.delegate = null, "throw" === n && e.iterator.return && (t.method = "return", t.arg = void 0, x(e, t), "throw" === t.method) || "return" !== n && (t.method = "throw", t.arg = new TypeError("The iterator does not provide a '" + n + "' method")), h;
                var o = c(r, e.iterator, t.arg);
                if ("throw" === o.type) return t.method = "throw", t.arg = o.arg, t.delegate = null, h;
                var i = o.arg;
                return i ? i.done ? (t[e.resultName] = i.value, t.next = e.nextLoc, "return" !== t.method && (t.method = "next", t.arg = void 0), t.delegate = null, h) : i : (t.method = "throw", t.arg = new TypeError("iterator result is not an object"), t.delegate = null, h)
            }

            function E(e) {
                var t = {
                    tryLoc: e[0]
                };
                1 in e && (t.catchLoc = e[1]), 2 in e && (t.finallyLoc = e[2], t.afterLoc = e[3]), this.tryEntries.push(t)
            }

            function S(e) {
                var t = e.completion || {};
                t.type = "normal", delete t.arg, e.completion = t
            }

            function k(e) {
                this.tryEntries = [{
                    tryLoc: "root"
                }], e.forEach(E, this), this.reset(!0)
            }

            function T(e) {
                if (e) {
                    var t = e[i];
                    if (t) return t.call(e);
                    if ("function" == typeof e.next) return e;
                    if (!isNaN(e.length)) {
                        var r = -1,
                            o = function t() {
                                for (; ++r < e.length;)
                                    if (n.call(e, r)) return t.value = e[r], t.done = !1, t;
                                return t.value = void 0, t.done = !0, t
                            };
                        return o.next = o
                    }
                }
                return {
                    next: C
                }
            }

            function C() {
                return {
                    value: void 0,
                    done: !0
                }
            }
            return f.prototype = p, r(y, "constructor", {
                value: p,
                configurable: !0
            }), r(p, "constructor", {
                value: f,
                configurable: !0
            }), f.displayName = l(p, s, "GeneratorFunction"), e.isGeneratorFunction = function(e) {
                var t = "function" == typeof e && e.constructor;
                return !!t && (t === f || "GeneratorFunction" === (t.displayName || t.name))
            }, e.mark = function(e) {
                return Object.setPrototypeOf ? Object.setPrototypeOf(e, p) : (e.__proto__ = p, l(e, s, "GeneratorFunction")), e.prototype = Object.create(y), e
            }, e.awrap = function(e) {
                return {
                    __await: e
                }
            }, b(w.prototype), l(w.prototype, a, (function() {
                return this
            })), e.AsyncIterator = w, e.async = function(t, n, r, o, i) {
                void 0 === i && (i = Promise);
                var a = new w(u(t, n, r, o), i);
                return e.isGeneratorFunction(n) ? a : a.next().then((function(e) {
                    return e.done ? e.value : a.next()
                }))
            }, b(y), l(y, s, "Generator"), l(y, i, (function() {
                return this
            })), l(y, "toString", (function() {
                return "[object Generator]"
            })), e.keys = function(e) {
                var t = Object(e),
                    n = [];
                for (var r in t) n.push(r);
                return n.reverse(),
                    function e() {
                        for (; n.length;) {
                            var r = n.pop();
                            if (r in t) return e.value = r, e.done = !1, e
                        }
                        return e.done = !0, e
                    }
            }, e.values = T, k.prototype = {
                constructor: k,
                reset: function(e) {
                    if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(S), !e)
                        for (var t in this) "t" === t.charAt(0) && n.call(this, t) && !isNaN(+t.slice(1)) && (this[t] = void 0)
                },
                stop: function() {
                    this.done = !0;
                    var e = this.tryEntries[0].completion;
                    if ("throw" === e.type) throw e.arg;
                    return this.rval
                },
                dispatchException: function(e) {
                    if (this.done) throw e;
                    var t = this;

                    function r(n, r) {
                        return a.type = "throw", a.arg = e, t.next = n, r && (t.method = "next", t.arg = void 0), !!r
                    }
                    for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                        var i = this.tryEntries[o],
                            a = i.completion;
                        if ("root" === i.tryLoc) return r("end");
                        if (i.tryLoc <= this.prev) {
                            var s = n.call(i, "catchLoc"),
                                l = n.call(i, "finallyLoc");
                            if (s && l) {
                                if (this.prev < i.catchLoc) return r(i.catchLoc, !0);
                                if (this.prev < i.finallyLoc) return r(i.finallyLoc)
                            } else if (s) {
                                if (this.prev < i.catchLoc) return r(i.catchLoc, !0)
                            } else {
                                if (!l) throw new Error("try statement without catch or finally");
                                if (this.prev < i.finallyLoc) return r(i.finallyLoc)
                            }
                        }
                    }
                },
                abrupt: function(e, t) {
                    for (var r = this.tryEntries.length - 1; r >= 0; --r) {
                        var o = this.tryEntries[r];
                        if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                            var i = o;
                            break
                        }
                    }
                    i && ("break" === e || "continue" === e) && i.tryLoc <= t && t <= i.finallyLoc && (i = null);
                    var a = i ? i.completion : {};
                    return a.type = e, a.arg = t, i ? (this.method = "next", this.next = i.finallyLoc, h) : this.complete(a)
                },
                complete: function(e, t) {
                    if ("throw" === e.type) throw e.arg;
                    return "break" === e.type || "continue" === e.type ? this.next = e.arg : "return" === e.type ? (this.rval = this.arg = e.arg, this.method = "return", this.next = "end") : "normal" === e.type && t && (this.next = t), h
                },
                finish: function(e) {
                    for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                        var n = this.tryEntries[t];
                        if (n.finallyLoc === e) return this.complete(n.completion, n.afterLoc), S(n), h
                    }
                },
                catch: function(e) {
                    for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                        var n = this.tryEntries[t];
                        if (n.tryLoc === e) {
                            var r = n.completion;
                            if ("throw" === r.type) {
                                var o = r.arg;
                                S(n)
                            }
                            return o
                        }
                    }
                    throw new Error("illegal catch attempt")
                },
                delegateYield: function(e, t, n) {
                    return this.delegate = {
                        iterator: T(e),
                        resultName: t,
                        nextLoc: n
                    }, "next" === this.method && (this.arg = void 0), h
                }
            }, e
        }

        function qv(e, t, n, r, o, i, a) {
            try {
                var s = e[i](a),
                    l = s.value
            } catch (e) {
                return void n(e)
            }
            s.done ? t(l) : Promise.resolve(l).then(r, o)
        }

        function jv(e) {
            var t, n, r, o = 2;
            for ("undefined" != typeof Symbol && (n = Symbol.asyncIterator, r = Symbol.iterator); o--;) {
                if (n && null != (t = e[n])) return t.call(e);
                if (r && null != (t = e[r])) return new Fv(t.call(e));
                n = "@@asyncIterator", r = "@@iterator"
            }
            throw new TypeError("Object is not async iterable")
        }

        function Fv(e) {
            function t(e) {
                if (Object(e) !== e) return Promise.reject(new TypeError(e + " is not an object."));
                var t = e.done;
                return Promise.resolve(e.value).then((function(e) {
                    return {
                        value: e,
                        done: t
                    }
                }))
            }
            return Fv = function(e) {
                this.s = e, this.n = e.next
            }, Fv.prototype = {
                s: null,
                n: null,
                next: function() {
                    return t(this.n.apply(this.s, arguments))
                },
                return: function(e) {
                    var n = this.s.return;
                    return void 0 === n ? Promise.resolve({
                        value: e,
                        done: !0
                    }) : t(n.apply(this.s, arguments))
                },
                throw: function(e) {
                    var n = this.s.return;
                    return void 0 === n ? Promise.reject(e) : t(n.apply(this.s, arguments))
                }
            }, new Fv(e)
        }
        var Vv = function() {
            var e, t = (e = Lv().mark((function e(t) {
                var n, r, o, i, a, s, l;
                return Lv().wrap((function(e) {
                    for (;;) switch (e.prev = e.next) {
                        case 0:
                            n = [], r = !1, o = !1, e.prev = 3, a = jv(t);
                        case 5:
                            return e.next = 7, a.next();
                        case 7:
                            if (!(r = !(s = e.sent).done)) {
                                e.next = 13;
                                break
                            }
                            l = s.value, n.push(l);
                        case 10:
                            r = !1, e.next = 5;
                            break;
                        case 13:
                            e.next = 19;
                            break;
                        case 15:
                            e.prev = 15, e.t0 = e.catch(3), o = !0, i = e.t0;
                        case 19:
                            if (e.prev = 19, e.prev = 20, !r || null == a.return) {
                                e.next = 24;
                                break
                            }
                            return e.next = 24, a.return();
                        case 24:
                            if (e.prev = 24, !o) {
                                e.next = 27;
                                break
                            }
                            throw i;
                        case 27:
                            return e.finish(24);
                        case 28:
                            return e.finish(19);
                        case 29:
                            return e.abrupt("return", n);
                        case 30:
                        case "end":
                            return e.stop()
                    }
                }), e, null, [
                    [3, 15, 19, 29],
                    [20, , 24, 28]
                ])
            })), function() {
                var t = this,
                    n = arguments;
                return new Promise((function(r, o) {
                    var i = e.apply(t, n);

                    function a(e) {
                        qv(i, r, o, a, s, "next", e)
                    }

                    function s(e) {
                        qv(i, r, o, a, s, "throw", e)
                    }
                    a(void 0)
                }))
            });
            return function(e) {
                return t.apply(this, arguments)
            }
        }();
        const Bv = Vv;

        function zv(e) {
            return zv = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                return typeof e
            } : function(e) {
                return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
            }, zv(e)
        }
        var Uv, Wv;

        function Hv() {
            Hv = function() {
                return e
            };
            var e = {},
                t = Object.prototype,
                n = t.hasOwnProperty,
                r = Object.defineProperty || function(e, t, n) {
                    e[t] = n.value
                },
                o = "function" == typeof Symbol ? Symbol : {},
                i = o.iterator || "@@iterator",
                a = o.asyncIterator || "@@asyncIterator",
                s = o.toStringTag || "@@toStringTag";

            function l(e, t, n) {
                return Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }), e[t]
            }
            try {
                l({}, "")
            } catch (e) {
                l = function(e, t, n) {
                    return e[t] = n
                }
            }

            function u(e, t, n, o) {
                var i = t && t.prototype instanceof d ? t : d,
                    a = Object.create(i.prototype),
                    s = new k(o || []);
                return r(a, "_invoke", {
                    value: _(e, n, s)
                }), a
            }

            function c(e, t, n) {
                try {
                    return {
                        type: "normal",
                        arg: e.call(t, n)
                    }
                } catch (e) {
                    return {
                        type: "throw",
                        arg: e
                    }
                }
            }
            e.wrap = u;
            var h = {};

            function d() {}

            function f() {}

            function p() {}
            var m = {};
            l(m, i, (function() {
                return this
            }));
            var v = Object.getPrototypeOf,
                g = v && v(v(T([])));
            g && g !== t && n.call(g, i) && (m = g);
            var y = p.prototype = d.prototype = Object.create(m);

            function b(e) {
                ["next", "throw", "return"].forEach((function(t) {
                    l(e, t, (function(e) {
                        return this._invoke(t, e)
                    }))
                }))
            }

            function w(e, t) {
                function o(r, i, a, s) {
                    var l = c(e[r], e, i);
                    if ("throw" !== l.type) {
                        var u = l.arg,
                            h = u.value;
                        return h && "object" == zv(h) && n.call(h, "__await") ? t.resolve(h.__await).then((function(e) {
                            o("next", e, a, s)
                        }), (function(e) {
                            o("throw", e, a, s)
                        })) : t.resolve(h).then((function(e) {
                            u.value = e, a(u)
                        }), (function(e) {
                            return o("throw", e, a, s)
                        }))
                    }
                    s(l.arg)
                }
                var i;
                r(this, "_invoke", {
                    value: function(e, n) {
                        function r() {
                            return new t((function(t, r) {
                                o(e, n, t, r)
                            }))
                        }
                        return i = i ? i.then(r, r) : r()
                    }
                })
            }

            function _(e, t, n) {
                var r = "suspendedStart";
                return function(o, i) {
                    if ("executing" === r) throw new Error("Generator is already running");
                    if ("completed" === r) {
                        if ("throw" === o) throw i;
                        return {
                            value: void 0,
                            done: !0
                        }
                    }
                    for (n.method = o, n.arg = i;;) {
                        var a = n.delegate;
                        if (a) {
                            var s = x(a, n);
                            if (s) {
                                if (s === h) continue;
                                return s
                            }
                        }
                        if ("next" === n.method) n.sent = n._sent = n.arg;
                        else if ("throw" === n.method) {
                            if ("suspendedStart" === r) throw r = "completed", n.arg;
                            n.dispatchException(n.arg)
                        } else "return" === n.method && n.abrupt("return", n.arg);
                        r = "executing";
                        var l = c(e, t, n);
                        if ("normal" === l.type) {
                            if (r = n.done ? "completed" : "suspendedYield", l.arg === h) continue;
                            return {
                                value: l.arg,
                                done: n.done
                            }
                        }
                        "throw" === l.type && (r = "completed", n.method = "throw", n.arg = l.arg)
                    }
                }
            }

            function x(e, t) {
                var n = t.method,
                    r = e.iterator[n];
                if (void 0 === r) return t.delegate = null, "throw" === n && e.iterator.return && (t.method = "return", t.arg = void 0, x(e, t), "throw" === t.method) || "return" !== n && (t.method = "throw", t.arg = new TypeError("The iterator does not provide a '" + n + "' method")), h;
                var o = c(r, e.iterator, t.arg);
                if ("throw" === o.type) return t.method = "throw", t.arg = o.arg, t.delegate = null, h;
                var i = o.arg;
                return i ? i.done ? (t[e.resultName] = i.value, t.next = e.nextLoc, "return" !== t.method && (t.method = "next", t.arg = void 0), t.delegate = null, h) : i : (t.method = "throw", t.arg = new TypeError("iterator result is not an object"), t.delegate = null, h)
            }

            function E(e) {
                var t = {
                    tryLoc: e[0]
                };
                1 in e && (t.catchLoc = e[1]), 2 in e && (t.finallyLoc = e[2], t.afterLoc = e[3]), this.tryEntries.push(t)
            }

            function S(e) {
                var t = e.completion || {};
                t.type = "normal", delete t.arg, e.completion = t
            }

            function k(e) {
                this.tryEntries = [{
                    tryLoc: "root"
                }], e.forEach(E, this), this.reset(!0)
            }

            function T(e) {
                if (e) {
                    var t = e[i];
                    if (t) return t.call(e);
                    if ("function" == typeof e.next) return e;
                    if (!isNaN(e.length)) {
                        var r = -1,
                            o = function t() {
                                for (; ++r < e.length;)
                                    if (n.call(e, r)) return t.value = e[r], t.done = !1, t;
                                return t.value = void 0, t.done = !0, t
                            };
                        return o.next = o
                    }
                }
                return {
                    next: C
                }
            }

            function C() {
                return {
                    value: void 0,
                    done: !0
                }
            }
            return f.prototype = p, r(y, "constructor", {
                value: p,
                configurable: !0
            }), r(p, "constructor", {
                value: f,
                configurable: !0
            }), f.displayName = l(p, s, "GeneratorFunction"), e.isGeneratorFunction = function(e) {
                var t = "function" == typeof e && e.constructor;
                return !!t && (t === f || "GeneratorFunction" === (t.displayName || t.name))
            }, e.mark = function(e) {
                return Object.setPrototypeOf ? Object.setPrototypeOf(e, p) : (e.__proto__ = p, l(e, s, "GeneratorFunction")), e.prototype = Object.create(y), e
            }, e.awrap = function(e) {
                return {
                    __await: e
                }
            }, b(w.prototype), l(w.prototype, a, (function() {
                return this
            })), e.AsyncIterator = w, e.async = function(t, n, r, o, i) {
                void 0 === i && (i = Promise);
                var a = new w(u(t, n, r, o), i);
                return e.isGeneratorFunction(n) ? a : a.next().then((function(e) {
                    return e.done ? e.value : a.next()
                }))
            }, b(y), l(y, s, "Generator"), l(y, i, (function() {
                return this
            })), l(y, "toString", (function() {
                return "[object Generator]"
            })), e.keys = function(e) {
                var t = Object(e),
                    n = [];
                for (var r in t) n.push(r);
                return n.reverse(),
                    function e() {
                        for (; n.length;) {
                            var r = n.pop();
                            if (r in t) return e.value = r, e.done = !1, e
                        }
                        return e.done = !0, e
                    }
            }, e.values = T, k.prototype = {
                constructor: k,
                reset: function(e) {
                    if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(S), !e)
                        for (var t in this) "t" === t.charAt(0) && n.call(this, t) && !isNaN(+t.slice(1)) && (this[t] = void 0)
                },
                stop: function() {
                    this.done = !0;
                    var e = this.tryEntries[0].completion;
                    if ("throw" === e.type) throw e.arg;
                    return this.rval
                },
                dispatchException: function(e) {
                    if (this.done) throw e;
                    var t = this;

                    function r(n, r) {
                        return a.type = "throw", a.arg = e, t.next = n, r && (t.method = "next", t.arg = void 0), !!r
                    }
                    for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                        var i = this.tryEntries[o],
                            a = i.completion;
                        if ("root" === i.tryLoc) return r("end");
                        if (i.tryLoc <= this.prev) {
                            var s = n.call(i, "catchLoc"),
                                l = n.call(i, "finallyLoc");
                            if (s && l) {
                                if (this.prev < i.catchLoc) return r(i.catchLoc, !0);
                                if (this.prev < i.finallyLoc) return r(i.finallyLoc)
                            } else if (s) {
                                if (this.prev < i.catchLoc) return r(i.catchLoc, !0)
                            } else {
                                if (!l) throw new Error("try statement without catch or finally");
                                if (this.prev < i.finallyLoc) return r(i.finallyLoc)
                            }
                        }
                    }
                },
                abrupt: function(e, t) {
                    for (var r = this.tryEntries.length - 1; r >= 0; --r) {
                        var o = this.tryEntries[r];
                        if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                            var i = o;
                            break
                        }
                    }
                    i && ("break" === e || "continue" === e) && i.tryLoc <= t && t <= i.finallyLoc && (i = null);
                    var a = i ? i.completion : {};
                    return a.type = e, a.arg = t, i ? (this.method = "next", this.next = i.finallyLoc, h) : this.complete(a)
                },
                complete: function(e, t) {
                    if ("throw" === e.type) throw e.arg;
                    return "break" === e.type || "continue" === e.type ? this.next = e.arg : "return" === e.type ? (this.rval = this.arg = e.arg, this.method = "return", this.next = "end") : "normal" === e.type && t && (this.next = t), h
                },
                finish: function(e) {
                    for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                        var n = this.tryEntries[t];
                        if (n.finallyLoc === e) return this.complete(n.completion, n.afterLoc), S(n), h
                    }
                },
                catch: function(e) {
                    for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                        var n = this.tryEntries[t];
                        if (n.tryLoc === e) {
                            var r = n.completion;
                            if ("throw" === r.type) {
                                var o = r.arg;
                                S(n)
                            }
                            return o
                        }
                    }
                    throw new Error("illegal catch attempt")
                },
                delegateYield: function(e, t, n) {
                    return this.delegate = {
                        iterator: T(e),
                        resultName: t,
                        nextLoc: n
                    }, "next" === this.method && (this.arg = void 0), h
                }
            }, e
        }

        function Gv(e, t) {
            var n = "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
            if (!n) {
                if (Array.isArray(e) || (n = function(e, t) {
                        if (e) {
                            if ("string" == typeof e) return Qv(e, t);
                            var n = Object.prototype.toString.call(e).slice(8, -1);
                            return "Object" === n && e.constructor && (n = e.constructor.name), "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Qv(e, t) : void 0
                        }
                    }(e)) || t && e && "number" == typeof e.length) {
                    n && (e = n);
                    var r = 0,
                        o = function() {};
                    return {
                        s: o,
                        n: function() {
                            return r >= e.length ? {
                                done: !0
                            } : {
                                done: !1,
                                value: e[r++]
                            }
                        },
                        e: function(e) {
                            throw e
                        },
                        f: o
                    }
                }
                throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
            }
            var i, a = !0,
                s = !1;
            return {
                s: function() {
                    n = n.call(e)
                },
                n: function() {
                    var e = n.next();
                    return a = e.done, e
                },
                e: function(e) {
                    s = !0, i = e
                },
                f: function() {
                    try {
                        a || null == n.return || n.return()
                    } finally {
                        if (s) throw i
                    }
                }
            }
        }

        function Qv(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
            return r
        }

        function Yv(e, t, n, r, o, i, a) {
            try {
                var s = e[i](a),
                    l = s.value
            } catch (e) {
                return void n(e)
            }
            s.done ? t(l) : Promise.resolve(l).then(r, o)
        }

        function $v(e) {
            return function() {
                var t = this,
                    n = arguments;
                return new Promise((function(r, o) {
                    var i = e.apply(t, n);

                    function a(e) {
                        Yv(i, r, o, a, s, "next", e)
                    }

                    function s(e) {
                        Yv(i, r, o, a, s, "throw", e)
                    }
                    a(void 0)
                }))
            }
        }
        var Zv = "function" == typeof(null === (Uv = window.FileSystemFileHandle) || void 0 === Uv || null === (Wv = Uv.prototype) || void 0 === Wv ? void 0 : Wv.createWritable),
            Xv = function() {
                var e = $v(Hv().mark((function e(t) {
                    var n, r, o, i, a, s = arguments;
                    return Hv().wrap((function(e) {
                        for (;;) switch (e.prev = e.next) {
                            case 0:
                                return n = s.length > 1 && void 0 !== s[1] ? s[1] : [], e.next = 3, t;
                            case 3:
                                r = e.sent, o = Gv(n), e.prev = 5, o.s();
                            case 7:
                                if ((i = o.n()).done) {
                                    e.next = 14;
                                    break
                                }
                                return a = i.value, e.next = 11, r.getDirectoryHandle(a, {
                                    create: !0
                                });
                            case 11:
                                r = e.sent;
                            case 12:
                                e.next = 7;
                                break;
                            case 14:
                                e.next = 19;
                                break;
                            case 16:
                                e.prev = 16, e.t0 = e.catch(5), o.e(e.t0);
                            case 19:
                                return e.prev = 19, o.f(), e.finish(19);
                            case 22:
                                return e.abrupt("return", r);
                            case 23:
                            case "end":
                                return e.stop()
                        }
                    }), e, null, [
                        [5, 16, 19, 22]
                    ])
                })));
                return function(t) {
                    return e.apply(this, arguments)
                }
            }(),
            Kv = function(e) {
                var t = e.fileName,
                    n = e.storeDirectoryPath,
                    r = void 0 === n ? [] : n,
                    i = new Worker(new URL(o.p + o.u(125), o.b)),
                    a = {
                        write: function(e) {
                            return new Promise((function(t) {
                                i.addEventListener("message", (function e(n) {
                                    "ready" === n.data && (t(), i.removeEventListener("message", e))
                                })), i.postMessage({
                                    type: "data",
                                    chunk: e
                                }, [e.buffer])
                            }))
                        },
                        close: function() {
                            return new Promise((function(e) {
                                i.addEventListener("message", (function t(n) {
                                    "closed" === n.data && (e(), i.removeEventListener("message", t), i.terminate())
                                })), i.postMessage({
                                    type: "close"
                                })
                            }))
                        }
                    };
                return new Promise((function(e) {
                    i.addEventListener("message", (function t(n) {
                        "ready" === n.data && (e(a), i.removeEventListener("message", t))
                    })), i.postMessage({
                        type: "setup",
                        fileName: t,
                        storeDirectoryPath: r
                    })
                }))
            };
        const Jv = function(e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [],
                n = Xv(e, t),
                r = function() {
                    var e = $v(Hv().mark((function e() {
                        var t, r;
                        return Hv().wrap((function(e) {
                            for (;;) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2, n;
                                case 2:
                                    return t = e.sent, e.prev = 3, e.next = 6, Bv(t.values());
                                case 6:
                                    return r = e.sent, e.abrupt("return", Promise.all(r.filter((function(e) {
                                        return "file" === e.kind
                                    }))));
                                case 10:
                                    return e.prev = 10, e.t0 = e.catch(3), console.error(e.t0), e.abrupt("return", []);
                                case 14:
                                case "end":
                                    return e.stop()
                            }
                        }), e, null, [
                            [3, 10]
                        ])
                    })));
                    return function() {
                        return e.apply(this, arguments)
                    }
                }(),
                i = function() {
                    var e = $v(Hv().mark((function e() {
                        var t, n;
                        return Hv().wrap((function(e) {
                            for (;;) switch (e.prev = e.next) {
                                case 0:
                                    return e.prev = 0, e.next = 3, r();
                                case 3:
                                    return t = e.sent, e.next = 6, Promise.all(t.map((function(e) {
                                        return e.getFile().catch((function(e) {
                                            console.error(e)
                                        }))
                                    })));
                                case 6:
                                    return n = e.sent, e.abrupt("return", n.filter((function(e) {
                                        return Boolean(e)
                                    })));
                                case 10:
                                    return e.prev = 10, e.t0 = e.catch(0), console.error(e.t0), e.abrupt("return", []);
                                case 14:
                                case "end":
                                    return e.stop()
                            }
                        }), e, null, [
                            [0, 10]
                        ])
                    })));
                    return function() {
                        return e.apply(this, arguments)
                    }
                }(),
                a = function() {
                    var e = $v(Hv().mark((function e(t) {
                        var r, o;
                        return Hv().wrap((function(e) {
                            for (;;) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2, n;
                                case 2:
                                    return r = e.sent, e.prev = 3, e.next = 6, r.getFileHandle(t);
                                case 6:
                                    return o = e.sent, e.next = 9, o.getFile();
                                case 9:
                                    return e.abrupt("return", e.sent);
                                case 12:
                                    return e.prev = 12, e.t0 = e.catch(3), console.error(e.t0), e.abrupt("return", null);
                                case 16:
                                case "end":
                                    return e.stop()
                            }
                        }), e, null, [
                            [3, 12]
                        ])
                    })));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }(),
                s = function() {
                    var e = $v(Hv().mark((function e(r) {
                        var o, i;
                        return Hv().wrap((function(e) {
                            for (;;) switch (e.prev = e.next) {
                                case 0:
                                    if (Zv) {
                                        e.next = 2;
                                        break
                                    }
                                    return e.abrupt("return", Kv({
                                        fileName: r,
                                        storeDirectoryPath: t
                                    }));
                                case 2:
                                    return e.prev = 2, e.next = 5, n;
                                case 5:
                                    return o = e.sent, e.next = 8, o.getFileHandle(r, {
                                        create: !0
                                    });
                                case 8:
                                    return i = e.sent, e.abrupt("return", i.createWritable());
                                case 12:
                                    e.prev = 12, e.t0 = e.catch(2), console.error(e.t0);
                                case 15:
                                case "end":
                                    return e.stop()
                            }
                        }), e, null, [
                            [2, 12]
                        ])
                    })));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }(),
                l = function() {
                    var e = $v(Hv().mark((function e(t) {
                        var r, o, i, a, s;
                        return Hv().wrap((function(e) {
                            for (;;) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2, n;
                                case 2:
                                    return r = e.sent, e.prev = 3, e.next = 6, r.getFileHandle(t.name, {
                                        create: !0
                                    });
                                case 6:
                                    return i = e.sent, e.next = 9, i.createWritable();
                                case 9:
                                    return o = e.sent, e.next = 12, t.arrayBuffer();
                                case 12:
                                    return a = e.sent, e.next = 15, o.write(a);
                                case 15:
                                    e.next = 20;
                                    break;
                                case 17:
                                    e.prev = 17, e.t0 = e.catch(3), console.error(e.t0);
                                case 20:
                                    return e.prev = 20, e.prev = 21, e.next = 24, null === (s = o) || void 0 === s ? void 0 : s.close();
                                case 24:
                                    e.next = 29;
                                    break;
                                case 26:
                                    e.prev = 26, e.t1 = e.catch(21), console.error(e.t1);
                                case 29:
                                    return e.finish(20);
                                case 30:
                                case "end":
                                    return e.stop()
                            }
                        }), e, null, [
                            [3, 17, 20, 30],
                            [21, 26]
                        ])
                    })));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }(),
                u = function() {
                    var e = $v(Hv().mark((function e(n) {
                        var r, i;
                        return Hv().wrap((function(e) {
                            for (;;) switch (e.prev = e.next) {
                                case 0:
                                    if (!Zv && window.Worker && null != n && n.length) {
                                        e.next = 2;
                                        break
                                    }
                                    return e.abrupt("return");
                                case 2:
                                    return e.next = 4, Promise.all(n.map(function() {
                                        var e = $v(Hv().mark((function e(t) {
                                            var n;
                                            return Hv().wrap((function(e) {
                                                for (;;) switch (e.prev = e.next) {
                                                    case 0:
                                                        return e.prev = 0, e.next = 3, t.arrayBuffer();
                                                    case 3:
                                                        return n = e.sent, e.abrupt("return", {
                                                            name: t.name,
                                                            size: t.size,
                                                            type: t.type,
                                                            arrayBuffer: n
                                                        });
                                                    case 7:
                                                        e.prev = 7, e.t0 = e.catch(0), console.error(e.t0);
                                                    case 10:
                                                    case "end":
                                                        return e.stop()
                                                }
                                            }), e, null, [
                                                [0, 7]
                                            ])
                                        })));
                                        return function(t) {
                                            return e.apply(this, arguments)
                                        }
                                    }())).then((function(e) {
                                        return e.filter((function(e) {
                                            return e
                                        }))
                                    }));
                                case 4:
                                    if ((r = e.sent).length) {
                                        e.next = 7;
                                        break
                                    }
                                    return e.abrupt("return");
                                case 7:
                                    return i = new Worker(new URL(o.p + o.u(538), o.b)), e.abrupt("return", new Promise((function(e) {
                                        i.onmessage = function() {
                                            i.terminate(), e()
                                        }, i.postMessage({
                                            fileLikes: r,
                                            storeDirectoryPath: t
                                        }, r.map((function(e) {
                                            return e.arrayBuffer
                                        })))
                                    })));
                                case 9:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    })));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }(),
                c = function() {
                    var e = $v(Hv().mark((function e(t) {
                        return Hv().wrap((function(e) {
                            for (;;) switch (e.prev = e.next) {
                                case 0:
                                    if (null != t && t.length) {
                                        e.next = 2;
                                        break
                                    }
                                    return e.abrupt("return");
                                case 2:
                                    if (Zv) {
                                        e.next = 6;
                                        break
                                    }
                                    return e.next = 5, u(t);
                                case 5:
                                    return e.abrupt("return");
                                case 6:
                                    return e.prev = 6, e.next = 9, Promise.all(t.map((function(e) {
                                        return l(e)
                                    })));
                                case 9:
                                    e.next = 14;
                                    break;
                                case 11:
                                    e.prev = 11, e.t0 = e.catch(6), console.error(e.t0);
                                case 14:
                                case "end":
                                    return e.stop()
                            }
                        }), e, null, [
                            [6, 11]
                        ])
                    })));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }(),
                h = function() {
                    var e = $v(Hv().mark((function e() {
                        var t, r, o, i, a = arguments;
                        return Hv().wrap((function(e) {
                            for (;;) switch (e.prev = e.next) {
                                case 0:
                                    if (t = a.length > 0 && void 0 !== a[0] ? a[0] : [], r = (a.length > 1 && void 0 !== a[1] ? a[1] : {}).shouldSilenceErrors, o = void 0 !== r && r, t.length) {
                                        e.next = 4;
                                        break
                                    }
                                    return e.abrupt("return");
                                case 4:
                                    return e.next = 6, n;
                                case 6:
                                    return i = e.sent, e.prev = 7, e.next = 10, Promise.all(t.map((function(e) {
                                        return i.removeEntry(e).catch((function(e) {
                                            o || console.error(e)
                                        }))
                                    })));
                                case 10:
                                    e.next = 15;
                                    break;
                                case 12:
                                    e.prev = 12, e.t0 = e.catch(7), o || console.error(e.t0);
                                case 15:
                                case "end":
                                    return e.stop()
                            }
                        }), e, null, [
                            [7, 12]
                        ])
                    })));
                    return function() {
                        return e.apply(this, arguments)
                    }
                }(),
                d = function() {
                    var e = $v(Hv().mark((function e() {
                        var t, o;
                        return Hv().wrap((function(e) {
                            for (;;) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2, r();
                                case 2:
                                    if ((t = e.sent).length) {
                                        e.next = 5;
                                        break
                                    }
                                    return e.abrupt("return");
                                case 5:
                                    return e.prev = 5, e.next = 8, n;
                                case 8:
                                    return o = e.sent, e.next = 11, Promise.all(t.map((function(e) {
                                        return o.removeEntry(e.name)
                                    })));
                                case 11:
                                    e.next = 16;
                                    break;
                                case 13:
                                    e.prev = 13, e.t0 = e.catch(5), console.error(e.t0);
                                case 16:
                                case "end":
                                    return e.stop()
                            }
                        }), e, null, [
                            [5, 13]
                        ])
                    })));
                    return function() {
                        return e.apply(this, arguments)
                    }
                }();
            return {
                getAll: i,
                get: a,
                put: c,
                remove: h,
                createWriteable: s,
                clear: d
            }
        };

        function eg(e) {
            return eg = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                return typeof e
            } : function(e) {
                return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
            }, eg(e)
        }

        function tg() {
            tg = function() {
                return e
            };
            var e = {},
                t = Object.prototype,
                n = t.hasOwnProperty,
                r = Object.defineProperty || function(e, t, n) {
                    e[t] = n.value
                },
                o = "function" == typeof Symbol ? Symbol : {},
                i = o.iterator || "@@iterator",
                a = o.asyncIterator || "@@asyncIterator",
                s = o.toStringTag || "@@toStringTag";

            function l(e, t, n) {
                return Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }), e[t]
            }
            try {
                l({}, "")
            } catch (e) {
                l = function(e, t, n) {
                    return e[t] = n
                }
            }

            function u(e, t, n, o) {
                var i = t && t.prototype instanceof d ? t : d,
                    a = Object.create(i.prototype),
                    s = new k(o || []);
                return r(a, "_invoke", {
                    value: _(e, n, s)
                }), a
            }

            function c(e, t, n) {
                try {
                    return {
                        type: "normal",
                        arg: e.call(t, n)
                    }
                } catch (e) {
                    return {
                        type: "throw",
                        arg: e
                    }
                }
            }
            e.wrap = u;
            var h = {};

            function d() {}

            function f() {}

            function p() {}
            var m = {};
            l(m, i, (function() {
                return this
            }));
            var v = Object.getPrototypeOf,
                g = v && v(v(T([])));
            g && g !== t && n.call(g, i) && (m = g);
            var y = p.prototype = d.prototype = Object.create(m);

            function b(e) {
                ["next", "throw", "return"].forEach((function(t) {
                    l(e, t, (function(e) {
                        return this._invoke(t, e)
                    }))
                }))
            }

            function w(e, t) {
                function o(r, i, a, s) {
                    var l = c(e[r], e, i);
                    if ("throw" !== l.type) {
                        var u = l.arg,
                            h = u.value;
                        return h && "object" == eg(h) && n.call(h, "__await") ? t.resolve(h.__await).then((function(e) {
                            o("next", e, a, s)
                        }), (function(e) {
                            o("throw", e, a, s)
                        })) : t.resolve(h).then((function(e) {
                            u.value = e, a(u)
                        }), (function(e) {
                            return o("throw", e, a, s)
                        }))
                    }
                    s(l.arg)
                }
                var i;
                r(this, "_invoke", {
                    value: function(e, n) {
                        function r() {
                            return new t((function(t, r) {
                                o(e, n, t, r)
                            }))
                        }
                        return i = i ? i.then(r, r) : r()
                    }
                })
            }

            function _(e, t, n) {
                var r = "suspendedStart";
                return function(o, i) {
                    if ("executing" === r) throw new Error("Generator is already running");
                    if ("completed" === r) {
                        if ("throw" === o) throw i;
                        return {
                            value: void 0,
                            done: !0
                        }
                    }
                    for (n.method = o, n.arg = i;;) {
                        var a = n.delegate;
                        if (a) {
                            var s = x(a, n);
                            if (s) {
                                if (s === h) continue;
                                return s
                            }
                        }
                        if ("next" === n.method) n.sent = n._sent = n.arg;
                        else if ("throw" === n.method) {
                            if ("suspendedStart" === r) throw r = "completed", n.arg;
                            n.dispatchException(n.arg)
                        } else "return" === n.method && n.abrupt("return", n.arg);
                        r = "executing";
                        var l = c(e, t, n);
                        if ("normal" === l.type) {
                            if (r = n.done ? "completed" : "suspendedYield", l.arg === h) continue;
                            return {
                                value: l.arg,
                                done: n.done
                            }
                        }
                        "throw" === l.type && (r = "completed", n.method = "throw", n.arg = l.arg)
                    }
                }
            }

            function x(e, t) {
                var n = t.method,
                    r = e.iterator[n];
                if (void 0 === r) return t.delegate = null, "throw" === n && e.iterator.return && (t.method = "return", t.arg = void 0, x(e, t), "throw" === t.method) || "return" !== n && (t.method = "throw", t.arg = new TypeError("The iterator does not provide a '" + n + "' method")), h;
                var o = c(r, e.iterator, t.arg);
                if ("throw" === o.type) return t.method = "throw", t.arg = o.arg, t.delegate = null, h;
                var i = o.arg;
                return i ? i.done ? (t[e.resultName] = i.value, t.next = e.nextLoc, "return" !== t.method && (t.method = "next", t.arg = void 0), t.delegate = null, h) : i : (t.method = "throw", t.arg = new TypeError("iterator result is not an object"), t.delegate = null, h)
            }

            function E(e) {
                var t = {
                    tryLoc: e[0]
                };
                1 in e && (t.catchLoc = e[1]), 2 in e && (t.finallyLoc = e[2], t.afterLoc = e[3]), this.tryEntries.push(t)
            }

            function S(e) {
                var t = e.completion || {};
                t.type = "normal", delete t.arg, e.completion = t
            }

            function k(e) {
                this.tryEntries = [{
                    tryLoc: "root"
                }], e.forEach(E, this), this.reset(!0)
            }

            function T(e) {
                if (e) {
                    var t = e[i];
                    if (t) return t.call(e);
                    if ("function" == typeof e.next) return e;
                    if (!isNaN(e.length)) {
                        var r = -1,
                            o = function t() {
                                for (; ++r < e.length;)
                                    if (n.call(e, r)) return t.value = e[r], t.done = !1, t;
                                return t.value = void 0, t.done = !0, t
                            };
                        return o.next = o
                    }
                }
                return {
                    next: C
                }
            }

            function C() {
                return {
                    value: void 0,
                    done: !0
                }
            }
            return f.prototype = p, r(y, "constructor", {
                value: p,
                configurable: !0
            }), r(p, "constructor", {
                value: f,
                configurable: !0
            }), f.displayName = l(p, s, "GeneratorFunction"), e.isGeneratorFunction = function(e) {
                var t = "function" == typeof e && e.constructor;
                return !!t && (t === f || "GeneratorFunction" === (t.displayName || t.name))
            }, e.mark = function(e) {
                return Object.setPrototypeOf ? Object.setPrototypeOf(e, p) : (e.__proto__ = p, l(e, s, "GeneratorFunction")), e.prototype = Object.create(y), e
            }, e.awrap = function(e) {
                return {
                    __await: e
                }
            }, b(w.prototype), l(w.prototype, a, (function() {
                return this
            })), e.AsyncIterator = w, e.async = function(t, n, r, o, i) {
                void 0 === i && (i = Promise);
                var a = new w(u(t, n, r, o), i);
                return e.isGeneratorFunction(n) ? a : a.next().then((function(e) {
                    return e.done ? e.value : a.next()
                }))
            }, b(y), l(y, s, "Generator"), l(y, i, (function() {
                return this
            })), l(y, "toString", (function() {
                return "[object Generator]"
            })), e.keys = function(e) {
                var t = Object(e),
                    n = [];
                for (var r in t) n.push(r);
                return n.reverse(),
                    function e() {
                        for (; n.length;) {
                            var r = n.pop();
                            if (r in t) return e.value = r, e.done = !1, e
                        }
                        return e.done = !0, e
                    }
            }, e.values = T, k.prototype = {
                constructor: k,
                reset: function(e) {
                    if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(S), !e)
                        for (var t in this) "t" === t.charAt(0) && n.call(this, t) && !isNaN(+t.slice(1)) && (this[t] = void 0)
                },
                stop: function() {
                    this.done = !0;
                    var e = this.tryEntries[0].completion;
                    if ("throw" === e.type) throw e.arg;
                    return this.rval
                },
                dispatchException: function(e) {
                    if (this.done) throw e;
                    var t = this;

                    function r(n, r) {
                        return a.type = "throw", a.arg = e, t.next = n, r && (t.method = "next", t.arg = void 0), !!r
                    }
                    for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                        var i = this.tryEntries[o],
                            a = i.completion;
                        if ("root" === i.tryLoc) return r("end");
                        if (i.tryLoc <= this.prev) {
                            var s = n.call(i, "catchLoc"),
                                l = n.call(i, "finallyLoc");
                            if (s && l) {
                                if (this.prev < i.catchLoc) return r(i.catchLoc, !0);
                                if (this.prev < i.finallyLoc) return r(i.finallyLoc)
                            } else if (s) {
                                if (this.prev < i.catchLoc) return r(i.catchLoc, !0)
                            } else {
                                if (!l) throw new Error("try statement without catch or finally");
                                if (this.prev < i.finallyLoc) return r(i.finallyLoc)
                            }
                        }
                    }
                },
                abrupt: function(e, t) {
                    for (var r = this.tryEntries.length - 1; r >= 0; --r) {
                        var o = this.tryEntries[r];
                        if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                            var i = o;
                            break
                        }
                    }
                    i && ("break" === e || "continue" === e) && i.tryLoc <= t && t <= i.finallyLoc && (i = null);
                    var a = i ? i.completion : {};
                    return a.type = e, a.arg = t, i ? (this.method = "next", this.next = i.finallyLoc, h) : this.complete(a)
                },
                complete: function(e, t) {
                    if ("throw" === e.type) throw e.arg;
                    return "break" === e.type || "continue" === e.type ? this.next = e.arg : "return" === e.type ? (this.rval = this.arg = e.arg, this.method = "return", this.next = "end") : "normal" === e.type && t && (this.next = t), h
                },
                finish: function(e) {
                    for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                        var n = this.tryEntries[t];
                        if (n.finallyLoc === e) return this.complete(n.completion, n.afterLoc), S(n), h
                    }
                },
                catch: function(e) {
                    for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                        var n = this.tryEntries[t];
                        if (n.tryLoc === e) {
                            var r = n.completion;
                            if ("throw" === r.type) {
                                var o = r.arg;
                                S(n)
                            }
                            return o
                        }
                    }
                    throw new Error("illegal catch attempt")
                },
                delegateYield: function(e, t, n) {
                    return this.delegate = {
                        iterator: T(e),
                        resultName: t,
                        nextLoc: n
                    }, "next" === this.method && (this.arg = void 0), h
                }
            }, e
        }

        function ng(e, t, n, r, o, i, a) {
            try {
                var s = e[i](a),
                    l = s.value
            } catch (e) {
                return void n(e)
            }
            s.done ? t(l) : Promise.resolve(l).then(r, o)
        }

        function rg(e) {
            return function() {
                var t = this,
                    n = arguments;
                return new Promise((function(r, o) {
                    var i = e.apply(t, n);

                    function a(e) {
                        ng(i, r, o, a, s, "next", e)
                    }

                    function s(e) {
                        ng(i, r, o, a, s, "throw", e)
                    }
                    a(void 0)
                }))
            }
        }
        var og = {
            getAll: function() {
                return Promise.resolve([])
            },
            get: function() {
                return Promise.resolve(null)
            },
            put: function() {
                return Promise.resolve()
            },
            remove: function() {
                return Promise.resolve()
            },
            createWriteable: function() {
                return Promise.resolve({
                    write: function() {
                        return Promise.resolve(void 0)
                    },
                    close: function() {
                        return Promise.resolve(void 0)
                    }
                })
            },
            clear: function() {
                return Promise.resolve()
            }
        };
        Eo().rawContext.addEventListener("statechange", (function() {
            var e = Eo().rawContext;
            "interrupted" === e.state && e.resume().catch((function() {}))
        })), window.addEventListener("click", (function() {
            xo.resume()
        }));
        var ig, ag, sg = (ig = [{
            path: "/",
            element: e.createElement((function(t) {
                var n, r = t.children,
                    o = pc(vl(), 2),
                    i = o[0],
                    a = o[1],
                    s = hc(fc),
                    l = pc((0, e.useState)(), 2),
                    u = l[0],
                    c = l[1],
                    h = pc((0, e.useState)(s), 2),
                    d = h[0],
                    f = h[1],
                    p = pc((0, e.useState)(Boolean(s)), 2),
                    m = p[0],
                    v = p[1],
                    g = pc((0, e.useState)(), 2),
                    y = g[0],
                    b = g[1],
                    w = pc((0, e.useState)(!1), 2),
                    _ = w[0],
                    x = w[1],
                    E = pc((0, e.useState)(""), 2),
                    S = E[0],
                    k = E[1],
                    T = pc((0, e.useState)(!1), 2),
                    C = T[0],
                    O = T[1],
                    A = /[A-Z0-9]{8}-[A-Z0-9]{8}-[A-Z0-9]{8}-[A-Z0-9]{8}/.test(d),
                    P = "string" == typeof(null == u || null === (n = u.purchase) || void 0 === n ? void 0 : n.subscription_cancelled_at) && new Date(u.purchase.subscription_cancelled_at);
                (0, e.useEffect)((function() {
                    if (x(!1), d && A) {
                        var e = !1;
                        return v(!0), b(void 0), cc(d).then((function(t) {
                                var n;
                                if (!e) {
                                    c(t);
                                    var r, o = Boolean((null == t ? void 0 : t.success) && t.purchase && [t.purchase.subscription_ended_at, t.purchase.subscription_cancelled_at, t.purchase.subscription_failed_at].every((function(e) {
                                        return function(e) {
                                            if (!e) return !0;
                                            var t = new Date(e).valueOf();
                                            return !!Number.isNaN(t) || Date.now() < t
                                        }(e)
                                    })));
                                    x(o), k((r = null == t || null === (n = t.purchase) || void 0 === n ? void 0 : n.subscription_id) ? "https://app.gumroad.com/subscriptions/".concat(r, "/manage") : ""), o && function(e) {
                                        dc(fc, e)
                                    }(d)
                                }
                            })).catch((function(t) {
                                e || b(t)
                            })).finally((function() {
                                e || v(!1)
                            })),
                            function() {
                                e = !0
                            }
                    }
                    v(!1)
                }), [d, C]);
                var R = function(e) {
                    f(e), e === d && O((function(e) {
                        return !e
                    })), v(Boolean(e && e !== d))
                };
                return (0, e.useEffect)((function() {
                    i.has(vc) && !m && (a((function(e) {
                        var t = new URLSearchParams(e);
                        return t.delete(vc), t
                    })), _ || R(i.get(vc)))
                }), [i, m, _]), e.createElement(gl.Provider, {
                    value: {
                        licenseKey: d,
                        isFetching: m,
                        isActive: _,
                        setLicenseKey: R,
                        managementHref: S,
                        isCorrectFormat: A,
                        fetchFailure: y,
                        clearLicenseKey: function() {
                            R(""), k(""),
                                function() {
                                    return e = fc, null === (t = window.localStorage) || void 0 === t ? void 0 : t.removeItem(e);
                                    var e, t
                                }()
                        },
                        endDate: P
                    }
                }, r)
            }), null, e.createElement((function(t) {
                var n = t.children,
                    r = Uc((0, e.useState)({
                        pro: {
                            priceUSD: 6
                        }
                    }), 1)[0],
                    o = Uc((0, e.useState)(!1), 1)[0];
                return e.createElement(zu.Provider, {
                    value: {
                        pricing: r,
                        isFetching: o
                    }
                }, n)
            }), null, e.createElement((function(t) {
                var n = t.children,
                    r = Nv((function() {
                        return qu ? window.navigator.storage.getDirectory() : null
                    })),
                    o = Nv((function() {
                        return r ? Jv(r, ["remix-sources"]) : og
                    })),
                    i = Nv((function() {
                        return r ? Jv(r) : og
                    })),
                    a = Nv((function() {
                        return {
                            getAll: (t = rg(tg().mark((function e() {
                                return tg().wrap((function(e) {
                                    for (;;) switch (e.prev = e.next) {
                                        case 0:
                                            return e.next = 2, Promise.all([o, i].map((function(e) {
                                                return e.getAll()
                                            })));
                                        case 2:
                                            return e.abrupt("return", e.sent.flat());
                                        case 3:
                                        case "end":
                                            return e.stop()
                                    }
                                }), e)
                            }))), function() {
                                return t.apply(this, arguments)
                            }),
                            remove: (e = rg(tg().mark((function e(t) {
                                return tg().wrap((function(e) {
                                    for (;;) switch (e.prev = e.next) {
                                        case 0:
                                            return e.next = 2, Promise.all([o, i].map((function(e) {
                                                return e.remove(t, {
                                                    shouldSilenceErrors: !0
                                                })
                                            })));
                                        case 2:
                                        case "end":
                                            return e.stop()
                                    }
                                }), e)
                            }))), function(t) {
                                return e.apply(this, arguments)
                            }),
                            put: o.put,
                            get: o.get,
                            createWriteable: o.createWriteable,
                            clear: o.clear
                        };
                        var e, t
                    }));
                return e.createElement(Fm.Provider, {
                    value: a
                }, n)
            }), null, e.createElement((function(t) {
                var n = t.children,
                    r = Nv((function() {
                        return qu ? window.navigator.storage.getDirectory() : null
                    })),
                    o = Nv((function() {
                        return r ? Jv(r, ["rendered-archives"]) : (e = new Map, {
                            getAll: function() {
                                return Promise.resolve(Array.from(e.values()))
                            },
                            get: function(t) {
                                return Promise.resolve(e.get(t))
                            },
                            put: function(t) {
                                return t.forEach((function(t) {
                                    return e.set(t.name, t)
                                })), Promise.resolve()
                            },
                            remove: function() {
                                return (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : []).forEach((function(t) {
                                    return e.delete(t)
                                })), Promise.resolve()
                            },
                            createWriteable: function(t) {
                                var n = [];
                                return Promise.resolve({
                                    write: function(e) {
                                        return n.push(e), Promise.resolve()
                                    },
                                    close: function() {
                                        var r = new Blob(n, {
                                                type: "application/zip"
                                            }),
                                            o = new File([r], t, {
                                                type: r.type
                                            });
                                        return e.set(t, o), Promise.resolve()
                                    }
                                })
                            },
                            clear: function() {
                                return e.clear(), Promise.resolve()
                            }
                        });
                        var e
                    }));
                return e.createElement(pp.Provider, {
                    value: o
                }, n)
            }), null, e.createElement((function(t) {
                var n, r = t.children,
                    o = (0, e.useRef)(null),
                    i = (0, e.useRef)(),
                    a = (0, e.useRef)(),
                    s = (0, e.useRef)(),
                    l = (0, e.useRef)(),
                    u = (0, e.useRef)(),
                    c = (0, e.useRef)(),
                    h = (0, e.useRef)(!1),
                    d = (0, e.useRef)(),
                    f = dv((0, e.useReducer)(cv, mv), 2),
                    p = f[0],
                    m = f[1],
                    v = yl(),
                    g = v.isActive,
                    y = v.isFetching,
                    b = Vm(),
                    w = $c(p),
                    _ = p.pendingRenderCount > 0,
                    x = p.remixes.filter((function(e) {
                        return Dh(e)
                    })),
                    E = dv((0, e.useState)(x), 2),
                    S = E[0],
                    k = E[1],
                    T = new Set(x.map((function(e) {
                        return e.id
                    }))),
                    C = S.filter((function(e) {
                        var t = e.id;
                        return !T.has(t)
                    }));
                C.forEach((function(e) {
                    e.audioBuffer.dispose()
                })), g && C.length && b.remove(C.map((function(e) {
                    return e.id
                })), {
                    shouldSilenceErrors: !0
                });
                var O = new Set(S.map((function(e) {
                    return e.id
                })));
                (x.length !== S.length || C.length > 0 || x.some((function(e) {
                    var t = e.id;
                    return !O.has(t)
                }))) && k(x), (0, e.useEffect)((function() {
                    return function() {
                        [i, a, s, l, u, c].filter((function(e) {
                            return e.current
                        })).forEach((function(e) {
                            e.current.dispose()
                        }))
                    }
                }), []), (0, e.useEffect)((function() {
                    if (_) {
                        var e = function(e) {
                            return e.preventDefault(), e.returnValue = !0, !0
                        };
                        return window.addEventListener("beforeunload", e),
                            function() {
                                window.removeEventListener("beforeunload", e)
                            }
                    }
                }), [p]), (0, e.useEffect)((function() {
                    if (!y) {
                        var e = !1;
                        return b.getAll().then((function(t) {
                                if (!e) return rv({
                                    storedFileNames: t.map((function(e) {
                                        return e.name
                                    }))
                                }).then((function(n) {
                                    if (!e) {
                                        m({
                                            type: Qc.ReplaceState,
                                            payload: n
                                        });
                                        var r = Object.fromEntries(t.map((function(e) {
                                                return [e.name, e]
                                            }))),
                                            o = n.remixes.map((function(e) {
                                                return [e, r[e.name]]
                                            })).filter((function(e) {
                                                return dv(e, 2)[1]
                                            })),
                                            i = o.concat(n.remixes.map((function(e) {
                                                return [e, r[e.id]]
                                            })).filter((function(e) {
                                                return dv(e, 2)[1]
                                            }))),
                                            a = new Set(i.map((function(e) {
                                                return dv(e, 2)[1]
                                            }))),
                                            s = t.filter((function(e) {
                                                return !a.has(e)
                                            })),
                                            l = new Set(o.map((function(e) {
                                                return dv(e, 2)[1]
                                            })));
                                        Promise.all(i.map((function(t) {
                                            var n = dv(t, 2),
                                                r = n[0],
                                                o = n[1];
                                            return jm(o).then((function(t) {
                                                e || (m({
                                                    type: Qc.DecodeSuccess,
                                                    payload: {
                                                        remixId: r.id,
                                                        audioBuffer: new bo(t)
                                                    }
                                                }), l.has(o) && s.push(o))
                                            })).catch((function(t) {
                                                e || (console.error(t), m({
                                                    type: Qc.DecodeFailure,
                                                    payload: {
                                                        remixId: r.id
                                                    }
                                                }), s.push(o))
                                            }))
                                        }))).then((function() {
                                            e || b.put(o.map((function(e) {
                                                var t = dv(e, 2),
                                                    n = t[0],
                                                    r = t[1];
                                                return Bm(r, n.id)
                                            }))).then((function() {
                                                b.remove(s.map((function(e) {
                                                    return e.name
                                                })))
                                            }))
                                        }))
                                    }
                                }))
                            })),
                            function() {
                                e = !0
                            }
                    }
                }), [g, y, b]), (0, e.useEffect)((function() {
                    y || ov(p, {
                        shouldStoreRemixes: g
                    })
                }), [y, g, p]);
                var A = function(e) {
                    if (m(e), Yc(p) && e.type === Qc.Seek && i.current)
                        if (p.isPlaying) {
                            h.current = !0;
                            var t = i.current.onstop;
                            i.current.onstop = function() {
                                h.current = !1;
                                var n = (e.payload - w.startOffsetSeconds) * w.playbackRate;
                                i.current.start(void 0, n), i.current.onstop = t
                            }, i.current.stop()
                        } else i.current.seek(e.payload * w.playbackRate)
                };
                (0, e.useEffect)((function() {
                    if (Yc(p) && p.isPlaying && (!w || Dh(w))) {
                        var e = setTimeout((function() {
                            m({
                                type: Qc.IncrementPlaybackTime,
                                payload: 1
                            })
                        }), 1e3);
                        return function() {
                            clearTimeout(e)
                        }
                    }
                }), [Yc(p) && p.isPlaying, Yc(p) && p.playbackPositionSeconds, w && Dh(w)]), a.current || (a.current = new Bo(p.gain).toDestination()), s.current || (s.current = new ta(5), s.current.generate().then((function() {
                    s.current.connect(a.current)
                }))), c.current || (c.current = new $i(0), c.current.connect(s.current)), u.current || (u.current = new sa({
                    lowFrequency: 160,
                    low: 0,
                    mid: 0,
                    high: 0
                }), u.current.connect(c.current.b)), l.current || (l.current = new ea({
                    windowSize: .1
                }), l.current.connect(u.current), l.current.connect(c.current.a));
                var P, R, M, D, N, I, L, q, j = Math.round((null == w ? void 0 : w.startOffsetSeconds) * (null == w ? void 0 : w.playbackRate) * 1e3) / 1e3,
                    F = w && Dh(w) ? w.audioBuffer.duration : null,
                    V = (P = function() {
                        return w && Dh(w) && ![j, F].some((function(e) {
                            return "number" != typeof e || Number.isNaN(e)
                        })) ? w.audioBuffer.slice(j, F) : null
                    }, R = [Dh(w) && (null == w ? void 0 : w.audioBuffer), j, F], D = (M = dv((0, e.useState)((function() {
                        return P()
                    })), 2))[0], N = M[1], I = (0, e.useRef)(Date.now()), (0, e.useEffect)((function() {
                        var e = Date.now();
                        if (!(e - I.current >= 250)) {
                            var t = setTimeout((function() {
                                N(P()), I.current = Date.now()
                            }), 250 - (e - I.current));
                            return function() {
                                return clearTimeout(t)
                            }
                        }
                        N(P()), I.current = e
                    }), [].concat(function(e) {
                        if (Array.isArray(e)) return pv(e)
                    }(q = R) || function(e) {
                        if ("undefined" != typeof Symbol && null != e[Symbol.iterator] || null != e["@@iterator"]) return Array.from(e)
                    }(q) || fv(q) || function() {
                        throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                    }(), [250])), D);
                if (!i.current || V && i.current.buffer.get() === V.get() || (i.current.dispose(), i.current = void 0), !i.current && Yc(p) && V && (h.current = !1, i.current = new Ni(V).connect(l.current), p.isPlaying)) {
                    var B = (p.playbackPositionSeconds - w.startOffsetSeconds) * w.playbackRate;
                    i.current.start(void 0, B)
                }
                if (i.current && w && i.current.set({
                        playbackRate: w.playbackRate
                    }), c.current && w && c.current.set({
                        fade: w.lowBandDecibels > 0 ? 1 : 0
                    }), u.current && w && u.current.set({
                        low: Math.min(Math.max(w.lowBandDecibels, 0), 10)
                    }), l.current && w && l.current.set({
                        wet: "number" == typeof w.targetPitchFrequencyRatio && w.targetPitchFrequencyRatio !== w.playbackRate ? 1 : 0,
                        pitch: op((null !== (L = w.targetPitchFrequencyRatio) && void 0 !== L ? L : w.playbackRate) / w.playbackRate)
                    }), s.current && w && s.current.set({
                        wet: w.reverbWetMix
                    }), a.current && a.current.set({
                        gain: Yc(p) && p.isPlaying ? p.gain : 0
                    }), Yc(p) && i.current && !h.current) {
                    var z = function() {
                        i.current._state.setStateAtTime("stopped", i.current.context.now())
                    };
                    if (i.current.onstop = function() {
                            z(), A({
                                type: Qc.PlaybackFinished
                            })
                        }, p.isPlaying && "stopped" === i.current.state) {
                        var U = (p.playbackPositionSeconds - w.startOffsetSeconds) * w.playbackRate;
                        i.current.start(void 0, U)
                    } else p.isPlaying || "started" !== i.current.state || (i.current.onstop = function() {
                        z(), i.current.context.clearTimeout(d.current)
                    }, i.current.stop())
                }
                return null !== (n = o.current) && void 0 !== n && n.paused && Yc(p) && p.isPlaying ? o.current.play().catch((function() {})) : !o.current || o.current.paused || Yc(p) && p.isPlaying || o.current.pause(), e.createElement(Hc.Provider, {
                    value: [p, A]
                }, r, e.createElement("audio", {
                    src: hv,
                    loop: !0,
                    ref: o
                }))
            }), null, e.createElement((function(t) {
                var n = t.children,
                    r = (0, e.useRef)(),
                    o = (0, e.useRef)(),
                    i = function(e, t) {
                        return function(e) {
                            if (Array.isArray(e)) return e
                        }(e) || function(e, t) {
                            var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                            if (null != n) {
                                var r, o, i, a, s = [],
                                    l = !0,
                                    u = !1;
                                try {
                                    for (i = (n = n.call(e)).next, 0; !(l = (r = i.call(n)).done) && (s.push(r.value), 2 !== s.length); l = !0);
                                } catch (e) {
                                    u = !0, o = e
                                } finally {
                                    try {
                                        if (!l && null != n.return && (a = n.return(), Object(a) !== a)) return
                                    } finally {
                                        if (u) throw o
                                    }
                                }
                                return s
                            }
                        }(e) || function(e, t) {
                            if (e) {
                                if ("string" == typeof e) return wv(e, 2);
                                var n = Object.prototype.toString.call(e).slice(8, -1);
                                return "Object" === n && e.constructor && (n = e.constructor.name), "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? wv(e, 2) : void 0
                            }
                        }(e) || function() {
                            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                        }()
                    }(Gc()),
                    a = i[0],
                    s = i[1],
                    l = Kc(),
                    u = yl().isActive,
                    c = $c(a),
                    h = Vm(),
                    d = yv(yv({}, u && a.defaults ? a.defaults : {
                        playbackRate: l ? 1.2 : bu,
                        reverbWetMix: l ? 0 : wu,
                        lowBandDecibels: 0
                    }), {}, {
                        startOffsetSeconds: 0,
                        endOffsetSeconds: 0
                    }),
                    f = function(e) {
                        var t = fp();
                        if (Yc(a) && c) {
                            var n = yv(yv({}, c), {}, {
                                id: t,
                                name: e.name,
                                startOffsetSeconds: 0,
                                endOffsetSeconds: 0
                            });
                            Dh(n) && delete n.audioBuffer, s({
                                type: Qc.PutRemix,
                                payload: {
                                    replacedRemixId: c.id,
                                    newRemix: n
                                }
                            })
                        } else s({
                            type: Qc.AppendRemixes,
                            payload: {
                                remixes: [yv({
                                    id: t,
                                    name: e.name
                                }, d)],
                                selectRemixIndex: !u && 0
                            }
                        });
                        jm(e).then((function(n) {
                            s({
                                type: Qc.DecodeSuccess,
                                payload: {
                                    remixId: t,
                                    audioBuffer: new bo(n),
                                    shouldPlay: !0
                                }
                            }), u && h.put([Bm(e, t)])
                        })).catch((function(e) {
                            console.error(e), s({
                                type: Qc.DecodeFailure,
                                payload: {
                                    remixId: t
                                }
                            })
                        }))
                    },
                    p = function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];
                        if (e.length) {
                            var t = new Map(e.map((function(e) {
                                    return [e, fp()]
                                }))),
                                n = e.map((function(e) {
                                    return yv({
                                        id: t.get(e),
                                        name: e.name
                                    }, d)
                                }));
                            s({
                                type: Qc.AppendRemixes,
                                payload: {
                                    remixes: n,
                                    selectRemixIndex: !Yc(a) && 0
                                }
                            }), e.map((function(e) {
                                return jm(e).then((function(n) {
                                    var r = t.get(e);
                                    s({
                                        type: Qc.DecodeSuccess,
                                        payload: {
                                            remixId: r,
                                            audioBuffer: new bo(n)
                                        }
                                    }), u && h.put([Bm(e, r)])
                                })).catch((function(n) {
                                    console.error(n), s({
                                        type: Qc.DecodeFailure,
                                        payload: {
                                            remixId: t.get(e)
                                        }
                                    })
                                }))
                            }))
                        }
                    };
                return (0, e.useEffect)((function() {
                    var e = function(e) {
                        var t, n;
                        e.preventDefault(), null !== (t = e.dataTransfer) && void 0 !== t && null !== (n = t.files) && void 0 !== n && n.length && (u ? p(Array.from(e.dataTransfer.files)) : f(e.dataTransfer.files[0]))
                    };
                    return document.addEventListener("dragover", bh), document.addEventListener("drop", e),
                        function() {
                            document.removeEventListener("dragover", bh), document.removeEventListener("drop", e)
                        }
                }), [u, p, f]), e.createElement(Tp.Provider, {
                    value: {
                        openFileAppendChooser: function() {
                            o.current && (o.current.value = "", o.current.click())
                        },
                        openFilePutChooser: function() {
                            r.current && (r.current.value = "", r.current.click())
                        }
                    }
                }, n, e.createElement("input", {
                    style: {
                        display: "none"
                    },
                    type: "file",
                    accept: ".mp3,.wav",
                    ref: r,
                    onChange: function() {
                        var e, t;
                        null !== (e = r.current) && void 0 !== e && null !== (t = e.files) && void 0 !== t && t.length && f(r.current.files[0])
                    }
                }), e.createElement("input", {
                    style: {
                        display: "none"
                    },
                    type: "file",
                    accept: ".mp3,.wav",
                    ref: o,
                    onChange: function() {
                        var e, t;
                        null !== (e = o.current) && void 0 !== e && null !== (t = e.files) && void 0 !== t && t.length && p(Array.from(o.current.files))
                    },
                    multiple: !0
                }))
            }), null, e.createElement((function() {
                var t, n, r = (0, e.useRef)(null),
                    o = _m((0, e.useState)(!1), 2),
                    i = o[0],
                    a = o[1],
                    s = _m((0, e.useState)(!1), 2),
                    l = s[0],
                    u = s[1],
                    c = _m((0, e.useState)(0), 2),
                    h = c[0],
                    d = c[1],
                    f = _m((0, e.useState)(0), 2),
                    p = f[0],
                    m = f[1],
                    v = _m((0, e.useState)(0), 2),
                    g = v[0],
                    y = v[1],
                    b = _m((0, e.useState)(), 2),
                    w = b[0],
                    _ = b[1],
                    x = _m(Gc(), 2),
                    E = x[0],
                    S = x[1],
                    k = $c(E),
                    T = Boolean(k),
                    C = _m((0, e.useState)(T), 2),
                    O = C[0],
                    A = C[1],
                    P = yl(),
                    R = P.isActive,
                    M = P.isFetching,
                    D = Mh(),
                    N = (t = Ls("/pro"), n = Ls("/pro.html"), t || n),
                    I = function() {
                        return u(!D.md)
                    };
                return T !== O && (A(T), T && !R && I()), !R && !w && Yc(E) && ("number" == typeof k.targetPitchFrequencyRatio || k.startOffsetSeconds + k.endOffsetSeconds > 0 || k.lowBandDecibels > 0) ? _(Date.now()) : w && (R || !Yc(E) || "number" != typeof k.targetPitchFrequencyRatio && k.startOffsetSeconds + k.endOffsetSeconds === 0 && 0 === k.lowBandDecibels) && _(void 0), (0, e.useEffect)((function() {
                    document.documentElement.style.background = R || w ? "#000" : "#400549"
                }), [R, w]), (0, e.useEffect)((function() {
                    if (Yc(E) && w && !R) {
                        var e = Date.now() - w,
                            t = function() {
                                _(void 0), S({
                                    type: Qc.EndProPreview
                                })
                            };
                        if (!(e > _u)) {
                            var n = setTimeout((function() {
                                t()
                            }), _u - (Date.now() - w));
                            return function() {
                                clearTimeout(n)
                            }
                        }
                        t()
                    }
                }), [w, R]), dm((function() {
                    a(!1)
                })), k && !D.md || !l || u(!1), e.createElement("div", {
                    className: Ou()("LplsXOnpIgFidTBOfLQo", (R || w) && "TMeClGFKPUfG8VyN9SDE")
                }, e.createElement("div", {
                    className: "k8HDg6dFMbaXiucCByx7",
                    ref: r,
                    onScroll: function() {
                        var e = r.current.scrollTop,
                            t = Math.max(e, 0);
                        m((function(e) {
                            var n = t - e;
                            return d((function(e) {
                                return Math.max(Math.min(e - n, 0), -g - 1)
                            })), t
                        }))
                    }
                }, l && k && e.createElement(vm, {
                    onClose: function() {
                        return u(!1)
                    },
                    topRightElement: e.createElement(wm, {
                        remix: k
                    })
                }, e.createElement(sm, {
                    lastProPreviewStartTimestamp: w
                })), e.createElement(ih, {
                    isOpen: i,
                    onDismiss: function() {
                        return a(!1)
                    }
                }), e.createElement("div", {
                    className: "qYN9dj1ggdUnfSqc_EPm"
                }, e.createElement("div", {
                    className: Ou()("Y_VpnAsSGqoL_ADPTGPj", N && "ZsX6vQitTbWf1LN2DwaO"),
                    ref: function(e) {
                        return e && y(e.clientHeight)
                    },
                    style: {
                        top: "".concat(h, "px"),
                        borderColor: "rgba(100, 100, 100, ".concat(p / g, ")")
                    }
                }, e.createElement(ch, {
                    onMenuClick: function() {
                        return a(!0)
                    }
                })), e.createElement("main", {
                    className: "i1jiTepcW1TZgRcVy0f6",
                    style: {
                        paddingTop: "".concat(g, "px")
                    }
                }, e.createElement(Zs, {
                    context: {
                        openEditor: I,
                        isEditorOpen: l,
                        lastProPreviewStartTimestamp: w
                    }
                })))), e.createElement("div", null, e.createElement(qh, {
                    onClick: I
                })), !D.md && !M && !R && !N && e.createElement("div", {
                    className: "fwmLgv5jsIzRdCBagRkv"
                }, e.createElement(um, null)))
            }), null))))))),
            errorElement: e.createElement($s, {
                to: "/",
                replace: !0
            }),
            children: [{
                index: !0,
                element: e.createElement(qm, null)
            }, {
                path: "nightcore",
                element: e.createElement(qm, null)
            }, {
                path: "nightcore.html",
                element: e.createElement(qm, null)
            }, {
                path: "pro",
                element: e.createElement(Ju, null)
            }, {
                path: "pro.html",
                element: e.createElement(Ju, null)
            }, {
                path: "privacy",
                element: e.createElement(ec, null)
            }, {
                path: "privacy.html",
                element: e.createElement(ec, null)
            }, {
                path: "blog",
                element: e.createElement(bc, null)
            }, {
                path: "blog.html",
                element: e.createElement(bc, null)
            }, {
                path: "blog/slowed-reverb-tutorial",
                element: e.createElement(oc, null)
            }, {
                path: "blog/slowed-reverb-tutorial.html",
                element: e.createElement(oc, null)
            }, {
                path: "blog/sped-up-nightcore-tutorial",
                element: e.createElement(ic, null)
            }, {
                path: "blog/sped-up-nightcore-tutorial.html",
                element: e.createElement(ic, null)
            }, {
                path: "changelog",
                element: e.createElement((function() {
                    return e.createElement("div", {
                        className: "x635t_ytz0fOnJH8U0Ei"
                    }, e.createElement("h1", {
                        className: "ldmEnkCCaXchv0DDcda7"
                    }, "Changes & updates"), e.createElement("ul", {
                        className: "OlC9H5cIVAlUYhvKfbjK"
                    }, e.createElement("li", null, e.createElement(kc, {
                        date: "May 28, 2025"
                    }, e.createElement(Tc, null, e.createElement(Ec, null), " Added bass booster."))), e.createElement("li", null, e.createElement(kc, {
                        date: "May 5, 2025"
                    }, e.createElement(Tc, null, e.createElement(Ec, null), " Added trimming controls."))), e.createElement("li", null, e.createElement(kc, {
                        date: "April 25, 2025"
                    }, e.createElement(Tc, null, e.createElement(Ec, null), " Optimized the app to more reliably handle downloading multiple remixes at the same time."))), e.createElement("li", null, e.createElement(kc, {
                        date: "April 2, 2025"
                    }, e.createElement(Tc, null, e.createElement(Ec, null), " Fixed several issues when playing and editing multiple remixes of the same file."))), e.createElement("li", null, e.createElement(kc, {
                        date: "March 20, 2025"
                    }, e.createElement(Tc, null, e.createElement(Ec, null), " Automatically select a remix when they're added if none was previously selected."), e.createElement(Tc, null, e.createElement(Ec, null), " Remember the last selected remix when loading the app."))), e.createElement("li", null, e.createElement(kc, {
                        date: "October 11, 2024"
                    }, e.createElement(Tc, null, e.createElement(xc, null), " ", e.createElement(Ec, null), " Merged remix editors into one interface."), e.createElement(Tc, null, e.createElement(xc, null), " ", e.createElement(Ec, null), " Reorganized app layout and navigation."))), e.createElement("li", null, e.createElement(kc, {
                        date: "October 4, 2024"
                    }, e.createElement(Tc, null, e.createElement(Ec, null), " Fixed stored remixes not loading their previous settings correctly."))), e.createElement("li", null, e.createElement(kc, {
                        date: "August 28, 2024"
                    }, e.createElement(Tc, null, e.createElement(Ec, null), " Added beta version of independent pitch control."))), e.createElement("li", null, e.createElement(kc, {
                        date: "August 7, 2024"
                    }, e.createElement(Tc, null, e.createElement(Ec, null), " Added buttons to quickly switch between Slowed+Reverb, Nightcore, and custom Default presets."))), e.createElement("li", null, e.createElement(kc, {
                        date: "July 28, 2024"
                    }, e.createElement(Tc, null, e.createElement(xc, null), " Remixes will now start playing right away."), e.createElement(Tc, null, e.createElement(xc, null), " Fixed in-progress remixes being deleted when you navigate to other pages in the app."))), e.createElement("li", null, e.createElement(kc, {
                        date: "May 11, 2024"
                    }, e.createElement(Tc, null, e.createElement(Ec, null), " Fixed audio not playing on iOS while the silencer was switched on."))), e.createElement("li", null, e.createElement(kc, {
                        date: "April 26, 2024"
                    }, e.createElement(Tc, null, e.createElement(Ec, null), " Decluttered interface on smaller screens, improved look and feel, and made room for upcoming features."))), e.createElement("li", null, e.createElement(kc, {
                        date: "February 24, 2024"
                    }, e.createElement(Tc, null, e.createElement(Ec, null), " Fixed an issue where the player wouldn't loop properly after seeking."))), e.createElement("li", null, e.createElement(kc, {
                        date: "January 21, 2024"
                    }, e.createElement(Tc, null, e.createElement(xc, null), " ", e.createElement(Ec, null), " Added audio waveform display for audio files."))), e.createElement("li", null, e.createElement(kc, {
                        date: "January 17, 2024"
                    }, e.createElement(Tc, null, e.createElement(Ec, null), " Added ability to set your own default speed and reverb settings."))), e.createElement("li", null, e.createElement(kc, {
                        date: "January 11, 2024"
                    }, e.createElement(Tc, null, e.createElement(Ec, null), " Added ability to download individual remixes."))), e.createElement("li", null, e.createElement(kc, {
                        date: "January 3, 2024"
                    }, e.createElement(Tc, null, e.createElement(Ec, null), " Added file storage between sessions on supported browsers."))), e.createElement("li", null, e.createElement(kc, {
                        date: "December 13, 2023"
                    }, e.createElement(Tc, null, e.createElement(Ec, null), " Added loop mode switch to change between looping all tracks, one track, or none."))), e.createElement("li", null, e.createElement(kc, {
                        date: "December 8, 2023"
                    }, e.createElement(Tc, null, e.createElement(xc, null), " ", e.createElement(Ec, null), " Added volume control.")))))
                }), null)
            }, {
                path: "faq",
                element: e.createElement((function() {
                    var t = yl().isActive;
                    return e.createElement("div", {
                        className: "WwwsIX7YxjW43w7FVKHL"
                    }, e.createElement("h1", {
                        className: "st0E6G5ToYoFL_BHAR7N"
                    }, "Frequently asked questions"), e.createElement("p", {
                        className: Cc
                    }, "Why does the pitch change when I adjust the speed?"), e.createElement("p", null, 'This is what naturally happens when sound is played at a different speed than normal, but it might be surprising if you\'re used to audiobook and podcast players, or other media apps that "correct" the pitch when you change the speed. The natural pitch changes are generally just considered a feature of slowed+reverb and nightcore remixes, but you can adjust the pitch and playback speed separately in the', " ", e.createElement(dl, {
                        to: "/pro",
                        state: {
                            perkId: "independent-pitch"
                        }
                    }, "Pro version of the app"), " ", "if you like."), e.createElement("p", {
                        className: Cc
                    }, "Will you make mobile and desktop apps?"), e.createElement("p", null, "For now, the focus is on providing a great web experience. Releasing native versions for every platform takes a lot of effort but doesn't improve the experience in a meaningful way. Offline support will be added in a future release."), e.createElement("p", {
                        className: Cc
                    }, "Could you integrate with my favorite music service?", " "), e.createElement("p", null, "It probably wouldn't be approved by them. The", " ", e.createElement(dl, {
                        to: "/extension"
                    }, "browser extension"), " works with many websites without integrating directly."), e.createElement("p", {
                        className: Cc
                    }, "Are you snooping on or stealing my audio files?"), e.createElement("p", null, "No, never. All of the audio processing happens right on your device, so your files and remixes aren't even transferred anywhere. File names are not logged or collected either."), e.createElement("p", {
                        className: Cc
                    }, "Who's building this?"), e.createElement("p", null, "SlowedAndReverb.Studio is remade by", " ", e.createElement("a", {
                        href: "https://crazim.com"
                    }, "Crazim"), ", a software developer and musician. He's also the creator of", " ", e.createElement("a", {
                        href: "https://generative.fm"
                    }, "Generative.fm"), "."), e.createElement("p", {
                        className: Cc
                    }, "Why do I have to buy SlowedAndReverb.Studio Pro through Gumroad? Is it secure?"), e.createElement("p", null, "Gumroad is a popular e-commerce platform we use to sell and manage subscriptions for SlowedAndReverb.Studio Pro. They process hundreds of millions of transactions every year, so it's safe to say they know what they're doing."), e.createElement("p", {
                        className: Cc
                    }, "What's a Pro license key?"), e.createElement("p", null, "When you purchase SlowedAndReverb.Studio Pro, you'll receive a license key. It's like a secret password that's tied to your subscription. We use license keys so you don't have to make an account with us."), e.createElement("p", {
                        className: Cc
                    }, "Can I cancel my subscription any time?"), e.createElement("p", null, "Of course! When you sign up for SlowedAndReverb.Studio, you'll receive a confirmation email that includes a link to cancel your subscription. You can also manage your subscription through", " ", t ? e.createElement(dl, {
                        to: "/settings"
                    }, "settings") : "settings", ", though you may need to re-enter the email address you used to purchase your subscription."))
                }), null)
            }, {
                path: "extension",
                element: e.createElement(zc, null)
            }, {
                path: "extension.html",
                element: e.createElement(zc, null)
            }, {
                path: "settings",
                element: e.createElement((function() {
                    var t, n, r, o = yl(),
                        i = o.isActive,
                        a = o.managementHref,
                        s = o.licenseKey,
                        l = o.clearLicenseKey,
                        u = o.endDate,
                        c = o.fetchFailure,
                        h = o.isFetching,
                        d = function(e, t) {
                            return function(e) {
                                if (Array.isArray(e)) return e
                            }(e) || function(e, t) {
                                var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                                if (null != n) {
                                    var r, o, i, a, s = [],
                                        l = !0,
                                        u = !1;
                                    try {
                                        for (i = (n = n.call(e)).next, 0; !(l = (r = i.call(n)).done) && (s.push(r.value), 2 !== s.length); l = !0);
                                    } catch (e) {
                                        u = !0, o = e
                                    } finally {
                                        try {
                                            if (!l && null != n.return && (a = n.return(), Object(a) !== a)) return
                                        } finally {
                                            if (u) throw o
                                        }
                                    }
                                    return s
                                }
                            }(e) || function(e, t) {
                                if (e) {
                                    if ("string" == typeof e) return Rv(e, 2);
                                    var n = Object.prototype.toString.call(e).slice(8, -1);
                                    return "Object" === n && e.constructor && (n = e.constructor.name), "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Rv(e, 2) : void 0
                                }
                            }(e) || function() {
                                throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                            }()
                        }(Gc()),
                        f = d[0],
                        p = d[1],
                        m = Jp(f),
                        v = (navigator.clipboard, !i && !c && function() {
                            l()
                        });
                    return e.createElement("div", {
                        className: "Qv27f43M_4RcmC9XuHGS"
                    }, e.createElement("h1", {
                        className: "wpzii__F05KhLM7NxCru"
                    }, "Settings"), " ", e.createElement("section", {
                        className: Ev
                    }, e.createElement("div", {
                        className: Sv
                    }, e.createElement("div", {
                        className: kv
                    }, "Custom defaults ", !i && e.createElement(Ec, null)), i && e.createElement("div", {
                        className: Tv
                    }, "View and remove your custom default settings for new remixes.")), e.createElement("div", {
                        className: Cv
                    }, e.createElement("div", {
                        className: Ov
                    }, i ? e.createElement(e.Fragment, null, e.createElement("div", {
                        className: Av
                    }, "Custom default remix settings"), m ? e.createElement(e.Fragment, null, f.defaults.playbackRate !== bu && e.createElement("div", {
                        className: Pv
                    }, "Playback rate:", " ", jh(f.defaults.playbackRate), e.createElement(Mu, {
                        onClick: function() {
                            p({
                                type: Qc.SetDefaults,
                                payload: {
                                    playbackRate: bu
                                }
                            })
                        }
                    }, "Reset")), void 0 !== f.defaults.targetPitchFrequencyRatio && e.createElement("div", {
                        className: Pv
                    }, "Pitch:", " ", Vh(f.defaults.targetPitchFrequencyRatio), e.createElement(Mu, {
                        onClick: function() {
                            p({
                                type: Qc.SetDefaults,
                                payload: {
                                    targetPitchFrequencyRatio: void 0
                                }
                            })
                        }
                    }, "Reset")), f.defaults.reverbWetMix !== wu && e.createElement("div", {
                        className: Pv
                    }, "Reverb:", " ", Fh(f.defaults.reverbWetMix), e.createElement(Mu, {
                        onClick: function() {
                            p({
                                type: Qc.SetDefaults,
                                payload: {
                                    reverbWetMix: wu
                                }
                            })
                        }
                    }, "Reset")), 0 !== f.defaults.lowBandDecibels && e.createElement("div", {
                        className: Pv
                    }, "Bass boost:", " ", Bh(f.defaults.lowBandDecibels), " ", e.createElement(Mu, {
                        onClick: function() {
                            p({
                                type: Qc.SetDefaults,
                                payload: {
                                    lowBandDecibels: 0
                                }
                            })
                        }
                    }, "Reset"))) : "No custom defaults set. You can set your own default settings for new remixes from the remix editor.") : e.createElement("span", null, e.createElement(dl, {
                        to: "/pro",
                        state: {
                            perkId: "custom-defaults"
                        }
                    }, "Upgrade to Pro"), " ", "to set custom default settings for new remixes.")))), s && e.createElement("section", {
                        className: Ev
                    }, e.createElement("div", {
                        className: Sv
                    }, e.createElement("div", {
                        className: kv
                    }, "Pro subscription"), e.createElement("div", {
                        className: Tv
                    }, "View and manage your subscription to SlowedAndReverb.Studio Pro.")), e.createElement("div", {
                        className: Cv
                    }, e.createElement("div", {
                        className: Ov
                    }, e.createElement("div", {
                        className: Av
                    }, "Subscription status"), e.createElement("div", {
                        className: "ADB_upHHnn3R2ULnWRKV"
                    }, h ? e.createElement(Tu, null) : c ? e.createElement("span", null, "Sorry, something went wrong while trying to verify your license key. Please ensure you have access to the internet from this device and try again in a few minutes. If the issue persists, contact", " ", e.createElement("a", {
                        href: "mailto:support@slowedandreverb.studio"
                    }, "support@slowedandreverb.studio"), ".") : i ? u ? e.createElement(xv, {
                        color: "yellow"
                    }, "Ends on ", (t = u, null !== (n = Intl) && void 0 !== n && n.DateTimeFormat ? new Intl.DateTimeFormat((null === (r = window.navigator.languages) || void 0 === r ? void 0 : r.slice()) || ["en-US"], {
                        dateStyle: "long"
                    }).format(t) : t.toString())) : "Active" : "Inactive"), a && e.createElement("a", {
                        href: a
                    }, "Manage subscription")), e.createElement("div", {
                        className: Ov
                    }, e.createElement("div", {
                        className: Av
                    }, "License key"), e.createElement(Wu, {
                        value: s,
                        isReadOnly: !0
                    }), e.createElement("div", {
                        className: "nMRxHCzqeREl0vqSkbGr"
                    }, v && e.createElement(Mu, {
                        onClick: v
                    }, "Remove"))))))
                }), null)
            }, {
                path: "help",
                element: e.createElement((function() {
                    return yl().licenseKey ? e.createElement("div", {
                        className: "i3LMpZPI9XwRlruxLSac"
                    }, e.createElement("h1", {
                        className: "GCPLAuWycyx5LGrc0SZq"
                    }, "Help & feedback"), e.createElement("p", null, "Email us at ", e.createElement("a", {
                        href: "mailto:".concat(Mv)
                    }, Mv), "."), e.createElement("p", null, "We'd love to hear your ideas or help you with any issues. You can generally expect a response within 24 hours.")) : e.createElement($s, {
                        to: "/",
                        replace: !0
                    })
                }), null)
            }]
        }], function(e) {
            const t = e.window ? e.window : "undefined" != typeof window ? window : void 0,
                n = void 0 !== t && void 0 !== t.document && void 0 !== t.document.createElement,
                r = !n;
            let o;
            if (da(e.routes.length > 0, "You must provide a non-empty routes array to createRouter"), e.mapRouteProperties) o = e.mapRouteProperties;
            else if (e.detectErrorBoundary) {
                let t = e.detectErrorBoundary;
                o = e => ({
                    hasErrorBoundary: t(e)
                })
            } else o = Za;
            let i, a = {},
                s = wa(e.routes, o, void 0, a),
                l = e.basename || "/",
                u = ca({
                    v7_fetcherPersist: !1,
                    v7_normalizeFormMethod: !1,
                    v7_prependBasename: !1
                }, e.future),
                c = null,
                h = new Set,
                d = null,
                f = null,
                p = null,
                m = null != e.hydrationData,
                v = _a(s, e.history.location, l),
                g = null;
            if (null == v) {
                let t = ds(404, {
                        pathname: e.history.location.pathname
                    }),
                    {
                        matches: n,
                        route: r
                    } = hs(s);
                v = n, g = {
                    [r.id]: t
                }
            }
            let y, b, w = !(v.some((e => e.route.lazy)) || v.some((e => e.route.loader)) && null == e.hydrationData),
                _ = {
                    historyAction: e.history.action,
                    location: e.history.location,
                    matches: v,
                    initialized: w,
                    navigation: Ga,
                    restoreScrollPosition: null == e.hydrationData && null,
                    preventScrollReset: !1,
                    revalidation: "idle",
                    loaderData: e.hydrationData && e.hydrationData.loaderData || {},
                    actionData: e.hydrationData && e.hydrationData.actionData || null,
                    errors: e.hydrationData && e.hydrationData.errors || g,
                    fetchers: new Map,
                    blockers: new Map
                },
                x = la.Pop,
                E = !1,
                S = !1,
                k = new Map,
                T = null,
                C = !1,
                O = !1,
                A = [],
                P = [],
                R = new Map,
                M = 0,
                D = -1,
                N = new Map,
                I = new Set,
                L = new Map,
                q = new Map,
                j = new Set,
                F = new Map,
                V = new Map,
                B = !1;

            function z(e, t) {
                _ = ca({}, _, e);
                let n = [],
                    r = [];
                u.v7_fetcherPersist && _.fetchers.forEach(((e, t) => {
                    "idle" === e.state && (j.has(t) ? r.push(t) : n.push(t))
                })), h.forEach((e => e(_, {
                    deletedFetchers: r,
                    unstable_viewTransitionOpts: t
                }))), u.v7_fetcherPersist && (n.forEach((e => _.fetchers.delete(e))), r.forEach((e => Z(e))))
            }

            function U(t, n) {
                var r, o;
                let a, l = null != _.actionData && null != _.navigation.formMethod && ys(_.navigation.formMethod) && "loading" === _.navigation.state && !0 !== (null == (r = t.state) ? void 0 : r._isRedirect);
                a = n.actionData ? Object.keys(n.actionData).length > 0 ? n.actionData : null : l ? _.actionData : null;
                let u = n.loaderData ? us(_.loaderData, n.loaderData, n.matches || [], n.errors) : _.loaderData,
                    c = _.blockers;
                c.size > 0 && (c = new Map(c), c.forEach(((e, t) => c.set(t, Ya))));
                let h, d = !0 === E || null != _.navigation.formMethod && ys(_.navigation.formMethod) && !0 !== (null == (o = t.state) ? void 0 : o._isRedirect);
                if (i && (s = i, i = void 0), C || x === la.Pop || (x === la.Push ? e.history.push(t, t.state) : x === la.Replace && e.history.replace(t, t.state)), x === la.Pop) {
                    let e = k.get(_.location.pathname);
                    e && e.has(t.pathname) ? h = {
                        currentLocation: _.location,
                        nextLocation: t
                    } : k.has(t.pathname) && (h = {
                        currentLocation: t,
                        nextLocation: _.location
                    })
                } else if (S) {
                    let e = k.get(_.location.pathname);
                    e ? e.add(t.pathname) : (e = new Set([t.pathname]), k.set(_.location.pathname, e)), h = {
                        currentLocation: _.location,
                        nextLocation: t
                    }
                }
                z(ca({}, n, {
                    actionData: a,
                    loaderData: u,
                    historyAction: x,
                    location: t,
                    initialized: !0,
                    navigation: Ga,
                    revalidation: "idle",
                    restoreScrollPosition: ae(t, n.matches || _.matches),
                    preventScrollReset: d,
                    blockers: c
                }), h), x = la.Pop, E = !1, S = !1, C = !1, O = !1, A = [], P = []
            }
            async function W(t, n, r) {
                b && b.abort(), b = null, x = t, C = !0 === (r && r.startUninterruptedRevalidation),
                    function(e, t) {
                        if (d && p) {
                            let n = ie(e, t);
                            d[n] = p()
                        }
                    }(_.location, _.matches), E = !0 === (r && r.preventScrollReset), S = !0 === (r && r.enableViewTransition);
                let u = i || s,
                    c = r && r.overrideNavigation,
                    h = _a(u, n, l);
                if (!h) {
                    let e = ds(404, {
                            pathname: n.pathname
                        }),
                        {
                            matches: t,
                            route: r
                        } = hs(u);
                    return oe(), void U(n, {
                        matches: t,
                        loaderData: {},
                        errors: {
                            [r.id]: e
                        }
                    })
                }
                if (_.initialized && !O && (m = n, (f = _.location).pathname === m.pathname && f.search === m.search && ("" === f.hash ? "" !== m.hash : f.hash === m.hash || "" !== m.hash)) && !(r && r.submission && ys(r.submission.formMethod))) return void U(n, {
                    matches: h
                });
                var f, m;
                b = new AbortController;
                let v, g, y = is(e.history, n, b.signal, r && r.submission);
                if (r && r.pendingError) g = {
                    [cs(h).route.id]: r.pendingError
                };
                else if (r && r.submission && ys(r.submission.formMethod)) {
                    let e = await async function(e, t, n, r, i) {
                        void 0 === i && (i = {}), Y();
                        let s, u = function(e, t) {
                            return {
                                state: "submitting",
                                location: e,
                                formMethod: t.formMethod,
                                formAction: t.formAction,
                                formEncType: t.formEncType,
                                formData: t.formData,
                                json: t.json,
                                text: t.text
                            }
                        }(t, n);
                        z({
                            navigation: u
                        });
                        let c = xs(r, t);
                        if (c.route.action || c.route.lazy) {
                            if (s = await os("action", e, c, r, a, o, l), e.signal.aborted) return {
                                shortCircuited: !0
                            }
                        } else s = {
                            type: ya.error,
                            error: ds(405, {
                                method: e.method,
                                pathname: t.pathname,
                                routeId: c.route.id
                            })
                        };
                        if (gs(s)) {
                            let e;
                            return e = i && null != i.replace ? i.replace : s.location === _.location.pathname + _.location.search, await G(_, s, {
                                submission: n,
                                replace: e
                            }), {
                                shortCircuited: !0
                            }
                        }
                        if (vs(s)) {
                            let e = cs(r, c.route.id);
                            return !0 !== (i && i.replace) && (x = la.Push), {
                                pendingActionData: {},
                                pendingActionError: {
                                    [e.route.id]: s.error
                                }
                            }
                        }
                        if (ms(s)) throw ds(400, {
                            type: "defer-action"
                        });
                        return {
                            pendingActionData: {
                                [c.route.id]: s.data
                            }
                        }
                    }(y, n, r.submission, h, {
                        replace: r.replace
                    });
                    if (e.shortCircuited) return;
                    v = e.pendingActionData, g = e.pendingActionError, c = Ss(n, r.submission), y = new Request(y.url, {
                        signal: y.signal
                    })
                }
                let {
                    shortCircuited: w,
                    loaderData: k,
                    errors: T
                } = await async function(t, n, r, o, a, u, c, h, d) {
                    let f = o || Ss(n, a),
                        p = a || u || Es(f),
                        m = i || s,
                        [v, g] = es(e.history, _, r, p, n, O, A, P, L, I, m, l, h, d);
                    if (oe((e => !(r && r.some((t => t.route.id === e))) || v && v.some((t => t.route.id === e)))), D = ++M, 0 === v.length && 0 === g.length) {
                        let e = J();
                        return U(n, ca({
                            matches: r,
                            loaderData: {},
                            errors: d || null
                        }, h ? {
                            actionData: h
                        } : {}, e ? {
                            fetchers: new Map(_.fetchers)
                        } : {})), {
                            shortCircuited: !0
                        }
                    }
                    if (!C) {
                        g.forEach((e => {
                            let t = _.fetchers.get(e.key),
                                n = ks(void 0, t ? t.data : void 0);
                            _.fetchers.set(e.key, n)
                        }));
                        let e = h || _.actionData;
                        z(ca({
                            navigation: f
                        }, e ? 0 === Object.keys(e).length ? {
                            actionData: null
                        } : {
                            actionData: e
                        } : {}, g.length > 0 ? {
                            fetchers: new Map(_.fetchers)
                        } : {}))
                    }
                    g.forEach((e => {
                        R.has(e.key) && X(e.key), e.controller && R.set(e.key, e.controller)
                    }));
                    let y = () => g.forEach((e => X(e.key)));
                    b && b.signal.addEventListener("abort", y);
                    let {
                        results: w,
                        loaderResults: x,
                        fetcherResults: E
                    } = await Q(_.matches, r, v, g, t);
                    if (t.signal.aborted) return {
                        shortCircuited: !0
                    };
                    b && b.signal.removeEventListener("abort", y), g.forEach((e => R.delete(e.key)));
                    let S = fs(w);
                    if (S) {
                        if (S.idx >= v.length) {
                            let e = g[S.idx - v.length].key;
                            I.add(e)
                        }
                        return await G(_, S.result, {
                            replace: c
                        }), {
                            shortCircuited: !0
                        }
                    }
                    let {
                        loaderData: k,
                        errors: T
                    } = ls(_, r, v, x, d, g, E, F);
                    F.forEach(((e, t) => {
                        e.subscribe((n => {
                            (n || e.done) && F.delete(t)
                        }))
                    }));
                    let N = J(),
                        q = ee(D);
                    return ca({
                        loaderData: k,
                        errors: T
                    }, N || q || g.length > 0 ? {
                        fetchers: new Map(_.fetchers)
                    } : {})
                }(y, n, h, c, r && r.submission, r && r.fetcherSubmission, r && r.replace, v, g);
                w || (b = null, U(n, ca({
                    matches: h
                }, v ? {
                    actionData: v
                } : {}, {
                    loaderData: k,
                    errors: T
                })))
            }

            function H(e) {
                return u.v7_fetcherPersist && (q.set(e, (q.get(e) || 0) + 1), j.has(e) && j.delete(e)), _.fetchers.get(e) || Qa
            }
            async function G(r, o, i) {
                let {
                    submission: a,
                    fetcherSubmission: s,
                    replace: u
                } = void 0 === i ? {} : i;
                o.revalidate && (O = !0);
                let c = ma(r.location, o.location, {
                    _isRedirect: !0
                });
                if (da(c, "Expected a location on the redirect navigation"), n) {
                    let n = !1;
                    if (o.reloadDocument) n = !0;
                    else if ($a.test(o.location)) {
                        const r = e.history.createURL(o.location);
                        n = r.origin !== t.location.origin || null == Pa(r.pathname, l)
                    }
                    if (n) return void(u ? t.location.replace(o.location) : t.location.assign(o.location))
                }
                b = null;
                let h = !0 === u ? la.Replace : la.Push,
                    {
                        formMethod: d,
                        formAction: f,
                        formEncType: p
                    } = r.navigation;
                !a && !s && d && f && p && (a = Es(r.navigation));
                let m = a || s;
                if (Ha.has(o.status) && m && ys(m.formMethod)) await W(h, c, {
                    submission: ca({}, m, {
                        formAction: o.location
                    }),
                    preventScrollReset: E
                });
                else {
                    let e = Ss(c, a);
                    await W(h, c, {
                        overrideNavigation: e,
                        fetcherSubmission: s,
                        preventScrollReset: E
                    })
                }
            }
            async function Q(t, n, r, i, s) {
                let u = await Promise.all([...r.map((e => os("loader", s, e, n, a, o, l))), ...i.map((t => t.matches && t.match && t.controller ? os("loader", is(e.history, t.path, t.controller.signal), t.match, t.matches, a, o, l) : {
                        type: ya.error,
                        error: ds(404, {
                            pathname: t.path
                        })
                    }))]),
                    c = u.slice(0, r.length),
                    h = u.slice(r.length);
                return await Promise.all([bs(t, r, c, c.map((() => s.signal)), !1, _.loaderData), bs(t, i.map((e => e.match)), h, i.map((e => e.controller ? e.controller.signal : null)), !0)]), {
                    results: u,
                    loaderResults: c,
                    fetcherResults: h
                }
            }

            function Y() {
                O = !0, A.push(...oe()), L.forEach(((e, t) => {
                    R.has(t) && (P.push(t), X(t))
                }))
            }

            function $(e, t, n) {
                let r = cs(_.matches, t);
                Z(e), z({
                    errors: {
                        [r.route.id]: n
                    },
                    fetchers: new Map(_.fetchers)
                })
            }

            function Z(e) {
                let t = _.fetchers.get(e);
                !R.has(e) || t && "loading" === t.state && N.has(e) || X(e), L.delete(e), N.delete(e), I.delete(e), j.delete(e), _.fetchers.delete(e)
            }

            function X(e) {
                let t = R.get(e);
                da(t, "Expected fetch controller: " + e), t.abort(), R.delete(e)
            }

            function K(e) {
                for (let t of e) {
                    let e = Ts(H(t).data);
                    _.fetchers.set(t, e)
                }
            }

            function J() {
                let e = [],
                    t = !1;
                for (let n of I) {
                    let r = _.fetchers.get(n);
                    da(r, "Expected fetcher: " + n), "loading" === r.state && (I.delete(n), e.push(n), t = !0)
                }
                return K(e), t
            }

            function ee(e) {
                let t = [];
                for (let [n, r] of N)
                    if (r < e) {
                        let e = _.fetchers.get(n);
                        da(e, "Expected fetcher: " + n), "loading" === e.state && (X(n), N.delete(n), t.push(n))
                    } return K(t), t.length > 0
            }

            function te(e) {
                _.blockers.delete(e), V.delete(e)
            }

            function ne(e, t) {
                let n = _.blockers.get(e) || Ya;
                da("unblocked" === n.state && "blocked" === t.state || "blocked" === n.state && "blocked" === t.state || "blocked" === n.state && "proceeding" === t.state || "blocked" === n.state && "unblocked" === t.state || "proceeding" === n.state && "unblocked" === t.state, "Invalid blocker state transition: " + n.state + " -> " + t.state);
                let r = new Map(_.blockers);
                r.set(e, t), z({
                    blockers: r
                })
            }

            function re(e) {
                let {
                    currentLocation: t,
                    nextLocation: n,
                    historyAction: r
                } = e;
                if (0 === V.size) return;
                V.size > 1 && fa(!1, "A router only supports one blocker at a time");
                let o = Array.from(V.entries()),
                    [i, a] = o[o.length - 1],
                    s = _.blockers.get(i);
                return s && "proceeding" === s.state ? void 0 : a({
                    currentLocation: t,
                    nextLocation: n,
                    historyAction: r
                }) ? i : void 0
            }

            function oe(e) {
                let t = [];
                return F.forEach(((n, r) => {
                    e && !e(r) || (n.cancel(), t.push(r), F.delete(r))
                })), t
            }

            function ie(e, t) {
                return f && f(e, t.map((e => function(e, t) {
                    let {
                        route: n,
                        pathname: r,
                        params: o
                    } = e;
                    return {
                        id: n.id,
                        pathname: r,
                        params: o,
                        data: t[n.id],
                        handle: n.handle
                    }
                }(e, _.loaderData)))) || e.key
            }

            function ae(e, t) {
                if (d) {
                    let n = ie(e, t),
                        r = d[n];
                    if ("number" == typeof r) return r
                }
                return null
            }
            return y = {
                get basename() {
                    return l
                },
                get state() {
                    return _
                },
                get routes() {
                    return s
                },
                get window() {
                    return t
                },
                initialize: function() {
                    if (c = e.history.listen((t => {
                            let {
                                action: n,
                                location: r,
                                delta: o
                            } = t;
                            if (B) return void(B = !1);
                            fa(0 === V.size || null != o, "You are trying to use a blocker on a POP navigation to a location that was not created by @remix-run/router. This will fail silently in production. This can happen if you are navigating outside the router via `window.history.pushState`/`window.location.hash` instead of using router navigation APIs.  This can also happen if you are using createHashRouter and the user manually changes the URL.");
                            let i = re({
                                currentLocation: _.location,
                                nextLocation: r,
                                historyAction: n
                            });
                            return i && null != o ? (B = !0, e.history.go(-1 * o), void ne(i, {
                                state: "blocked",
                                location: r,
                                proceed() {
                                    ne(i, {
                                        state: "proceeding",
                                        proceed: void 0,
                                        reset: void 0,
                                        location: r
                                    }), e.history.go(o)
                                },
                                reset() {
                                    let e = new Map(_.blockers);
                                    e.set(i, Ya), z({
                                        blockers: e
                                    })
                                }
                            })) : W(n, r)
                        })), n) {
                        ! function(e, t) {
                            try {
                                let n = e.sessionStorage.getItem(Xa);
                                if (n) {
                                    let e = JSON.parse(n);
                                    for (let [n, r] of Object.entries(e || {})) r && Array.isArray(r) && t.set(n, new Set(r || []))
                                }
                            } catch (e) {}
                        }(t, k);
                        let e = () => function(e, t) {
                            if (t.size > 0) {
                                let n = {};
                                for (let [e, r] of t) n[e] = [...r];
                                try {
                                    e.sessionStorage.setItem(Xa, JSON.stringify(n))
                                } catch (e) {
                                    fa(!1, "Failed to save applied view transitions in sessionStorage (" + e + ").")
                                }
                            }
                        }(t, k);
                        t.addEventListener("pagehide", e), T = () => t.removeEventListener("pagehide", e)
                    }
                    return _.initialized || W(la.Pop, _.location), y
                },
                subscribe: function(e) {
                    return h.add(e), () => h.delete(e)
                },
                enableScrollRestoration: function(e, t, n) {
                    if (d = e, p = t, f = n || null, !m && _.navigation === Ga) {
                        m = !0;
                        let e = ae(_.location, _.matches);
                        null != e && z({
                            restoreScrollPosition: e
                        })
                    }
                    return () => {
                        d = null, p = null, f = null
                    }
                },
                navigate: async function t(n, r) {
                    if ("number" == typeof n) return void e.history.go(n);
                    let o = Ka(_.location, _.matches, l, u.v7_prependBasename, n, null == r ? void 0 : r.fromRouteId, null == r ? void 0 : r.relative),
                        {
                            path: i,
                            submission: a,
                            error: s
                        } = Ja(u.v7_normalizeFormMethod, !1, o, r),
                        c = _.location,
                        h = ma(_.location, i, r && r.state);
                    h = ca({}, h, e.history.encodeLocation(h));
                    let d = r && null != r.replace ? r.replace : void 0,
                        f = la.Push;
                    !0 === d ? f = la.Replace : !1 === d || null != a && ys(a.formMethod) && a.formAction === _.location.pathname + _.location.search && (f = la.Replace);
                    let p = r && "preventScrollReset" in r ? !0 === r.preventScrollReset : void 0,
                        m = re({
                            currentLocation: c,
                            nextLocation: h,
                            historyAction: f
                        });
                    if (!m) return await W(f, h, {
                        submission: a,
                        pendingError: s,
                        preventScrollReset: p,
                        replace: r && r.replace,
                        enableViewTransition: r && r.unstable_viewTransition
                    });
                    ne(m, {
                        state: "blocked",
                        location: h,
                        proceed() {
                            ne(m, {
                                state: "proceeding",
                                proceed: void 0,
                                reset: void 0,
                                location: h
                            }), t(n, r)
                        },
                        reset() {
                            let e = new Map(_.blockers);
                            e.set(m, Ya), z({
                                blockers: e
                            })
                        }
                    })
                },
                fetch: function(t, n, c, h) {
                    if (r) throw new Error("router.fetch() was called during the server render, but it shouldn't be. You are likely calling a useFetcher() method in the body of your component. Try moving it to a useEffect or a callback.");
                    R.has(t) && X(t);
                    let d = i || s,
                        f = Ka(_.location, _.matches, l, u.v7_prependBasename, c, n, null == h ? void 0 : h.relative),
                        p = _a(d, f, l);
                    if (!p) return void $(t, n, ds(404, {
                        pathname: f
                    }));
                    let {
                        path: m,
                        submission: v,
                        error: g
                    } = Ja(u.v7_normalizeFormMethod, !0, f, h);
                    if (g) return void $(t, n, g);
                    let y = xs(p, m);
                    E = !0 === (h && h.preventScrollReset), v && ys(v.formMethod) ? async function(t, n, r, u, c, h) {
                        if (Y(), L.delete(t), !u.route.action && !u.route.lazy) {
                            let e = ds(405, {
                                method: h.formMethod,
                                pathname: r,
                                routeId: n
                            });
                            return void $(t, n, e)
                        }
                        let d = function(e, t) {
                            return {
                                state: "submitting",
                                formMethod: e.formMethod,
                                formAction: e.formAction,
                                formEncType: e.formEncType,
                                formData: e.formData,
                                json: e.json,
                                text: e.text,
                                data: t ? t.data : void 0
                            }
                        }(h, _.fetchers.get(t));
                        _.fetchers.set(t, d), z({
                            fetchers: new Map(_.fetchers)
                        });
                        let f = new AbortController,
                            p = is(e.history, r, f.signal, h);
                        R.set(t, f);
                        let m = M,
                            v = await os("action", p, u, c, a, o, l);
                        if (p.signal.aborted) return void(R.get(t) === f && R.delete(t));
                        if (j.has(t)) return _.fetchers.set(t, Ts(void 0)), void z({
                            fetchers: new Map(_.fetchers)
                        });
                        if (gs(v)) {
                            if (R.delete(t), D > m) {
                                let e = Ts(void 0);
                                return _.fetchers.set(t, e), void z({
                                    fetchers: new Map(_.fetchers)
                                })
                            } {
                                I.add(t);
                                let e = ks(h);
                                return _.fetchers.set(t, e), z({
                                    fetchers: new Map(_.fetchers)
                                }), G(_, v, {
                                    fetcherSubmission: h
                                })
                            }
                        }
                        if (vs(v)) return void $(t, n, v.error);
                        if (ms(v)) throw ds(400, {
                            type: "defer-action"
                        });
                        let g = _.navigation.location || _.location,
                            y = is(e.history, g, f.signal),
                            w = i || s,
                            E = "idle" !== _.navigation.state ? _a(w, _.navigation.location, l) : _.matches;
                        da(E, "Didn't find any matches after fetcher action");
                        let S = ++M;
                        N.set(t, S);
                        let k = ks(h, v.data);
                        _.fetchers.set(t, k);
                        let [T, C] = es(e.history, _, E, h, g, O, A, P, L, I, w, l, {
                            [u.route.id]: v.data
                        }, void 0);
                        C.filter((e => e.key !== t)).forEach((e => {
                            let t = e.key,
                                n = _.fetchers.get(t),
                                r = ks(void 0, n ? n.data : void 0);
                            _.fetchers.set(t, r), R.has(t) && X(t), e.controller && R.set(t, e.controller)
                        })), z({
                            fetchers: new Map(_.fetchers)
                        });
                        let q = () => C.forEach((e => X(e.key)));
                        f.signal.addEventListener("abort", q);
                        let {
                            results: V,
                            loaderResults: B,
                            fetcherResults: W
                        } = await Q(_.matches, E, T, C, y);
                        if (f.signal.aborted) return;
                        f.signal.removeEventListener("abort", q), N.delete(t), R.delete(t), C.forEach((e => R.delete(e.key)));
                        let H = fs(V);
                        if (H) {
                            if (H.idx >= T.length) {
                                let e = C[H.idx - T.length].key;
                                I.add(e)
                            }
                            return G(_, H.result)
                        }
                        let {
                            loaderData: Z,
                            errors: K
                        } = ls(_, _.matches, T, B, void 0, C, W, F);
                        if (_.fetchers.has(t)) {
                            let e = Ts(v.data);
                            _.fetchers.set(t, e)
                        }
                        ee(S), "loading" === _.navigation.state && S > D ? (da(x, "Expected pending action"), b && b.abort(), U(_.navigation.location, {
                            matches: E,
                            loaderData: Z,
                            errors: K,
                            fetchers: new Map(_.fetchers)
                        })) : (z({
                            errors: K,
                            loaderData: us(_.loaderData, Z, E, K),
                            fetchers: new Map(_.fetchers)
                        }), O = !1)
                    }(t, n, m, y, p, v): (L.set(t, {
                        routeId: n,
                        path: m
                    }), async function(t, n, r, i, s, u) {
                        let c = _.fetchers.get(t),
                            h = ks(u, c ? c.data : void 0);
                        _.fetchers.set(t, h), z({
                            fetchers: new Map(_.fetchers)
                        });
                        let d = new AbortController,
                            f = is(e.history, r, d.signal);
                        R.set(t, d);
                        let p = M,
                            m = await os("loader", f, i, s, a, o, l);
                        if (ms(m) && (m = await ws(m, f.signal, !0) || m), R.get(t) === d && R.delete(t), f.signal.aborted) return;
                        if (j.has(t)) return _.fetchers.set(t, Ts(void 0)), void z({
                            fetchers: new Map(_.fetchers)
                        });
                        if (gs(m)) {
                            if (D > p) {
                                let e = Ts(void 0);
                                return _.fetchers.set(t, e), void z({
                                    fetchers: new Map(_.fetchers)
                                })
                            }
                            return I.add(t), void await G(_, m)
                        }
                        if (vs(m)) return void $(t, n, m.error);
                        da(!ms(m), "Unhandled fetcher deferred data");
                        let v = Ts(m.data);
                        _.fetchers.set(t, v), z({
                            fetchers: new Map(_.fetchers)
                        })
                    }(t, n, m, y, p, v))
                },
                revalidate: function() {
                    Y(), z({
                        revalidation: "loading"
                    }), "submitting" !== _.navigation.state && ("idle" !== _.navigation.state ? W(x || _.historyAction, _.navigation.location, {
                        overrideNavigation: _.navigation
                    }) : W(_.historyAction, _.location, {
                        startUninterruptedRevalidation: !0
                    }))
                },
                createHref: t => e.history.createHref(t),
                encodeLocation: t => e.history.encodeLocation(t),
                getFetcher: H,
                deleteFetcher: function(e) {
                    if (u.v7_fetcherPersist) {
                        let t = (q.get(e) || 0) - 1;
                        t <= 0 ? (q.delete(e), j.add(e)) : q.set(e, t)
                    } else Z(e);
                    z({
                        fetchers: new Map(_.fetchers)
                    })
                },
                dispose: function() {
                    c && c(), T && T(), h.clear(), b && b.abort(), _.fetchers.forEach(((e, t) => Z(t))), _.blockers.forEach(((e, t) => te(t)))
                },
                getBlocker: function(e, t) {
                    let n = _.blockers.get(e) || Ya;
                    return V.get(e) !== t && V.set(e, t), n
                },
                deleteBlocker: te,
                _internalFetchControllers: R,
                _internalActiveDeferreds: F,
                _internalSetRoutes: function(e) {
                    a = {}, i = wa(e, o, void 0, a)
                }
            }, y
        }({
            basename: void 0,
            future: Ks({}, void 0, {
                v7_prependBasename: !0
            }),
            history: (ag = {
                window: void 0
            }, void 0 === ag && (ag = {}), function(e, t, n, r) {
                void 0 === r && (r = {});
                let {
                    window: o = document.defaultView,
                    v5Compat: i = !1
                } = r, a = o.history, s = la.Pop, l = null, u = c();

                function c() {
                    return (a.state || {
                        idx: null
                    }).idx
                }

                function h() {
                    s = la.Pop;
                    let e = c(),
                        t = null == e ? null : e - u;
                    u = e, l && l({
                        action: s,
                        location: f.location,
                        delta: t
                    })
                }

                function d(e) {
                    let t = "null" !== o.location.origin ? o.location.origin : o.location.href,
                        n = "string" == typeof e ? e : va(e);
                    return da(t, "No window.location.(origin|href) available to create URL for href: " + n), new URL(n, t)
                }
                null == u && (u = 0, a.replaceState(ca({}, a.state, {
                    idx: u
                }), ""));
                let f = {
                    get action() {
                        return s
                    },
                    get location() {
                        return function(e, t) {
                            let {
                                pathname: n,
                                search: r,
                                hash: o
                            } = e.location;
                            return ma("", {
                                pathname: n,
                                search: r,
                                hash: o
                            }, t.state && t.state.usr || null, t.state && t.state.key || "default")
                        }(o, a)
                    },
                    listen(e) {
                        if (l) throw new Error("A history only accepts one active listener");
                        return o.addEventListener(ha, h), l = e, () => {
                            o.removeEventListener(ha, h), l = null
                        }
                    },
                    createHref: e => function(e, t) {
                        return "string" == typeof t ? t : va(t)
                    }(0, e),
                    createURL: d,
                    encodeLocation(e) {
                        let t = d(e);
                        return {
                            pathname: t.pathname,
                            search: t.search,
                            hash: t.hash
                        }
                    },
                    push: function(e, t) {
                        s = la.Push;
                        let n = ma(f.location, e, t);
                        u = c() + 1;
                        let r = pa(n, u),
                            h = f.createHref(n);
                        try {
                            a.pushState(r, "", h)
                        } catch (e) {
                            if (e instanceof DOMException && "DataCloneError" === e.name) throw e;
                            o.location.assign(h)
                        }
                        i && l && l({
                            action: s,
                            location: f.location,
                            delta: 1
                        })
                    },
                    replace: function(e, t) {
                        s = la.Replace;
                        let n = ma(f.location, e, t);
                        u = c();
                        let r = pa(n, u),
                            o = f.createHref(n);
                        a.replaceState(r, "", o), i && l && l({
                            action: s,
                            location: f.location,
                            delta: 0
                        })
                    },
                    go: e => a.go(e)
                };
                return f
            }(0, 0, 0, ag)),
            hydrationData: function() {
                var e;
                let t = null == (e = window) ? void 0 : e.__staticRouterHydrationData;
                return t && t.errors && (t = Ks({}, t, {
                    errors: rl(t.errors)
                })), t
            }(),
            routes: ig,
            mapRouteProperties: function(t) {
                let n = {
                    hasErrorBoundary: null != t.ErrorBoundary || null != t.errorElement
                };
                return t.Component && Object.assign(n, {
                    element: e.createElement(t.Component),
                    Component: void 0
                }), t.ErrorBoundary && Object.assign(n, {
                    errorElement: e.createElement(t.ErrorBoundary),
                    ErrorBoundary: void 0
                }), n
            },
            window: void 0
        }).initialize());
        (0, ua.s)(document.getElementById("root")).render(e.createElement((function() {
            return (0, e.useEffect)((function() {
                Bu([{
                    name: "visit"
                }])
            }), []), e.createElement(ll, {
                router: sg
            })
        }), null))
    })()
})(), document.addEventListener("DOMContentLoaded", (function() {
    document.querySelectorAll(".rvtins2V7g4THcpEvSRm, .mGIDCV4c_Utm8qEAJEwW.dh6oxzn9aPi_aFCj3wlL, .LmaljbxPoiRQ4WIZL0LR, .FyWNg9dmrY7mdYTbECrV.UqSipdrLfK3FjEf4VtON, .eNYjmfb4gphEQBHsWSEb, .I4q0qfaThTQlnFJyJFls, .Fht4HBFEY8se7lQiAhCV, .mGIDCV4c_Utm8qEAJEwW.dh6oxzn9aPi_aFCj3wlL.BmHjh0Ors5QFoqzFPBbB").forEach((e => {
        e.style.display = "none"
    }))
}));
const observer = new MutationObserver((() => {
    document.querySelectorAll(".rvtins2V7g4THcpEvSRm, .mGIDCV4c_Utm8qEAJEwW.dh6oxzn9aPi_aFCj3wlL, .LmaljbxPoiRQ4WIZL0LR, .FyWNg9dmrY7mdYTbECrV.UqSipdrLfK3FjEf4VtON, .eNYjmfb4gphEQBHsWSEb, .I4q0qfaThTQlnFJyJFls, .Fht4HBFEY8se7lQiAhCV, .mGIDCV4c_Utm8qEAJEwW.dh6oxzn9aPi_aFCj3wlL.BmHjh0Ors5QFoqzFPBbB").forEach((e => {
        e.style.display = "none"
    }))
}));
observer.observe(document.body, {
    childList: !0,
    subtree: !0
});
